{"version":3,"file":"erebus-components.min.js","sources":["../node_modules/erebus-core/src/utils.mjs","../node_modules/erebus-core/src/random.mjs","../node_modules/erebus-core/src/events.mjs","../node_modules/erebus-core/src/handler.mjs","../node_modules/erebus-core/src/element.mjs","../node_modules/erebus-core/src/http.mjs","../node_modules/erebus-core/src/i18n.mjs","../node_modules/erebus-core/src/erebus.mjs","../src/component.mjs","../src/utils.mjs","../src/surface.mjs","../src/protect.mjs","../src/manager.mjs","../src/toast.mjs","../src/dialog.mjs","../src/erebus-components.mjs"],"sourcesContent":["const $module = {};\r\n\r\n/**\r\n * Allows to determine if a specific instance is a promise object (or a promise-like object)\r\n * @param {*} value Object to evaluate\r\n * @returns Boolean value to determine if the object is a promise or not\r\n */\r\n$module.isPromise = function(value) {\r\n\tif (!value) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (value instanceof Promise) || (typeof (value.then === 'function') && typeof (value.catch) === 'function');\r\n};\r\n\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (value) {\r\n\tif(typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ tinyId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","/**\r\n * Allows to register a callback to be executed when the document ready state has been reached\r\n * @param callback Function to be executed when the document ready is reached\r\n */\r\nfunction onReady(callback) {\r\n\tif (document.readyState !== 'loading') {\r\n\t\tcallback();\r\n\t} else if (typeof (document.addEventListener) === 'function') {\r\n\t\tdocument.addEventListener('DOMContentLoaded', callback, false);\r\n\t} else if (typeof (document.attachEvent) === 'function') {\r\n\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default { onReady };","/** Invokes a function with exception management */\r\nfunction trigger(fnc, ...params) {\r\n\tif(fnc === null || fnc === undefined) {\r\n\t\treturn;\r\n\t} else if(typeof(fnc) !== 'function') {\r\n\t\tthrow new Error('erebus.handler.trigger.invalid_function');\r\n\t}\r\n\ttry {\r\n\t\treturn fnc.call(null, ...params);\r\n\t} catch(ex) {\r\n\t\tthrow new Error('erebus.handlers.trigger.function_error', ex);\r\n\t}\r\n}\r\n\r\n/** Invokes a function with exception management */\r\nfunction triggerAsPromise(fnc, ...params) {\r\n\tif(fnc === null || fnc === undefined) {\r\n\t\treturn Promise.resolve();\r\n\t} else if(typeof(fnc) !== 'function') {\r\n\t\treturn Promise.reject('erebus.handler.trigger_promise_function.invalid_function');\r\n\t}\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\ttry {\r\n\t\t\tconst result = fnc.call(null, ...params);\r\n\t\t\tresolve(result);\r\n\t\t} catch(ex) {\r\n\t\t\tconsole.error('erebus.handlers.trigger_promise_function.function_error', ex);\r\n\t\t\treject(ex);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default { trigger, triggerAsPromise };","import utils from './utils.mjs';\r\n\r\nconst $scope = {};\r\n\r\n/**\r\n * Parses a string HTML content and returns its content or null if it is not HTML content\r\n * @param {string} content HTML content to parse\r\n * @returns DOM elements representing the content\r\n */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn [];\r\n\t}\r\n\tconst holder = document.createElement('div');\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/**\r\n * Removes all the child nodes from a specific element\r\n * @param {HTMLElement} Element to remove the childs from it\r\n */\r\nfunction removeAllChild(element) {\r\n\tif (!element || !(element instanceof HTMLElement)) {\r\n\t\treturn;\r\n\t}\r\n\twhile (element.firstChild) {\r\n\t\telement.removeChild(element.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Executes a deep copy of an HTMLElement\r\n * @param {HTMLElement} sourceElement Element to copy\r\n * @returns Copy of the element\r\n */\r\nfunction cloneHTMLElement(sourceElement) {\r\n\tif (!sourceElement || !(sourceElement instanceof HTMLElement)) {\r\n\t\treturn null;\r\n\t}\r\n\tconst clonedElement = sourceElement.cloneNode(true);\r\n\tif (clonedElement.nodeType === 1) {\r\n\t\tclonedElement.removeAttribute('id'); // the element identifier should not be cloned\r\n\t}\r\n\treturn clonedElement;\r\n}\r\n\r\n/**\r\n * Internal method to create an ErebusElement based on the data provided\r\n * @param {*} source String with the selector, string with HTML code (to create a wrapper for it), reference to an HTMLElement\r\n * @returns \r\n */\r\nfunction getElement(source) {\r\n\tif (!source) {\r\n\t\treturn null;\r\n\t} else if (source instanceof ErebusElement) {\r\n\t\treturn source;\r\n\t} else if (source === 'body' || source === document.body) {\r\n\t\tif (!$scope.body) {\r\n\t\t\t$scope.body = new ErebusElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.body;\r\n\t} else if (source instanceof HTMLElement) {\r\n\t\treturn new ErebusElement(source);\r\n\t} else if (typeof (source) === 'string') {\r\n\t\tvar nativeSource;\r\n\t\tif (source.startsWith('<') && source.endsWith('>')) {\r\n\t\t\tnativeSource = parseHTML(source);\r\n\t\t} else if (source.startsWith('#')) {\r\n\t\t\tnativeSource = document.getElementById(source.substring(1));\r\n\t\t\tif (!nativeSource) {\r\n\t\t\t\tthrow Error('erebus.element.unknown_element_id[' + source + ']');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnativeSource = document.querySelectorAll(source);\r\n\t\t\tif (nativeSource.length === 0) {\r\n\t\t\t\tthrow Error('erebus.element.unknown_selector[' + source + ']');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new ErebusElement(nativeSource);\r\n\t}\r\n}\r\n\r\n/** Wrapper to allow common methods to handle HTML content */\r\nclass ErebusElement {\r\n\t#wrappedElements;\r\n\t#hidden;\r\n\r\n\tconstructor(element) {\r\n\t\tthis.#hidden = false;\r\n\t\tif (element instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElements = [];\r\n\t\t\tthis.#wrappedElements.push(element);\r\n\t\t} else if (element instanceof NodeList) {\r\n\t\t\tthis.#wrappedElements = Array.from(element);\r\n\t\t} else if (Array.isArray(element)) {\r\n\t\t\tthis.#wrappedElements = element;\r\n\t\t} else {\r\n\t\t\tthrow Error('erebus.element.unknown_type[' + typeof (element) + ']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates each wrapped element and invokes a handler that receives each separate instane\r\n\t * @param {function} handler Function that receives each separated HTMLElement wrapped, the function\r\n\t * \t\t\treceives the instance and an integer with the index of the element\r\n\t */\r\n\teach(handler) {\r\n\t\tfor (let wdx = 0; wdx < this.#wrappedElements.length; wdx++) {\r\n\t\t\tconst result = handler(this.#wrappedElements[wdx], wdx);\r\n\t\t\tif (result === false) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the innerHTML on the wrapped elements\r\n\t */\r\n\tset innerHTML(value) {\r\n\t\tthis.each(element => {\r\n\t\t\telement.innerHTML = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** Remove all the content from the current instance */\r\n\tclear() {\r\n\t\tthis.each((element) => {\r\n\t\t\telement.innerHTML = '';\r\n\t\t\tremoveAllChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the content inside the wrapped elements.  This method is preferred over innerHTML\r\n\t * since it cleans the event listener associated with the child nodes.\r\n\t * @param {*} value String with the content to add (text or HTML), a reference to a HTMLElement to set as the content\r\n\t * \t\t\tor a reference to another ErebusElement.\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tcontent(value) {\r\n\t\tthis.each((element, index) => {\r\n\t\t\tif (typeof (value) === 'string') {\r\n\t\t\t\telement.innerHTML = value;\r\n\t\t\t} else if (value instanceof HTMLElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t}\r\n\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tvalue.setParentNode(element);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue.clone().setParentNode(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current instance to a specific parent\r\n\t * @param {*} parent String with the parent selector, reference to the HTMLElement to use as a parent or\r\n\t * \t\t\treference to an ErebusElement or null to detach the wrapped elements\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tsetParentNode(parent) {\r\n\t\tif (!parent) {\r\n\t\t\tthis.each(element => {\r\n\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (parent) === 'string') {\r\n\t\t\tparent = getElement(parent);\r\n\t\t} else if (typeof (parent.appendChild) !== 'function') {\r\n\t\t\tthrow Error('erebus.wrapper.append_to.invalid_parent[' + typeof (parent) + ']');\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tparent.appendChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Alias to the setParent node method that allows to enable compatibility with DOM elements */\r\n\tset parentNode(parent) {\r\n\t\tthis.setParentNode(parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a child element to the wrapped element\r\n\t * @param {*} value String with the HTML element to add or reference to the HTML element to add or \r\n\t * \t\t\treference to the ErebusElement to add.\r\n\t * @returns \r\n\t */\r\n\tappendChild(value) {\r\n\t\tif (typeof (value) === 'string') {\r\n\t\t\tconst parsedContent = parseHTML(value);\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tfor (let idx = 0; idx < parsedContent.length; idx++) {\r\n\t\t\t\t\tconst content = parsedContent[idx];\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(content);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(content));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tif (value instanceof HTMLElement) {\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\t\tvalue.each(innerElement => {\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\telement.appendChild(innerElement);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement.appendChild(cloneHTMLElement(innerElement));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\taddEventListener(eventName, listener, options) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow Error('erebus.element.add_listener.null_event_name');\r\n\t\t} else if (typeof (listener) === 'function') {\r\n\t\t\tif (options === undefined) {\r\n\t\t\t\toptions = { capture: false };\r\n\t\t\t}\r\n\t\t\tthis.each(element => {\r\n\t\t\t\telement.addEventListener(eventName, listener, options);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a single execution listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonce(eventName, listener) {\r\n\t\treturn this.addEventListener(eventName, listener, { capture: false, once: true });\r\n\t}\r\n\r\n\t/** Allows to determine if the element is hidden or not */\r\n\tget isHidden() {\r\n\t\treturn this.#hidden;\r\n\t}\r\n\r\n\t/** Hides the wrapped elements to make it invisible */\r\n\thide() {\r\n\t\tif (this.#hidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#hidden = true;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (computedDisplay && computedDisplay !== 'none') {\r\n\t\t\t\telement.originalDisplay = computedDisplay;\r\n\t\t\t}\r\n\t\t\telement.style.display = 'none';\r\n\t\t});\r\n\t}\r\n\r\n\t/** Shows the wrapped elements to make it visible */\r\n\tshow() {\r\n\t\tthis.#hidden = false;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (!computedDisplay || computedDisplay === 'none') {\r\n\t\t\t\tif (element.originalDisplay) {\r\n\t\t\t\t\telement.style.display = element.originalDisplay;\r\n\t\t\t\t\tdelete element.originalDisplay;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style.display = 'block';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Clone the current instance */\r\n\tclone() {\r\n\t\tconst clonedWrapped = [];\r\n\t\tthis.each(element => {\r\n\t\t\tclonedWrapped.push(cloneHTMLElement(element));\r\n\t\t});\r\n\t\treturn new ErebusElement(clonedWrapped);\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\taddClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (!element.className) {\r\n\t\t\t\t\telement.className = className;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\t\tif (!regex.test(element.className)) {\r\n\t\t\t\t\t\telement.className += ' ' + className;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\tremoveClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tif (!element.className) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\tif (regex.test(element.className)) {\r\n\t\t\t\t\telement.className = element.className.replace(regex, '');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Set the CSS class name for the HTMLElements wrapped by the current instance */\r\n\tset className(value) {\r\n\t\tvalue = utils.trim(value);\r\n\t\tthis.each(element => {\r\n\t\t\telement.className = value;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default getElement;","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n/** Internal scoped variable holders */\r\nconst $scope = {};\r\n/** Holds all the estandard parsers defined for the library */\r\n$scope.parsers = {};\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t}\r\n\ttry {\r\n\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t} catch (ex) {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t} catch (ex) {\r\n\t\t\tthrow Error('erebus.http.xmlhttp_error');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to extract the response headers associated with a particular XMLHTTP request\r\n * @param request Instance of the XMLHTTP that initiated the request\r\n * @returns Object with all the headers as attributes\r\n */\r\nfunction getResponseHeaders(request) {\r\n\tconst headers = {};\r\n\tlet rawHeaders = request.getAllResponseHeaders();\r\n\tif (rawHeaders) {\r\n\t\trawHeaders = rawHeaders.split('\\r\\n');\r\n\t\tfor (let idx = 0; idx < rawHeaders.length; idx++) {\r\n\t\t\tif (!rawHeaders[idx]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst parts = rawHeaders[idx].split(':');\r\n\t\t\t// NOTE: on older browsers the header name can have mixed case, on recent browsers it is only lowercase\r\n\t\t\tconst headerName = utils.trim(parts[0]).toLowerCase();\r\n\t\t\tconst headerValue = utils.trim(parts[1]);\r\n\t\t\tif(headerName && headerValue) {\r\n\t\t\t\theaders[headerName] = headerValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn headers;\r\n}\r\n\r\n/**\r\n * Internal utility method to set request headers\r\n * @param {*} request XHR object representing the request\r\n * @param {*} headers Object with the headers to set. Each header is an attribute in the object\r\n */\r\nfunction setRequestHeaders(request, headers) {\r\n\tif (headers) {\r\n\t\tfor (var headerName in headers) {\r\n\t\t\trequest.setRequestHeader(headerName, headers[headerName]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Parses a response as a JSON */\r\n$scope.parsers['json'] = function (response) {\r\n\ttry {\r\n\t\treturn JSON.parse(response);\r\n\t} catch (ex) {\r\n\t\tconst err = new Error('erebus.http.json_parse_error');\r\n\t\terr.cause = ex;\r\n\t\terr.response = response;\r\n\t\tthrow err;\r\n\t}\r\n};\r\n\r\n/** Internal method to obtain the proper parser according to the content type or null if no transformations are required */\r\nfunction getResponseParser(headers) {\r\n\tif (headers && headers['content-type'] === 'application/json') {\r\n\t\treturn $scope.parsers['json'];\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * \r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\nfunction executeRequest(method, url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\treturn Promise.reject('erebus.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!method) {\r\n\t\tmethod = 'GET';\r\n\t}\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tconst request = createXmlHttp();\r\n\t\trequest.onreadystatechange = function () {\r\n\t\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\t\tif (request.status !== 200) {\r\n\t\t\t\t\tconst err = new Error('http_error[' + request.status + ']');\r\n\t\t\t\t\terr.status = request.status;\r\n\t\t\t\t\terr.response = request.responseText;\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar response = request.responseText;\r\n\t\t\t\t\tconst headers = getResponseHeaders(request);\r\n\t\t\t\t\tconst parser = getResponseParser(headers);\r\n\t\t\t\t\tif (parser) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = parser(response);\r\n\t\t\t\t\t\t} catch(ex) {\r\n\t\t\t\t\t\t\treject(ex);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof (options.interceptor) === 'function') {\r\n\t\t\t\t\t\tconst result = options.interceptor(response, headers);\r\n\t\t\t\t\t\tif(result !== undefined) {\r\n\t\t\t\t\t\t\tresponse = result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.open(method, url, options.async !== false);\r\n\t\tsetRequestHeaders(request, options.headers);\r\n\t\tif (method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Executes a HTTP GET request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.get = function (url, options) {\r\n\treturn executeRequest('GET', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP POST request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.post = function (url, options) {\r\n\treturn executeRequest('POST', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP PUT request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.put = function (url, options) {\r\n\treturn executeRequest('PUT', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP DELETE request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.delete = function (url, options) {\r\n\treturn executeRequest('DELETE', url, options);\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\t/*\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `erebus.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t\t*/\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\nexport default $module;","import handler from './handler.mjs';\r\nimport utils from './utils.mjs';\r\n\r\nconst $scope = {};\r\n// Holds the language defined for the application\r\n$scope.language = null;\r\n// Holds all the resources defined\r\n$scope.resources = {};\r\n\r\n/** Allows to obtain the locale code in the client */\r\nfunction getLocale() {\r\n\tif (navigator.language) {\r\n\t\treturn navigator.language;\r\n\t} else if (navigator.browserLanguage) {\r\n\t\treturn navigator.browserLanguage;\r\n\t}\r\n\treturn 'en-US';\r\n}\r\n\r\n/** Obtains the default language defined for the current system */\r\nfunction getSystemLanguage() {\r\n\treturn getLocale().substr(0, 2);\r\n}\r\n\r\n/**\r\n * Allows to set the language used by the application\r\n * @param {string} value Two letter ISO language code\r\n */\r\nfunction setLanguage(value) {\r\n\t$scope.language = value;\r\n}\r\n\r\n/** Obtains the language defined for the application */\r\nfunction getLanguage() {\r\n\tif (!$scope.language) {\r\n\t\treturn getSystemLanguage();\r\n\t}\r\n\treturn $scope.language;\r\n}\r\n\r\n/**\r\n * Sets the resource bundle for a specific language\r\n * @param {*} resource Object with the labels and values, function providing the object with the label and values\r\n * \t\t\t\tor promise to be fulfilled with the label and values\r\n * @param {*} langCode String with the language code or omit to use the system default language\r\n */\r\nfunction setResourceBundle(resource, langCode) {\r\n\tif (!resource) {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (!langCode) {\r\n\t\tlangCode = getLanguage();\r\n\t}\r\n\tif (typeof (resource) === 'function') {\r\n\t\tconst result = handler.trigger(resource);\r\n\t\treturn setResourceBundle(result, langCode);\r\n\t} else if (utils.isPromise(resource)) {\r\n\t\treturn resource.then(function (result) {\r\n\t\t\treturn setResourceBundle(result, langCode);\r\n\t\t}).catch(function (ex) {\r\n\t\t\tconst err = Error('erebus.i18n.promise_resource_error');\r\n\t\t\terr.cause = ex;\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t}\r\n\tconst target = $scope.resources[langCode];\r\n\tif(!target) {\r\n\t\t$scope.resources[langCode] = resource;\r\n\t} else {\r\n\t\tObject.assign(target, resource);\r\n\t}\r\n\treturn Promise.resolve();\r\n}\r\n\r\n/**\r\n * Obtains an i18n label for the language defined in the syste,\r\n * @param {*} key Key to obtain the value for it\r\n * @param {*} defaultValue Default value in case that no language resource has been set\r\n */\r\nfunction getLabel(key, defaultValue) {\r\n\tconst langCode = getLanguage();\r\n\tconst resources = $scope.resources[langCode];\r\n\tif (!resources || !resources[key]) {\r\n\t\treturn defaultValue ?? key;\r\n\t}\r\n\treturn resources[key];\r\n}\r\n\r\nexport default { getLocale, getSystemLanguage, setLanguage, getLanguage, setResourceBundle, getLabel };\r\n","'use strict';\r\nconsole.log('Erebus Core v0.0.10');\r\nimport utils from './utils.mjs';\r\nimport random from './random.mjs';\r\nimport events from './events.mjs';\r\nimport handler from './handler.mjs';\r\nimport element from './element.mjs';\r\nimport http from './http.mjs';\r\nimport i18n from './i18n.mjs';\r\n\r\nexport default { utils, random, events, handler, element, http, i18n };\r\n","class ErebusComponent {\r\n}\r\n\r\nexport default ErebusComponent;","import erebus from 'erebus-core';\r\n\r\n/**\r\n * Appends an element to the document body.  If the document body is not ready yet\r\n * then schedules a handler to add it to the document once it is ready\r\n * @param {HTMLElement} element Element to add\r\n * @param {function} callback Optional method to invoke once the element has been appended to the body\r\n */\r\nfunction appendToBody(element, callback) {\r\n\tif (!element) {\r\n\t\tthrow Error('erebus.utils.append_to_body.null_element');\r\n\t}\r\n\tif (document.body) {\r\n\t\terebus.element(document.body).appendChild(element);\r\n\t\terebus.handler.trigger(callback, element);\r\n\t\treturn;\r\n\t}\r\n\terebus.events.onReady(() => {\r\n\t\terebus.element(document.body).appendChild(element);\r\n\t\terebus.handler.trigger(callback, element);\r\n\t});\r\n}\r\n\r\n/**\r\n * Extracts or creates an HTMLElement\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @param {string} id Identifier of the element to extract or create\r\n * @returns HTMLElement instance\r\n */\r\nfunction createHTMLElement(tagName, className, id) {\r\n\tconst element = document.createElement(tagName);\r\n\tif (id) {\r\n\t\telement.setAttribute('id', id);\r\n\t}\r\n\tif (className) {\r\n\t\telement.className = className;\r\n\t}\r\n\treturn element;\r\n}\r\n\r\n/**\r\n * Extracts or creates an ErebusElement\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @param {string} id Identifier of the element to extract or create\r\n * @returns HTMLElement instance\r\n */\r\nfunction createElement(tagName, className, id) {\r\n\tconst element = createHTMLElement(tagName, className, id);\r\n\treturn erebus.element(element);\r\n}\r\n\r\n/**\r\n * Extracts or creates an HTMLElement\r\n * @param {string} id Identifier of the element to extract or create\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @returns HTMLElement instance\r\n */\r\nfunction getOrCreateElement(id, tagName, className) {\r\n\tvar element = document.getElementById(id);\r\n\tif (!element) {\r\n\t\treturn createElement(tagName, className, id);\r\n\t}\r\n\treturn erebus.element(element);\r\n}\r\n\r\n/**\r\n * Extracts or creates/render an HTMLElement\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} id Identifier of the element to extract or create\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @param {function} callback Optional function to be invoked after the element has been rendered\r\n * @returns HTMLElement instance\r\n */\r\nfunction getOrRenderElement(id, tagName, className, callback) {\r\n\tconst element = getOrCreateElement(id, tagName, className);\r\n\tappendToBody(element, callback);\r\n\treturn element;\r\n}\r\n\r\n/**\r\n * Copy an attribute from an object to another\r\n * @param {object} target Target object\r\n * @param {object} source Source object\r\n * @param {string} attribute Name of the attribute to copy\r\n * @param {*} defaultValue Optional value to assign if the source object does not contain a value for the attribute\r\n * @returns Boolean value to determine if the source has a valid attribute and was assigned\r\n */\r\nfunction copyAttribute(target, source, attribute, defaultValue) {\r\n\tif (!target || !source || !attribute) {\r\n\t\treturn false;\r\n\t}\r\n\tif (Array.isArray(source)) {\r\n\t\tfor (var idx = 0; idx < source.length; idx++) {\r\n\t\t\tif (copyAttribute(target, source[idx], attribute, defaultValue)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tconst sourceValue = source[attribute];\r\n\tif (sourceValue !== undefined && sourceValue !== null) {\r\n\t\ttarget[attribute] = sourceValue;\r\n\t\treturn true;\r\n\t} else if (defaultValue) {\r\n\t\ttarget[attribute] = defaultValue;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nexport default { appendToBody, createHTMLElement, createElement, getOrCreateElement, getOrRenderElement, copyAttribute };\r\n","import erebus from 'erebus-core';\r\nimport ErebusComponent from './component.mjs';\r\nimport utils from './utils.mjs';\r\nimport './surface.css';\r\n\r\nconst $scope = {};\r\n// Variable to hold the reference to the singleton instance\r\n$scope.singleton = null;\r\n\r\n/** Class implementing the surface */\r\nclass ErebusSurface extends ErebusComponent {\r\n\t#rendered; // avoid the render method to be invoked twice\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#rendered = false;\r\n\t}\r\n\r\n\t/** Generates the visual representation of the surface component */\r\n\trender(callback) {\r\n\t\tif(this.#rendered) {\r\n\t\t\tconsole.warn('erebus.components.surface.already_rendered');\r\n\t\t\terebus.handler.trigger(callback);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tconst element = utils.getOrCreateElement('divErbSurface', 'div', 'erb-surface');\r\n\t\tutils.appendToBody(element, callback);\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport default function() {\r\n\tif(!$scope.singleton) {\r\n\t\t$scope.singleton = new ErebusSurface();\r\n\t}\r\n\treturn $scope.singleton;\r\n}\r\n","import erebus from 'erebus-core';\r\nimport ErebusComponent from './component.mjs';\r\nimport utils from './utils.mjs';\r\nimport './protect.css';\r\n\r\nconst $scope = {};\r\n// Variable to hold the reference to the singleton instance\r\n$scope.singleton = null;\r\n\r\n/** Class implementing the protection layer */\r\nclass ErebusProtect extends ErebusComponent {\r\n\t#rendered; // avoid the render method to be invoked twice\r\n\t#visible; // allows to determine if the protect layer is visible or not\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#visible = false;\r\n\t}\r\n\r\n\t#getElement() {\r\n\t\treturn utils.getOrCreateElement('divErbProtect', 'div', 'erb-protect erb-hidden');\r\n\t}\r\n\r\n\t/** Generates the visual representation of the surface component */\r\n\trender(callback) {\r\n\t\tif(this.#rendered) {\r\n\t\t\tconsole.warn('erebus.components.protect.already_rendered');\r\n\t\t\terebus.handler.trigger(callback);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tconst element = this.#getElement();\r\n\t\tutils.appendToBody(element, callback);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Makes visible the protection layer */\r\n\tshow() {\r\n\t\tif(!this.#rendered) {\r\n\t\t\tthis.render();\r\n\t\t} else if(this.#visible) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#visible = true;\r\n\t\tthis.#getElement().removeClass('erb-hidden');\r\n\t}\r\n\r\n\t/** Hides the protection layer */\r\n\thide() {\r\n\t\tif(!this.#rendered) {\r\n\t\t\tthis.render();\r\n\t\t} else if(!this.#visible) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#visible = false;\r\n\t\tthis.#getElement().addClass('erb-hidden');\r\n\t}\r\n}\r\n\r\nexport default function () {\r\n\tif (!$scope.singleton) {\r\n\t\t$scope.singleton = new ErebusProtect();\r\n\t}\r\n\treturn $scope.singleton;\r\n}","import surface from './surface.mjs';\r\nimport protect from './protect.mjs';\r\n\r\nconst $scope = {};\r\n$scope.components = {};\r\n\r\nclass ComponentManager {\r\n\tregister(name, component) {\r\n\t\tif(!component) {\r\n\t\t\tconsole.warn('erebus.components.manager.register.null_component');\r\n\t\t\treturn;\r\n\t\t} else if(!name) {\r\n\t\t\tconsole.warn('erebus.components.manager.register.no_component_name');\r\n\t\t\treturn;\r\n\t\t} else if(typeof(component) !== 'function') {\r\n\t\t\tconsole.warn('erebus.components.manager.register.no_component_builder[' + name + ']');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$scope.components[name] = component;\r\n\t}\r\n\r\n\tget(name, specs) {\r\n\t\tif(!name) {\r\n\t\t\tthrow Error('erebus.components.manager.get.no_component_name');\r\n\t\t} else if (!$scope.components[name]) {\r\n\t\t\tthrow Error('erebus.components.manager.get.unknown_component[' + name + ']');\r\n\t\t}\r\n\t\treturn $scope.components[name](specs);\r\n\t}\r\n}\r\n\r\n$scope.singleton = new ComponentManager();\r\n$scope.singleton.register('surface', surface);\r\n$scope.singleton.register('protect', protect);\r\n\r\nexport default $scope.singleton;","import erebus from 'erebus-core';\r\nimport ErebusComponent from './component.mjs';\r\nimport utils from './utils.mjs';\r\nimport './toast.css';\r\n\r\nconst $scope = {};\r\n$scope.validTypes = { info: 'info', success: 'success', warn: 'warn', error: 'error' };\r\n\r\n/** Extract the default title for a specific toast type */\r\nfunction getDefaultTitle(type) {\r\n\treturn erebus.i18n.getLabel('toast.title.' + type, type);\r\n}\r\n\r\n/** Obtains the top level element that contains all the toasts */\r\nfunction getToastHolder() {\r\n\treturn utils.getOrRenderElement('divErbToastHolder', 'div', 'erb-toast-holder');\r\n}\r\n\r\n/** Internal utility function to create the element with the visual representation of the toast */\r\nfunction createToastElement(specs) {\r\n\tconst element = utils.createElement('div', 'erb-toast erb-' + specs.type, specs.id);\r\n\telement.appendChild('<div class=\"erb-icon\"></div>');\r\n\tif (specs.title !== false) {\r\n\t\tconst titleText = specs.title ?? getDefaultTitle(specs.type);\r\n\t\telement.appendChild('<div class=\"erb-header\">' + titleText + '</div>');\r\n\t}\r\n\tif (specs.message) {\r\n\t\telement.appendChild('<div class=\"erb-body\">' + specs.message + '</div>');\r\n\t}\r\n\tgetToastHolder().appendChild(element);\r\n\telement.addClass('erb-bouncein');\r\n\telement.once('animationend', function() {\r\n\t\telement.removeClass('erb-bouncein');\r\n\t});\r\n\treturn element;\r\n}\r\n\r\n/** Class to represent a toast component */\r\nclass ErebusToast extends ErebusComponent {\r\n\t#rendered; // avoid the render method to be invoked twice\r\n\t#specs; // title and message\r\n\r\n\tconstructor(specs) {\r\n\t\tsuper();\r\n\t\tthis.#specs = specs;\r\n\t\tthis.#specs.id = 'divErbToast_' + erebus.random.tinyId();\r\n\t}\r\n\r\n\t/* Generates the visual representation of the component */\r\n\trender(callback) {\r\n\t\tif (this.#rendered) {\r\n\t\t\tconsole.warn('erebus.components.toast.already_rendered');\r\n\t\t\terebus.handler.trigger(callback);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tconst element = createToastElement(this.#specs);\r\n\t\telement.once('click', () => {\r\n\t\t\tthis.dismiss(true);\r\n\t\t});\r\n\t\terebus.handler.trigger(callback);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the toast body\r\n\t * @param {*} value Argument to define if should be close immediately (0 or true), on a specific time\r\n\t * \t\t\t\texpressed with an integer number representing the number of miliseconds to close it or\r\n\t * \t\t\t\tomit the argument to use the default close timer.\r\n\t */\r\n\tdismiss(value) {\r\n\t\tif(value === true) {\r\n\t\t\tvalue = 0;\r\n\t\t} else if(typeof(value) !== 'number' || value <= 0) {\r\n\t\t\tvalue = 10000;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst element = erebus.element('#' + this.#specs.id);\r\n\t\t\telement.once('animationend', function() {\r\n\t\t\t\telement.setParentNode(null);\r\n\t\t\t});\r\n\t\t\telement.addClass('erb-bounceout');\r\n\t\t}, value);\r\n\t}\r\n}\r\n\r\n/** Internal method to consume the call arguments to create a toast and assemble a specification object based on it */\r\nfunction createSpecs() {\r\n\tvar specs = {};\r\n\tif(arguments.length === 0) {\r\n\t\tthrow Error('erebus.components.toast.no_arguments');\r\n\t}\r\n\tspecs.type = arguments[0]; \r\n\tif(arguments.length === 2) {\r\n\t\tspecs.message = arguments[1];\r\n\t} else if(arguments.length > 2) {\r\n\t\tspecs.title = arguments[1];\r\n\t\tspecs.message = arguments[2];\r\n\t}\r\n\tif(!specs.type) {\r\n\t\tspecs.type = $scope.validTypes.info;\r\n\t} else if(!$scope.validTypes[specs.type]) {\r\n\t\tthrow Error('erebus.components.toast.invalid_type[' + specs.type + ']');\r\n\t}\r\n\tif (!specs.message) {\r\n\t\tthrow Error('erebus.components.toast.null_message');\r\n\t}\r\n\treturn specs;\r\n}\r\n\r\n/**\r\n * Generic method to create a toast with a dynamic type. Should receive: \r\n * The toast type and the message\r\n * -or-\r\n * The toast type, the title and the message\r\n */\r\nconst $module = function () {\r\n\tconst specs = createSpecs(...arguments);\r\n\treturn new ErebusToast(specs).render();\r\n};\r\n\r\n/**\r\n * Creates an informational toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.info = function() {\r\n\treturn $module($scope.validTypes.info, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates a success toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.success = function() {\r\n\treturn $module($scope.validTypes.success, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates a warning toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.warn = function() {\r\n\treturn $module($scope.validTypes.warn, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates an error toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.error = function() {\r\n\treturn $module($scope.validTypes.error, ...arguments);\r\n};\r\n\r\nexport default $module;\r\n","import erebus from 'erebus-core';\r\nimport ErebusComponent from './component.mjs';\r\nimport utils from './utils.mjs';\r\nimport protect from './protect.mjs';\r\nimport './dialog.css';\r\n\r\nconst $scope = {};\r\n$scope.validTypes = { info: 'info', success: 'success', warn: 'warn', error: 'error', confirm: 'confirm' };\r\n// contains the list of dialogs to be open\r\n$scope.queue = [];\r\n// contains the reference to the current dialog (if there is any dialog open)\r\n$scope.current = null;\r\n// reference to the singleton top level element representing the dialog\r\n$scope.element = null;\r\n\r\n/** Extract the default title for a specific dialog type */\r\nfunction getDefaultTitle(type) {\r\n\treturn erebus.i18n.getLabel('dialog.title.' + type, type);\r\n}\r\n\r\n/** Removes a dialog instance from the queue */\r\nfunction removeFromQueue(dialog) {\r\n\tif ($scope.queue.length === 0) {\r\n\t\tconsole.log('Queue is empty. Nothing to remove. id=' + dialog.id);\r\n\t\treturn;\r\n\t}\r\n\tconst index = $scope.queue.findIndex(item => item.id === dialog.id);\r\n\tconsole.log('Searching dialog id=' + dialog.id + ' size=' + $scope.queue.length + ' index=' + index);\r\n\tif (index >= 0) {\r\n\t\tconsole.log('Removing dialog ' + dialog.id);\r\n\t\t$scope.queue.splice(index, 1);\r\n\t}\r\n}\r\n\r\n/** Process the next queued dialog (if there is any) */\r\nfunction nextDialog() {\r\n\tconsole.log('Extracting next dialog. size=' + $scope.queue.length);\r\n\tconst next = $scope.queue.shift();\r\n\tif (next) {\r\n\t\tnext.render();\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/** Class to represent a dialog component */\r\nclass ErebusDialog extends ErebusComponent {\r\n\t#rendered; // avoid the render method to be invoked twice\r\n\t#afterCloseListeners; // contains all the close listeners registered for this innstance\r\n\t#specs; // type, title, message, closeValue\r\n\r\n\tconstructor(specs) {\r\n\t\tsuper();\r\n\t\tthis.#rendered = false;\r\n\t\tthis.#afterCloseListeners = [];\r\n\t\tthis.#specs = specs;\r\n\t\tthis.#specs.id = erebus.random.tinyId();\r\n\t\tconsole.log('Creating dialog id=' + this.#specs.id);\r\n\t}\r\n\r\n\t/** Dialog unique identifier */\r\n\tget id() {\r\n\t\treturn this.#specs.id;\r\n\t}\r\n\r\n\t/** Internal method to create elements that represents different parts of the dialog */\r\n\t#renderDialogPart(style, content, init) {\r\n\t\tconst dialogPart = utils.createElement('div', style);\r\n\t\tif (content) {\r\n\t\t\tdialogPart.content(content);\r\n\t\t}\r\n\t\tif (init === true) {\r\n\t\t\t$scope.element.content(dialogPart);\r\n\t\t} else {\r\n\t\t\t$scope.element.appendChild(dialogPart);\r\n\t\t}\r\n\t\treturn dialogPart;\r\n\t}\r\n\r\n\t/** Internal method to render the dialog footer */\r\n\t#renderFooter() {\r\n\t\tconst footer = this.#renderDialogPart('erb-footer');\r\n\t\tif(this.#specs.type === 'confirm') {\r\n\t\t\tconst yessButton = utils.createHTMLElement('button', 'erb-button erb-positive');\r\n\t\t\tyessButton.innerHTML = erebus.i18n.getLabel('button.yes', 'Yes');\r\n\t\t\tyessButton.addEventListener('click', () => { \r\n\t\t\t\tthis.#specs.closeValue = true;\r\n\t\t\t\tthis.close(); \r\n\t\t\t});\r\n\t\t\tfooter.appendChild(yessButton);\r\n\r\n\t\t\tconst noButton = utils.createHTMLElement('button', 'erb-button erb-negative');\r\n\t\t\tnoButton.innerHTML = erebus.i18n.getLabel('button.no', 'No');\r\n\t\t\tnoButton.addEventListener('click', () => { \r\n\t\t\t\tthis.#specs.closeValue = false;\r\n\t\t\t\tthis.close(); \r\n\t\t\t});\r\n\t\t\tfooter.appendChild(noButton);\r\n\t\t} else {\r\n\t\t\tconst closeButton = utils.createHTMLElement('button', 'erb-button erb-primary');\r\n\t\t\tcloseButton.innerHTML = erebus.i18n.getLabel('button.close', 'Close');\r\n\t\t\tcloseButton.addEventListener('click', () => { \r\n\t\t\t\tthis.close(); \r\n\t\t\t});\r\n\t\t\tfooter.appendChild(closeButton);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Internal method to render all the dialog elements */\r\n\t#renderDialogElements() {\r\n\t\tconst className = 'erb-dialog erb-' + this.#specs.type;\r\n\t\tif (!$scope.element) {\r\n\t\t\t$scope.element = utils.getOrCreateElement('divErbDialog', 'div', className);\r\n\t\t} else {\r\n\t\t\t$scope.element.className = className;\r\n\t\t}\r\n\t\tthis.#renderDialogPart('erb-header', this.#specs.title, true);\r\n\t\tthis.#renderDialogPart('erb-body', this.#specs.message);\r\n\t\tconst topClose = this.#renderDialogPart('erb-close');\r\n\t\ttopClose.once('click', () => { this.close(); });\r\n\t\tthis.#renderFooter();\r\n\t}\r\n\r\n\t/** Queue a dialog instance to be the next to be opened */\r\n\t_queue() {\r\n\t\tif ($scope.current && $scope.current.id === this.id) {\r\n\t\t\tconsole.log('Returning dialog to the queue id=' + this.id);\r\n\t\t\t$scope.queue.unshift(this);\r\n\t\t\tthis.#rendered = false;\r\n\t\t} else {\r\n\t\t\tconsole.log('Queuing dialog id=' + this.id);\r\n\t\t\t$scope.queue.push(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/* Generates the visual representation of the component */\r\n\trender(callback) {\r\n\t\tif (this.#rendered) {\r\n\t\t\terebus.handler.trigger(callback);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tconsole.log('Rendering dialog id=' + this.id);\r\n\t\tthis.#rendered = true;\r\n\t\tremoveFromQueue(this);\r\n\t\t// if there is any open dialog then move it back to the queue\r\n\t\tif ($scope.current && $scope.current.id !== this.id) {\r\n\t\t\t$scope.current._queue();\r\n\t\t}\r\n\t\t$scope.current = this;\r\n\t\tthis.#renderDialogElements();\r\n\t\tprotect().show();\r\n\t\t$scope.element.addClass('erb-fadein');\r\n\t\tutils.appendToBody($scope.element, () => {\r\n\t\t\t$scope.element.once('animationend', () => {\r\n\t\t\t\t$scope.element.removeClass('erb-fadein');\r\n\t\t\t\terebus.handler.trigger(callback, this.#specs.closeValue);\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the dialog\r\n\t * @param {int} timer Optional numeric value to close the dialog after a specific period expressed in miliseconds\r\n\t * @param {function} callback Optional function to be invoked after the dialog has been closed\r\n\t */\r\n\tclose() {\r\n\t\tvar timer = 0;\r\n\t\tvar callback = null;\r\n\t\tif (arguments.length === 1) {\r\n\t\t\tif (typeof (arguments[0]) === 'number') {\r\n\t\t\t\ttimer = arguments[0];\r\n\t\t\t} else if (typeof (arguments[0]) === 'function') {\r\n\t\t\t\tcallback = arguments[0];\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\ttimer = arguments[0];\r\n\t\t\tcallback = arguments[1];\r\n\t\t}\r\n\t\tif (timer < 0) {\r\n\t\t\ttimer = 0;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tif ($scope.current.id !== this.id) {\r\n\t\t\t\tconsole.log('Closing queued dialog id=' + this.id);\r\n\t\t\t\tremoveFromQueue(this);\r\n\t\t\t\terebus.handler.trigger(callback);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Closing current dialog id=' + this.id);\r\n\t\t\t\t$scope.element.addClass('erb-fadeout');\r\n\t\t\t\t$scope.element.once('animationend', () => {\r\n\t\t\t\t\t$scope.current = null;\r\n\t\t\t\t\t$scope.element.setParentNode(null);\r\n\t\t\t\t\t$scope.element.removeClass('erb-fadeout');\r\n\t\t\t\t\t// adds the subsequent actions to the event loop to allow the refresh of the UI\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\terebus.handler.trigger(callback);\r\n\t\t\t\t\t\tthis.#triggerAfterClose();\r\n\t\t\t\t\t\tif(!nextDialog()) {\r\n\t\t\t\t\t\t\tprotect().hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, timer);\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to register a handler invoked once the dialog has been closed\r\n\t * @param {function} listener Function invoked when the dialog has been closed.  In the case of the confirmation dialogs\r\n\t * \t\t\tthe handler function will receive a boolean value to determine the user selection.\r\n\t * @returns Dialog instance to write fluent expressions\r\n\t */\r\n\tthen(listener) {\r\n\t\tif(typeof(listener) === 'function') {\r\n\t\t\tthis.#afterCloseListeners.push(listener);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Internal method to trigger the action handlers registered to be executed when the dialog is closed */\r\n\t#triggerAfterClose() {\r\n\t\tfor(let idx=0; idx < this.#afterCloseListeners.length; idx++) {\r\n\t\t\terebus.handler.trigger(this.#afterCloseListeners[idx], this.#specs.closeValue);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Internal method to consume the call arguments to create a dialog and assemble a specification object based on it */\r\nfunction createSpecs() {\r\n\tvar specs = {};\r\n\tif (arguments.length === 0) {\r\n\t\tthrow Error('erebus.components.dialog.no_arguments');\r\n\t}\r\n\tspecs.type = arguments[0];\r\n\tif (arguments.length === 2) {\r\n\t\tspecs.message = arguments[1];\r\n\t} else if (arguments.length > 2) {\r\n\t\tspecs.title = arguments[1];\r\n\t\tspecs.message = arguments[2];\r\n\t}\r\n\tif (!specs.type) {\r\n\t\tspecs.type = $scope.validTypes.info;\r\n\t} else if (!$scope.validTypes[specs.type]) {\r\n\t\tthrow Error('erebus.components.dialog.invalid_type[' + specs.type + ']');\r\n\t}\r\n\tif (!specs.title) {\r\n\t\tspecs.title = getDefaultTitle(specs.type);\r\n\t}\r\n\tif (!specs.message) {\r\n\t\tthrow Error('erebus.components.dialog.null_message');\r\n\t}\r\n\treturn specs;\r\n}\r\n\r\n/**\r\n * Generic method to create a dialog with a dynamic type. Should receive: \r\n * The dialog type and the message\r\n * -or-\r\n * The dialog type, the title and the message\r\n */\r\nconst $module = function () {\r\n\tconst specs = createSpecs(...arguments);\r\n\tconst dialog = new ErebusDialog(specs);\r\n\tif (!$scope.current) {\r\n\t\treturn dialog.render();\r\n\t}\r\n\tdialog._queue();\r\n\treturn dialog;\r\n};\r\n\r\n/**\r\n * Creates an informational dialog. Should receive: the dialog message or the dialog title and the message\r\n */\r\n$module.info = function () {\r\n\treturn $module($scope.validTypes.info, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates a success dialog. Should receive: the dialog message or the dialog title and the message\r\n */\r\n$module.success = function () {\r\n\treturn $module($scope.validTypes.success, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates a warning dialog. Should receive: the dialog message or the dialog title and the message\r\n */\r\n$module.warn = function () {\r\n\treturn $module($scope.validTypes.warn, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates an error dialog. Should receive: the dialog message or the dialog title and the message\r\n */\r\n$module.error = function () {\r\n\treturn $module($scope.validTypes.error, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates a confirm dialog. Should receive: the dialog message or the dialog title and the message\r\n */\r\n$module.confirm = function () {\r\n\treturn $module($scope.validTypes.confirm, ...arguments);\r\n};\r\n\r\nexport default $module;\r\n","'use strict';\r\nimport erebus from 'erebus-core';\r\nimport manager from './manager.mjs';\r\nimport surface from './surface.mjs';\r\nimport protect from './protect.mjs';\r\nimport toast from './toast.mjs';\r\nimport dialog from './dialog.mjs';\r\nimport './erebus-components.css';\r\nimport './badge.css';\r\nconsole.log('Erebus Components v0.0.2');\r\n\r\nconst $scope = {};\r\n$scope.onInit = [];\r\n\r\nerebus.components = {};\r\nerebus.components.get = manager.get;\r\n\r\nconst langCode = erebus.i18n.getLanguage();\r\nimport resources from '../resources/en.json';\r\nerebus.i18n.setResourceBundle(resources, langCode);\r\n\r\n// initialize the erebus main components once the document is ready\r\nerebus.events.onReady(function () {\r\n\twindow.surface = surface();\r\n\twindow.protect = protect().render();\r\n\twindow.toast = toast;\r\n\twindow.dialog = dialog;\r\n\tfor(var idx=0; idx < $scope.onInit.length; idx++) {\r\n\t\terebus.handler.trigger($scope.onInit[idx]);\r\n\t}\r\n});\r\n\r\n/**\r\n * Allows to register a callback function to be invoked once the components have been initialized\r\n * @param {*} callback Handler to execute\r\n */\r\nerebus.components.onReady = function (callback) {\r\n\tif (typeof (callback) === 'function') {\r\n\t\t$scope.onInit.push(callback);\r\n\t}\r\n};\r\n\r\nexport default erebus;\r\n"],"names":["$module","tinyId","Math","random","toString","substring","isPromise","value","Promise","then","trim","replace","shortId","guid","onReady","callback","document","readyState","addEventListener","attachEvent","trigger","fnc","params","Error","call","ex","triggerAsPromise","resolve","reject","console","error","$scope","parseHTML","content","holder","createElement","innerHTML","childNodes","removeAllChild","element","HTMLElement","firstChild","removeChild","cloneHTMLElement","sourceElement","clonedElement","cloneNode","nodeType","removeAttribute","getElement","source","ErebusElement","body","nativeSource","startsWith","endsWith","getElementById","querySelectorAll","length","wrappedElements","hidden","constructor","this","push","NodeList","Array","from","isArray","each","handler","wdx","clear","index","appendChild","setParentNode","clone","parent","parentNode","parsedContent","idx","innerElement","eventName","listener","options","undefined","capture","once","isHidden","hide","computedDisplay","getComputedStyle","getPropertyValue","originalDisplay","style","display","show","clonedWrapped","addClass","classes","cdx","className","utils","RegExp","test","removeClass","regex","executeRequest","method","url","request","window","XMLHttpRequest","ActiveXObject","createXmlHttp","onreadystatechange","status","err","response","responseText","headers","rawHeaders","getAllResponseHeaders","split","parts","headerName","toLowerCase","headerValue","getResponseHeaders","parser","parsers","getResponseParser","result","interceptor","open","async","setRequestHeader","setRequestHeaders","data","send","JSON","parse","cause","get","post","put","delete","loadScript","src","type","onerror","onload","head","getLocale","navigator","language","browserLanguage","getSystemLanguage","substr","getLanguage","resources","setLanguage","setResourceBundle","resource","langCode","catch","target","Object","assign","getLabel","key","defaultValue","log","events","http","i18n","ErebusComponent","appendToBody","erebus","createHTMLElement","tagName","id","setAttribute","getOrCreateElement","getOrRenderElement","copyAttribute","attribute","sourceValue","ErebusSurface","warn","singleton","ErebusProtect","render","ComponentManager","name","component","components","specs","register","surface","protect","createToastElement","title","titleText","message","validTypes","info","success","ErebusToast","_this2","dismiss","setTimeout","_classPrivateFieldGet","_this3","createSpecs","arguments","getDefaultTitle","removeFromQueue","dialog","queue","findIndex","item","splice","nextDialog","next","shift","confirm","current","ErebusDialog","unshift","_queue","closeValue","timer","init","dialogPart","footer","yessButton","_this4","close","noButton","closeButton","_this5","manager","toast","onInit"],"mappings":"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"}