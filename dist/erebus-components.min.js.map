{"version":3,"file":"erebus-components.min.js","sources":["../node_modules/erebus-core/src/utils.mjs","../node_modules/erebus-core/src/cookies.mjs","../node_modules/erebus-core/src/random.mjs","../node_modules/erebus-core/src/events.mjs","../node_modules/erebus-core/src/handler.mjs","../node_modules/erebus-core/src/http.mjs","../node_modules/erebus-core/src/element.mjs","../node_modules/erebus-core/src/i18n.mjs","../node_modules/erebus-core/src/formats.mjs","../node_modules/erebus-core/src/router.mjs","../node_modules/erebus-core/src/validator.mjs","../node_modules/erebus-core/src/form.mjs","../node_modules/erebus-core/src/controller.mjs","../node_modules/erebus-core/src/index.mjs","../src/components/protect.mjs","../src/components/dialog.mjs","../src/components/toast.mjs","../src/components/validation-handler.mjs","../src/index.mjs","../resources/en.mjs"],"sourcesContent":["const $module = {};\r\n\r\n/**\r\n * Allows to determine if a specific instance is a promise object (or a promise-like object)\r\n * @param {*} value Object to evaluate\r\n * @returns Boolean value to determine if the object is a promise or not\r\n */\r\n$module.isPromise = function(value) {\r\n\tif (!value) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (value instanceof Promise) || (typeof (value.then === 'function') && typeof (value.catch) === 'function');\r\n};\r\n\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (value) {\r\n\tif (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\n/** Determines if a specific value is null, undefined or an empty string */\r\n$module.isNonValue = function(value, trim) {\r\n\tif (trim === true && value && typeof(value) === 'string') {\r\n\t\tvalue = $module.trim(value);\r\n\t}\r\n\treturn value === null || value === undefined || (typeof(value) === 'string' && value.length === 0);\r\n};\r\n\r\nexport default $module;","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n\r\n/**\r\n * Sets the value for a cookie entry\r\n * @param name Name of the cookie to set\r\n * @param value Value to set. Omit or set to null to clean the cookie\r\n * @param timespan Timespan to maintain the cookie (in seconds)\r\n */\r\n$module.set = function (name, value, timespan) {\r\n\tif (!name) {\r\n\t\tthrow new Error('erebus.cookies.set.null_cookie_name');\r\n\t}\r\n\tif (typeof (timespan) !== 'number') {\r\n\t\ttimespan = 3600;\r\n\t}\r\n\tvar expireDate = new Date();\r\n\tif (value === null || value === undefined) {\r\n\t\tvalue = '';\r\n\t\texpireDate.setTime(expireDate.getTime() - 1000);\r\n\t} else {\r\n\t\texpireDate.setTime(expireDate.getTime() + (timespan * 1000));\r\n\t}\r\n\tvar cookie = utils.trim(name) + '=' + value + ';expires=' + expireDate.toGMTString() + ';path=/';\r\n\tdocument.cookie = cookie;\r\n};\r\n\r\n/**\r\n * Obtains the value from a cookie\r\n * @param name Name of the cookie to obtain\r\n * @returns Cookie value or null if it is not defined\r\n */\r\n$module.get = function (name) {\r\n\tif (!name) {\r\n\t\treturn null;\r\n\t}\r\n\tvar cookiestring = RegExp(name + '=[^;]+').exec(document.cookie);\r\n\tif (cookiestring) {\r\n\t\treturn decodeURIComponent(cookiestring.toString().replace(/^[^=]+./, ''));\r\n\t}\r\n\treturn '';\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ tinyId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","const $module = {};\r\n\r\n/**\r\n * Returns a promise fullfilled when the document has been loaded and parsed.\r\n * @returns Promise to be fulfilled once the document is ready\r\n */\r\n$module.documentReady = function() {\r\n\tif (document.readyState !== 'loading') {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (typeof (document.addEventListener) === 'function') {\r\n\t\treturn new Promise(function(resolve) {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', resolve, false);\r\n\t\t});\r\n\t}\r\n\tif (typeof (document.attachEvent) === 'function') {\r\n\t\treturn new Promise(function(resolve) {\r\n\t\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tconsole.error('The current browser event management is not supported by the Erebus framework');\r\n\treturn Promise.reject('erebus.events.unsuported_browser');\r\n};\r\n\r\n/**\r\n * Internal method to assign an animation class to an element and invoke a callback when is completed\r\n * @param target Reference to the HTMLElement (or ErebusElement) to animate\r\n * @param animationClass String with the CSS animation name to apply\r\n */\r\n$module.animate = function(target, animationClass) {\r\n\tif (!target) {\r\n\t\treturn Promise.reject('erebus.events.wait_animation.invalid_target');\r\n\t} else if (!animationClass) {\r\n\t\treturn Promise.reject('erebus.events.wait_animation.invalid_animation');\r\n\t}\r\n\treturn new Promise(function(resolve) {\r\n\t\t// registers the event handler\r\n\t\ttarget.addEventListener('animationend', function () {\r\n\t\t\tresolve();\r\n\t\t}, { capture: false, once: true });\r\n\r\n\t\t// implements the animation\r\n\t\tif (target.className === '') {\r\n\t\t\ttarget.className = animationClass;\r\n\t\t} else if (target.classList) {\r\n\t\t\ttarget.classList.add(animationClass);\r\n\t\t} else if (typeof (target.addClass) === 'function') {\r\n\t\t\ttarget.addClass(animationClass);\r\n\t\t} else {\r\n\t\t\ttarget.className += ' ' + animationClass;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default $module;","import random from './random.mjs';\r\n\r\nconst $module = {};\r\n\r\n/** Invokes a function with exception management */\r\n$module.trigger = function(fnc, ...params) {\r\n\tif (fnc === null || fnc === undefined) {\r\n\t\treturn;\r\n\t} else if (typeof(fnc) !== 'function') {\r\n\t\tthrow new Error('erebus.handler.trigger.invalid_function');\r\n\t}\r\n\ttry {\r\n\t\treturn fnc.call(null, ...params);\r\n\t} catch (ex) {\r\n\t\t$module.handleError(ex, 'erebus.handlers.trigger.function_error');\r\n\t}\r\n};\r\n\r\n/** Invokes a function with exception management */\r\n$module.triggerAsPromise = function(fnc, ...params) {\r\n\tif (fnc === null || fnc === undefined) {\r\n\t\treturn Promise.resolve();\r\n\t} else if (typeof(fnc) !== 'function') {\r\n\t\treturn Promise.reject('erebus.handler.trigger_promise_function.invalid_function');\r\n\t}\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\ttry {\r\n\t\t\tconst result = fnc.call(null, ...params);\r\n\t\t\tresolve(result);\r\n\t\t} catch (ex) {\r\n\t\t\tconsole.error('erebus.handlers.trigger_promise_function.function_error', ex);\r\n\t\t\treject(ex);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n * Handles the ocurrence of an error/exception in a standard way\r\n * @param {*} err Error or exception captured\r\n * @param {*} code String with the code to describe the error\r\n */\r\n$module.handleError = function(err, code) {\r\n\t// TODO: implement a way to print the error in the UI in a standard way\r\n\tif (!err) {\r\n\t\treturn;\r\n\t}\r\n\tif (code) {\r\n\t\tconst guid = random.guid();\r\n\t\tconst errorCode = `${code}[${guid}]`;\r\n\t\tconsole.error(errorCode, err);\r\n\t\tthrow new Error(errorCode);\r\n\t}\r\n\tconsole.log(err);\r\n\tthrow err;\r\n};\r\n\r\nexport default $module;","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n/** Internal scoped variable holders */\r\nconst $scope = {};\r\n/** Holds all the estandard parsers defined for the library */\r\n$scope.parsers = {};\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t}\r\n\ttry {\r\n\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t} catch (ex) {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t} catch (ex) {\r\n\t\t\tthrow new Error('erebus.http.xmlhttp_error');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to extract the response headers associated with a particular XMLHTTP request\r\n * @param request Instance of the XMLHTTP that initiated the request\r\n * @returns Object with all the headers as attributes\r\n */\r\nfunction getResponseHeaders(request) {\r\n\tconst headers = {};\r\n\tlet rawHeaders = request.getAllResponseHeaders();\r\n\tif (rawHeaders) {\r\n\t\trawHeaders = rawHeaders.split('\\r\\n');\r\n\t\tfor (let idx = 0; idx < rawHeaders.length; idx++) {\r\n\t\t\tif (!rawHeaders[idx]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst parts = rawHeaders[idx].split(':');\r\n\t\t\t// NOTE: on older browsers the header name can have mixed case, on recent browsers it is only lowercase\r\n\t\t\tconst headerName = utils.trim(parts[0]).toLowerCase();\r\n\t\t\tconst headerValue = utils.trim(parts[1]);\r\n\t\t\tif (headerName && headerValue) {\r\n\t\t\t\theaders[headerName] = headerValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn headers;\r\n}\r\n\r\n/**\r\n * Internal utility method to set request headers\r\n * @param {*} request XHR object representing the request\r\n * @param {*} headers Object with the headers to set. Each header is an attribute in the object\r\n */\r\nfunction setRequestHeaders(request, headers) {\r\n\tif (headers) {\r\n\t\tfor (var headerName in headers) {\r\n\t\t\trequest.setRequestHeader(headerName, headers[headerName]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Parses a response as a JSON */\r\n$scope.parsers['json'] = function (response) {\r\n\ttry {\r\n\t\treturn JSON.parse(response);\r\n\t} catch (ex) {\r\n\t\tconst err = new Error('erebus.http.json_parse_error');\r\n\t\terr.cause = ex;\r\n\t\terr.response = response;\r\n\t\tthrow err;\r\n\t}\r\n};\r\n\r\n/** Internal method to obtain the proper parser according to the content type or null if no transformations are required */\r\nfunction getResponseParser(headers) {\r\n\tconst contentType = (headers && typeof(headers['content-type']) === 'string') ? headers['content-type'] : null;\r\n\tif (contentType && contentType.startsWith('application/json')) {\r\n\t\treturn $scope.parsers['json'];\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n *\r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\nfunction executeRequest(method, url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\treturn Promise.reject('erebus.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!method) {\r\n\t\tmethod = 'GET';\r\n\t}\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tconst request = createXmlHttp();\r\n\t\trequest.onreadystatechange = function () {\r\n\t\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\t\tif (request.status === 0) {\r\n\t\t\t\t\tconst err = new Error('erebus.http.connection_refused');\r\n\t\t\t\t\terr.code = 'http';\r\n\t\t\t\t\terr.status = 'connection_error';\r\n\t\t\t\t\terr.response = null;\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else if (request.status !== 200) {\r\n\t\t\t\t\tconst err = new Error('erebus.http.error.' + request.status);\r\n\t\t\t\t\terr.code = 'http';\r\n\t\t\t\t\terr.status = request.status;\r\n\t\t\t\t\terr.response = request.responseText;\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar response = request.responseText;\r\n\t\t\t\t\tconst headers = getResponseHeaders(request);\r\n\t\t\t\t\tconst parser = getResponseParser(headers);\r\n\t\t\t\t\tif (parser) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = parser(response);\r\n\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\treject(ex);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof (options.interceptor) === 'function') {\r\n\t\t\t\t\t\tconst result = options.interceptor(response, headers);\r\n\t\t\t\t\t\tif (result !== undefined) {\r\n\t\t\t\t\t\t\tresponse = result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.open(method, url, options.async !== false);\r\n\t\tsetRequestHeaders(request, options.headers);\r\n\t\tif (method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Executes a HTTP GET request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.get = function (url, options) {\r\n\treturn executeRequest('GET', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP POST request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.post = function (url, options) {\r\n\treturn executeRequest('POST', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP PUT request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.put = function (url, options) {\r\n\treturn executeRequest('PUT', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP DELETE request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.delete = function (url, options) {\r\n\treturn executeRequest('DELETE', url, options);\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\t/*\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `erebus.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t\t*/\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\nexport default $module;","import utils from './utils.mjs';\r\nimport http from './http.mjs';\r\nimport random from './random.mjs';\r\n\r\nconst $scope = {};\r\n// Will hold the reference to the parser instance (if available) or false if it is not available\r\n$scope.domParser = null;\r\n\r\n/**\r\n * Utility method to create a HTMLElement from an XMLElement\r\n * @param {*} xmlElement XMLElement to create the XMLFrom it\r\n * @returns HTMLElement created from the XMLElement\r\n */\r\nfunction xmlToHtml(xmlElement) {\r\n\tvar htmlElement = document.createElement(xmlElement.tagName);\r\n\t// Recreates the attributes\r\n\tfor (let ndx=0; ndx < xmlElement.attributes.length; ndx++) {\r\n\t\tconst xmlAttribute = xmlElement.attributes[ndx];\r\n\t\thtmlElement.setAttribute(xmlAttribute.name, xmlAttribute.value);\r\n\t}\r\n\t// Recreates the child elements\r\n\tfor (let ndx=0; ndx < xmlElement.childNodes.length; ndx++) {\r\n\t\tconst childXml = xmlElement.childNodes[ndx];\r\n\t\tif (childXml.nodeType === 3) {\r\n\t\t\tconst childText = document.createTextNode(childXml.textContent);\r\n\t\t\thtmlElement.appendChild(childText);\r\n\t\t\tcontinue;\r\n\t\t} else if (childXml.nodeType !== 1) {\r\n\t\t\tconsole.warn(`erebus.element.xml_to_html.invalid_node_type[${childXml.nodeType}]`);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst childHtml = xmlToHtml(childXml);\r\n\t\thtmlElement.appendChild(childHtml);\r\n\t}\r\n\treturn htmlElement;\r\n}\r\n\r\n/**\r\n * Parses a string HTML content and returns its content or null if it is not HTML content\r\n * @param {string} content HTML content to parse\r\n * @returns DOM elements representing the content\r\n */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn [];\r\n\t}\r\n\tif ($scope.domParser === null) {\r\n\t\tif (typeof(DOMParser) === 'undefined') {\r\n\t\t\t$scope.domParser = false;\r\n\t\t} else {\r\n\t\t\t$scope.domParser = new DOMParser();\r\n\t\t}\r\n\t}\r\n\tif ($scope.domParser === false) {\r\n\t\tconst holder = document.createElement('div');\r\n\t\tholder.innerHTML = content;\r\n\t\treturn [...holder.childNodes];\r\n\t}\r\n\t// NOTE: We use the XML parser, because the HTML parser does not parse certain tags\r\n\t// For example: trying to parse a TR or a TD does not work\r\n\t// Parsing atomic HTMLElements is crucial for the good work of the element since allows to create atomic portions of content\r\n\tconst results = [];\r\n\tconst holder = $scope.domParser.parseFromString(content, 'text/xml');\r\n\tfor (let ndx=0; ndx < holder.childNodes.length; ndx++) {\r\n\t\tconst htmlElement = xmlToHtml(holder.childNodes[ndx]);\r\n\t\tresults.push(htmlElement);\r\n\t}\r\n\treturn results;\r\n}\r\n\r\n/**\r\n * Removes all the child nodes from a specific element\r\n * @param {HTMLElement} target Element to remove the childs from it\r\n */\r\nfunction removeAllChild(target) {\r\n\tif (!target || !(target instanceof HTMLElement)) {\r\n\t\treturn;\r\n\t}\r\n\twhile (target.firstChild) {\r\n\t\ttarget.removeChild(target.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Executes a deep copy of an HTMLElement\r\n * @param {HTMLElement} sourceElement Element to copy\r\n * @returns Copy of the element\r\n */\r\nfunction cloneHTMLElement(sourceElement) {\r\n\tif (!sourceElement || !(sourceElement instanceof HTMLElement)) {\r\n\t\treturn null;\r\n\t}\r\n\tconst clonedElement = sourceElement.cloneNode(true);\r\n\tif (clonedElement.nodeType === 1) {\r\n\t\tclonedElement.removeAttribute('id'); // the element identifier should not be cloned\r\n\t}\r\n\treturn clonedElement;\r\n}\r\n\r\n/**\r\n * Creates a block containing error information that can be correlated in the console\r\n * @param {*} errorCode Code to show in the console to describe the error\r\n * @param {*} errorInstance Root cause (usually an Error object captured as an exception)\r\n * @returns HTMLElement containing the error message to be shown in the UI\r\n */\r\nfunction createErrorContent(errorCode, errorInstance) {\r\n\tconst errorId = random.shortId();\r\n\tif (errorInstance) {\r\n\t\tconsole.error(`${errorCode}[${errorId}]`, errorInstance);\r\n\t} else {\r\n\t\tconsole.error(`${errorCode}[${errorId}]`);\r\n\t}\r\n\tconst errorElement = document.createElement('div');\r\n\terrorElement.innerHTML = `Error[${errorId}]`;\r\n\treturn errorElement;\r\n}\r\n\r\n/**\r\n * Internal method to create an ErebusElement based on the data provided\r\n * @param {*} source String with the selector, string with HTML code (to create a wrapper for it), reference to an HTMLElement\r\n * @returns\r\n */\r\nfunction createErebusElement(source) {\r\n\tif (!source) {\r\n\t\treturn null;\r\n\t} else if (source instanceof ErebusElement) {\r\n\t\treturn source;\r\n\t} else if (source === 'body' || source === document.body) {\r\n\t\tif (!$scope.body) {\r\n\t\t\t$scope.body = new ErebusElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.body;\r\n\t} else if (source instanceof HTMLElement) {\r\n\t\treturn new ErebusElement(source);\r\n\t} else if (typeof (source) === 'string') {\r\n\t\tvar nativeSource;\r\n\t\tif (source.startsWith('<') && source.endsWith('>')) {\r\n\t\t\tnativeSource = parseHTML(source);\r\n\t\t\tif (nativeSource.length == 0) {\r\n\t\t\t\tnativeSource = createErrorContent('erebus.element.invalid_html.empty_content');\r\n\t\t\t} else if (nativeSource.length > 1) {\r\n\t\t\t\tnativeSource = createErrorContent('erebus.element.invalid_html.multiple_nodes');\r\n\t\t\t} else {\r\n\t\t\t\tnativeSource = nativeSource[0];\r\n\t\t\t}\r\n\t\t} else if (source.startsWith('#')) {\r\n\t\t\tnativeSource = document.getElementById(source.substring(1));\r\n\t\t\tif (!nativeSource) {\r\n\t\t\t\tthrow new Error(`erebus.element.unknown_element_id[${source}]`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnativeSource = document.querySelector(source);\r\n\t\t\tif (!nativeSource) {\r\n\t\t\t\tthrow new Error(`erebus.element.unknown_selector[${source}]`);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new ErebusElement(nativeSource);\r\n\t}\r\n}\r\n\r\n/** Wrapper to allow common methods to handle HTML content */\r\nclass ErebusElement {\r\n\t#wrappedElement;\r\n\t// Allows to determine if the element is visible or not\r\n\t#hidden;\r\n\r\n\tconstructor(target) {\r\n\t\tthis.#hidden = false;\r\n\t\tif (target instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElement = target;\r\n\t\t} else {\r\n\t\t\tthrow new Error('erebus.element.invalid_element[' + typeof (target) + ']');\r\n\t\t}\r\n\t}\r\n\r\n\t/** Allows to obtain the reference to the source wrapped element */\r\n\tget source() {\r\n\t\treturn this.#wrappedElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the innerHTML on the wrapped element.\r\n\t * This is a compatibility method to maintain consistency and interchangeability with HTMLElement.\r\n\t * @param {string} value String with the HTML content to set\r\n\t */\r\n\tset innerHTML(value) {\r\n\t\tthis.#wrappedElement.innerHTML = value;\r\n\t}\r\n\r\n\t/** Removes all the content from the current instance */\r\n\tclear() {\r\n\t\tthis.#wrappedElement.innerHTML = '';\r\n\t\tremoveAllChild(this.#wrappedElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the content inside the wrapped element.  This method is preferred over innerHTML\r\n\t * since it cleans the event listener associated with the child nodes.\r\n\t * @param {any} value String with the content to add (text or HTML), a reference to a HTMLElement to set as the content\r\n\t * \t\t\tor a reference to another ErebusElement.\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tcontent(value) {\r\n\t\tthis.clear();\r\n\t\tif (typeof (value) === 'string') {\r\n\t\t\tthis.#wrappedElement.innerHTML = value;\r\n\t\t\t// If javascript content was added as part of the content, then processes it as a script tag\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst innerScripts = this.#wrappedElement.querySelectorAll('script');\r\n\t\t\t\tfor (var ndx=0; ndx < innerScripts.length; ndx++) {\r\n\t\t\t\t\tconst scriptObj = innerScripts[ndx];\r\n\t\t\t\t\tscriptObj.parentNode.removeChild(scriptObj);\r\n\t\t\t\t\tvar newScript = document.createElement('script');\r\n\t\t\t\t\tnewScript.textContent = scriptObj.textContent;\r\n\t\t\t\t\tthis.#wrappedElement.appendChild(newScript);\r\n\t\t\t\t}\r\n\t\t\t}, 0);\r\n\t\t} else if (value instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElement.appendChild(value);\r\n\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\tthis.clear();\r\n\t\t\tvalue.setParentNode(this.#wrappedElement);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current instance to a specific parent\r\n\t * @param {*} parent String with the parent selector, reference to the HTMLElement to use as a parent or\r\n\t * \t\t\treference to an ErebusElement or null to detach the wrapped elements\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tsetParentNode(parent) {\r\n\t\tif (!parent) {\r\n\t\t\tif (this.#wrappedElement.parentNode) {\r\n\t\t\t\tthis.#wrappedElement.parentNode.removeChild(this.#wrappedElement);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (parent) === 'string') {\r\n\t\t\tparent = createErebusElement(parent);\r\n\t\t} else if (typeof (parent.appendChild) !== 'function') {\r\n\t\t\tthrow new Error('erebus.wrapper.append_to.invalid_parent[' + typeof (parent) + ']');\r\n\t\t}\r\n\t\tparent.appendChild(this.#wrappedElement);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Alias to the setParent node method that allows to enable compatibility with DOM elements */\r\n\tset parentNode(parent) {\r\n\t\tthis.setParentNode(parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a child element to the wrapped element\r\n\t * @param {*} value String with the HTML element to add or reference to the HTML element to add or\r\n\t * \t\t\treference to the ErebusElement to add.\r\n\t */\r\n\tappendChild(value) {\r\n\t\tif (typeof (value) === 'string') {\r\n\t\t\tconst parsedContent = parseHTML(value);\r\n\t\t\tfor (let idx = 0; idx < parsedContent.length; idx++) {\r\n\t\t\t\tconst content = parsedContent[idx];\r\n\t\t\t\tthis.#wrappedElement.appendChild(content);\r\n\t\t\t}\r\n\t\t} else if (value instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElement.appendChild(value);\r\n\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\tthis.#wrappedElement.appendChild(value.source);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\taddEventListener(eventName, listener, options) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow new Error('erebus.element.add_listener.null_event_name');\r\n\t\t} else if (typeof (listener) === 'function') {\r\n\t\t\tif (options === undefined) {\r\n\t\t\t\toptions = { capture: false };\r\n\t\t\t}\r\n\t\t\tthis.#wrappedElement.addEventListener(eventName, listener, options);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a single execution listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonce(eventName, listener) {\r\n\t\treturn this.addEventListener(eventName, listener, { capture: false, once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a handler to be invoked when the element is clicked\r\n\t * @param {function} handler Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonClick(handler, options) {\r\n\t\treturn this.addEventListener('click', handler, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a handler to be invoked when the element get focus\r\n\t * @param {function} handler Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonFocus(handler, options) {\r\n\t\treturn this.addEventListener('focus', handler, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a handler to be invoked when the element lose focus\r\n\t * @param {function} handler Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonBlur(handler, options) {\r\n\t\treturn this.addEventListener('blur', handler, options);\r\n\t}\r\n\r\n\t/** Allows to determine if the element is hidden or not */\r\n\tget isHidden() {\r\n\t\treturn this.#hidden;\r\n\t}\r\n\r\n\t/** Hides the wrapped elements to make it invisible */\r\n\thide() {\r\n\t\tif (this.#hidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#hidden = true;\r\n\t\tconst computedDisplay = getComputedStyle(this.#wrappedElement).getPropertyValue('display');\r\n\t\tif (computedDisplay && computedDisplay !== 'none') {\r\n\t\t\tthis.#wrappedElement.originalDisplay = computedDisplay;\r\n\t\t}\r\n\t\tthis.#wrappedElement.style.display = 'none';\r\n\t}\r\n\r\n\t/** Shows the wrapped elements to make it visible */\r\n\tshow() {\r\n\t\tthis.#hidden = false;\r\n\t\tconst computedDisplay = getComputedStyle(this.#wrappedElement).getPropertyValue('display');\r\n\t\tif (!computedDisplay || computedDisplay === 'none') {\r\n\t\t\tif (this.#wrappedElement.originalDisplay) {\r\n\t\t\t\tthis.#wrappedElement.style.display = this.#wrappedElement.originalDisplay;\r\n\t\t\t\tdelete this.#wrappedElement.originalDisplay;\r\n\t\t\t} else {\r\n\t\t\t\tthis.#wrappedElement.style.display = 'block';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** Clone the current instance */\r\n\tclone() {\r\n\t\tconst clonedWrapped = cloneHTMLElement(this.#wrappedElement);\r\n\t\treturn new ErebusElement(clonedWrapped);\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\taddClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tfor (let cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (!this.#wrappedElement.className) {\r\n\t\t\t\tthis.#wrappedElement.className = className;\r\n\t\t\t} else if (this.#wrappedElement.classList) {\r\n\t\t\t\tthis.#wrappedElement.classList.add(className);\r\n\t\t\t} else {\r\n\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\tif (!regex.test(this.#wrappedElement.className)) {\r\n\t\t\t\t\tthis.#wrappedElement.className += ' ' + className;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\tremoveClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif (!this.#wrappedElement.className) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (let cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (this.#wrappedElement.classList) {\r\n\t\t\t\tthis.#wrappedElement.classList.remove(className);\r\n\t\t\t} else {\r\n\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\tif (regex.test(this.#wrappedElement.className)) {\r\n\t\t\t\t\tthis.#wrappedElement.className = this.#wrappedElement.className.replace(regex, '');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the CSS class name for the HTMLElements wrapped by the current instance\r\n\t * @param {string} value Name of the CSS class to add\r\n\t */\r\n\tset className(value) {\r\n\t\tvalue = utils.trim(value);\r\n\t\tthis.#wrappedElement.className = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the content from an external resource inside the element represented by the current instance\r\n\t * @param {string} url String of the source URL used to load content into the current instance\r\n\t */\r\n\tasync load(url) {\r\n\t\tif (!url) {\r\n\t\t\tthis.content('<div class=\"erb-badge erb-error\">erebus.element.load.no_url</div>');\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst response = await http.get(url);\r\n\t\t\tthis.content(response);\r\n\t\t} catch (err) {\r\n\t\t\tvar errorBlock = createErrorContent('erebus.element.load.error', err);\r\n\t\t\tthis.content(errorBlock);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default createErebusElement;","import handler from './handler.mjs';\r\nimport utils from './utils.mjs';\r\n\r\nconst $module = {};\r\nconst $scope = {};\r\n// Holds the language defined for the application\r\n$scope.language = null;\r\n// Holds all the resources defined\r\n$scope.resources = {};\r\n// Holds the symbol used by the system to group the thousands\r\n$scope.systemThousandSymbol = null;\r\n// Holds the symbol used by the application to group the thousands\r\n$scope.appThousandSymbol = null;\r\n// Holds the symbol used by the system to separate the decimal part of a number\r\n$scope.systemDecimalSymbol = null;\r\n// Holds the symbol used by the application to separate the decimal part of a number\r\n$scope.appDecimalSymbol = null;\r\n// Holds the date format defined for the locale\r\n$scope.dateFormat = null;\r\n// Holds the date+time format defined for the locale\r\n$scope.dateTimeFormat = null;\r\n\r\n/** Allows to obtain the locale code in the client */\r\n$module.getLocale = function() {\r\n\tif (navigator.language) {\r\n\t\treturn navigator.language;\r\n\t} else if (navigator.browserLanguage) {\r\n\t\treturn navigator.browserLanguage;\r\n\t}\r\n\treturn 'en-US';\r\n};\r\n\r\n/** Obtains the default language defined for the current system */\r\n$module.getSystemLanguage = function() {\r\n\treturn $module.getLocale().substr(0, 2);\r\n};\r\n\r\n/**\r\n * Allows to set the language used by the application\r\n * @param {string} value Two letter ISO language code\r\n */\r\n$module.setLanguage = function(value) {\r\n\t$scope.language = value;\r\n};\r\n\r\n/** Obtains the language defined for the application */\r\n$module.getLanguage = function() {\r\n\tif (!$scope.language) {\r\n\t\treturn $module.getSystemLanguage();\r\n\t}\r\n\treturn $scope.language;\r\n};\r\n\r\n/**\r\n * Sets the resource bundle for a specific language\r\n * @param {*} resource Object with the labels and values, function providing the object with the label and values\r\n * \t\t\t\tor promise to be fulfilled with the label and values\r\n * @param {*} langCode String with the language code or omit to use the system default language\r\n */\r\n$module.setResourceBundle = function(resource, langCode) {\r\n\tif (!resource) {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (!langCode) {\r\n\t\tlangCode = $module.getLanguage();\r\n\t}\r\n\tif (typeof (resource) === 'function') {\r\n\t\tconst result = handler.trigger(resource);\r\n\t\treturn $module.setResourceBundle(result, langCode);\r\n\t} else if (utils.isPromise(resource)) {\r\n\t\treturn resource.then(function (result) {\r\n\t\t\treturn $module.setResourceBundle(result, langCode);\r\n\t\t}).catch(function (ex) {\r\n\t\t\tconst err = Error('erebus.i18n.promise_resource_error');\r\n\t\t\terr.cause = ex;\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t}\r\n\tconst target = $scope.resources[langCode];\r\n\tif (!target) {\r\n\t\t$scope.resources[langCode] = resource;\r\n\t} else {\r\n\t\tObject.assign(target, resource);\r\n\t}\r\n\treturn Promise.resolve();\r\n};\r\n\r\n/**\r\n * Obtains an i18n label for the language defined in the syste,\r\n * @param {*} key Key to obtain the value for it\r\n * @param {*} defaultValue Default value in case that no language resource has been set\r\n */\r\n$module.getLabel = function(key, defaultValue) {\r\n\tconst langCode = $module.getLanguage();\r\n\tconst resources = $scope.resources[langCode];\r\n\tif (!resources || !resources[key]) {\r\n\t\treturn defaultValue ?? key;\r\n\t}\r\n\treturn resources[key];\r\n};\r\n\r\n/** Allows to get the thousands grouping separator used by the system */\r\n$module.getSystemThousandsSeparator = function () {\r\n\tif ($scope.systemThousandSymbol === null) {\r\n\t\tconst numericFormatter = new Intl.NumberFormat($module.getLanguage(), { useGrouping: true, minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\t\tvar value = numericFormatter.format('123456.1');\r\n\t\t$scope.systemThousandSymbol = value.substring(3, 4);\r\n\t}\r\n\treturn $scope.systemThousandSymbol;\r\n};\r\n\r\n/** Allows to get the thousands grouping separator used by the application */\r\n$module.getThousandsSeparator = function () {\r\n\tif ($scope.appThousandSymbol === null) {\r\n\t\t$scope.appThousandSymbol = $module.getSystemThousandsSeparator();\r\n\t}\r\n\treturn $scope.appThousandSymbol;\r\n};\r\n\r\n/** Allows to set the thousands grouping separator used by the application */\r\n$module.setThousandsSeparator = function (value) {\r\n\t$scope.appThousandSymbol = value;\r\n};\r\n\r\n/** Allows to get the decimal symbol used by the application */\r\n$module.getSystemDecimalSymbol = function () {\r\n\tif ($scope.systemDecimalSymbol === null) {\r\n\t\tconst numericFormatter = new Intl.NumberFormat($module.getLanguage(), { useGrouping: true, minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\t\tvar value = numericFormatter.format('1.99');\r\n\t\t$scope.systemDecimalSymbol = value.substring(1, 2);\r\n\t}\r\n\treturn $scope.systemDecimalSymbol;\r\n};\r\n\r\n/** Allows to get the decimal symbol used by the application */\r\n$module.getDecimalSymbol = function () {\r\n\tif ($scope.appDecimalSymbol === null) {\r\n\t\t$scope.appDecimalSymbol = $module.getSystemDecimalSymbol();\r\n\t}\r\n\treturn $scope.appDecimalSymbol;\r\n};\r\n\r\n/** Allows to set the decimal symbol used by the application */\r\n$module.setDecimalSymbol = function (value) {\r\n\t$scope.appDecimalSymbol = value;\r\n};\r\n\r\n/**\r\n * Allows to obtain the date format defined by the system locale configuration\r\n */\r\n$module.getSystemDateFormat = function() {\r\n\tconst dummyDate = new Date(1980, 10, 20);\r\n\tconst locale = $module.getLocale();\r\n\tvar formattedDate = dummyDate.toLocaleDateString(locale, { year: 'numeric', month: 'numeric', day: 'numeric' });\r\n\tformattedDate = formattedDate.replace('1980', 'yyyy');\r\n\tformattedDate = formattedDate.replace('11', 'mm');\r\n\treturn formattedDate.replace('20', 'dd');\r\n};\r\n\r\n/**\r\n * Allows to obtain the date format defined for the application\r\n */\r\n$module.getDateFormat = function() {\r\n\tif (!$scope.dateFormat) {\r\n\t\t$scope.dateFormat = $module.getSystemDateFormat();\r\n\t}\r\n\treturn $scope.dateFormat;\r\n};\r\n\r\n/**\r\n * Allows to define the date format for the application\r\n * @param {string} format String with the date format to define, using the following elements:\r\n * \t\t\t- yyyy: year\r\n * \t\t\t- mm: month\r\n * \t\t\t- dd: day\r\n */\r\n$module.setDateFormat = function(format) {\r\n\t$scope.dateFormat = format;\r\n};\r\n\r\n/**\r\n * Allows to obtain the date and time format defined by the system locale configuration\r\n */\r\n$module.getDateTimeFormat = function() {\r\n\tif (!$scope.dateTimeFormat) {\r\n\t\tconst dateFormat = $module.getDateFormat();\r\n\t\t$scope.dateTimeFormat = `${dateFormat} hh:MM:ss`;\r\n\t}\r\n\treturn $scope.dateTimeFormat;\r\n};\r\n\r\n/**\r\n * Allows to define the date and time format for the application\r\n * @param {string} format String with the date and time format to define, using the following elements:\r\n * \t\t\t- yyyy: year\r\n * \t\t\t- mm: month\r\n * \t\t\t- dd: day\r\n * \t\t\t- hh: Hour of the day\r\n * \t\t\t- MM: minutes\r\n * \t\t\t- ss: Seconds\r\n */\r\n$module.setDateTimeFormat = function(format) {\r\n\t$scope.dateTimeFormat = format;\r\n};\r\n\r\nexport default $module;\r\n","import i18n from './i18n.mjs';\r\n\r\nconst $scope = {};\r\n// Holds the reference to all the formatters defined by the module\r\n$scope.formatters = {};\r\n// Holds the reference to the system formatter used to handle numbers with grouping and decimals\r\n$scope.moneyFormatter = null;\r\n// Holds the reference to the system formatter used to handle numbers with decimals without grouping\r\n$scope.decimalFormatter = null;\r\n\r\n/**\r\n * Internal utility method to make sure the number is represented by a two digit value\r\n * @param {int} value Value to evaluate and add the trailing zero\r\n * @returns String with the numeric value and a zero trailing whenever it is applicable\r\n */\r\nfunction twoDigitNumber(value) {\r\n\tif (value && value < 10) {\r\n\t\treturn `0${value}`;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Internal method to adjust a formatted string with a numeric representation to use the proper\r\n * symbols according to the application configuration\r\n * @param {string} value String with the numeric representation\r\n */\r\nfunction standardizeNumericSymbols(value) {\r\n\tif (value === null || typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\tconst systemThousands = i18n.getSystemThousandsSeparator();\r\n\tconst systemDecimal = i18n.getSystemDecimalSymbol();\r\n\tvar appThousands = i18n.getThousandsSeparator();\r\n\tconst appDecimal = i18n.getDecimalSymbol();\r\n\tif (appThousands === appDecimal) {\r\n\t\tappThousands = '';\r\n\t}\r\n\tif (systemThousands !== appThousands || systemDecimal !== appDecimal) {\r\n\t\tvalue = value.replaceAll(systemThousands, 'T');\r\n\t\tvalue = value.replaceAll(systemDecimal, 'D');\r\n\t\tvalue = value.replaceAll('T', appThousands);\r\n\t\tvalue = value.replaceAll('D', appDecimal);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Process a string representation of a number to deformat it by removing any symbol that is not\r\n * relevant for its parsing\r\n * @param {string} value String with the numeric representation to evaluate\r\n * @returns String with the numeric representation ready to be parsed\r\n */\r\nfunction prepareNumberForParsing(value) {\r\n\tconst appThousands = i18n.getThousandsSeparator();\r\n\tconst appDecimal = i18n.getDecimalSymbol();\r\n\tif (appThousands !== appDecimal) {\r\n\t\tvalue = value.replaceAll(appThousands, '');\r\n\t\tconst systemDecimal = i18n.getSystemDecimalSymbol();\r\n\t\tvalue = value.replaceAll(appDecimal, systemDecimal);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Internal utility method that extracts portions of a date contained in a string\r\n * @param {string} value Value with the string representation of the date\r\n * @param {string} dateFormat Format in which the date is represented\r\n * @param {string} part Part that wants to be extracted\r\n * @returns Value for the required part\r\n */\r\nfunction getDatePart(value, dateFormat, part) {\r\n\tvar startIndex = dateFormat.indexOf(part);\r\n\tvar endIndex = startIndex + part.length;\r\n\tvar partValue = value.substring(startIndex, endIndex);\r\n\treturn parseInt(partValue);\r\n}\r\n\r\n/** Class to define the methods to provide a formatting mechanism */\r\nclass Formatter {\r\n\t#name;\r\n\t#formatter;\r\n\t#deformatter;\r\n\r\n\tconstructor(name, formatter, deformatter) {\r\n\t\tthis.#name = name;\r\n\t\tthis.#formatter = formatter;\r\n\t\tthis.#deformatter = deformatter;\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn this.#name;\r\n\t}\r\n\r\n\t/**\r\n     * Method to transform a raw value into a representation to be shown in the UI\r\n     * @param {any} value Raw value that will be transformed applying the corresponding format\r\n     * @returns Formatted value\r\n     */\r\n\tformat(value) {\r\n\t\treturn this.#formatter(value);\r\n\t}\r\n\r\n\t/**\r\n     * Method to transform a formatted UI value into a raw value that can be used for operations\r\n     * @param {string} value String with the formatted value\r\n     * @returns Raw value transformed to be processed by the system\r\n     */\r\n\tdeformat(value) {\r\n\t\treturn this.#deformatter(value);\r\n\t}\r\n}\r\n\r\n// ----------------\r\n// BOOLEAN\r\n// ----------------\r\n/** Method to format a boolean value to create its UI representation */\r\nfunction booleanFormatter(value) {\r\n\tif (value === null || typeof(value) === 'undefined' || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'boolean') {\r\n\t\treturn `ERROR_NON_BOOLEAN[${value}]`;\r\n\t}\r\n\treturn (value === true) ? 'true' : 'false';\r\n}\r\n\r\n/** Method to parse a formatted value containing a boolean representation coming from the UI */\r\nfunction booleanDeformatter(value) {\r\n\tif (typeof(value) === 'undefined' || value === null) {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn value === 'true';\r\n}\r\n\r\n$scope.formatters['boolean'] = new Formatter('boolean', booleanFormatter, booleanDeformatter);\r\n\r\n// ----------------\r\n// INTEGER\r\n// ----------------\r\n/** Method to format a numeric integer value to create its UI representation */\r\nfunction integerFormatter(value) {\r\n\tif (value === null || typeof(value) === 'undefined' || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'number') {\r\n\t\treturn `ERROR_NAN[${value}]`;\r\n\t}\r\n\treturn String(value);\r\n}\r\n\r\n/** Method to parse a formatted value containing an integer representation coming from the UI */\r\nfunction integerDeformatter(value) {\r\n\tif (typeof(value) === 'undefined' || value === null || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn parseInt(value);\r\n}\r\n\r\n$scope.formatters['integer'] = new Formatter('integer', integerFormatter, integerDeformatter);\r\n\r\n// ----------------\r\n// DECIMAL\r\n// ----------------\r\n/** Method to format a numeric decimal value to create its UI representation */\r\nfunction decimalFormatter(value) {\r\n\tif (value === null || typeof(value) === 'undefined' || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'number') {\r\n\t\treturn `ERROR_NAN[${value}]`;\r\n\t}\r\n\tif ($scope.decimalFormatter === null) {\r\n\t\t$scope.decimalFormatter = Intl.NumberFormat(i18n.getLanguage(), { useGrouping: false, minimumFractionDigits: 2, maximumFractionDigits: 4 });\r\n\t}\r\n\tvar formatted = $scope.decimalFormatter.format(value);\r\n\tformatted = standardizeNumericSymbols(formatted);\r\n\treturn formatted;\r\n}\r\n\r\n/** Method to parse a formatted value containing a decimal representation coming from the UI */\r\nfunction decimalDeformatter(value) {\r\n\tif (typeof(value) === 'undefined' || value === null || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\tif ($scope.decimalFormatter === null) {\r\n\t\t$scope.decimalFormatter = Intl.NumberFormat(i18n.getLanguage(), { useGrouping: false, minimumFractionDigits: 2, maximumFractionDigits: 4 });\r\n\t}\r\n\tvalue = prepareNumberForParsing(value);\r\n\treturn parseFloat(value);\r\n}\r\n\r\n$scope.formatters['decimal'] = new Formatter('decimal', decimalFormatter, decimalDeformatter);\r\n\r\n// ----------------\r\n// MONEY\r\n// ----------------\r\n/** Method to format a numeric value to create its UI representation as money */\r\nfunction moneyFormatter(value) {\r\n\tif (value === null || typeof(value) === 'undefined' || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'number') {\r\n\t\treturn `ERROR_NAN[${value}]`;\r\n\t}\r\n\tif ($scope.moneyFormatter === null) {\r\n\t\t$scope.moneyFormatter = Intl.NumberFormat(i18n.getLanguage(), { useGrouping: true, minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\t}\r\n\tvar formatted = $scope.moneyFormatter.format(value);\r\n\tformatted = standardizeNumericSymbols(formatted);\r\n\treturn formatted;\r\n}\r\n\r\n/** Method to parse a formatted value containing an numeric representation coming from the UI with money format */\r\nfunction moneyDeformatter(value) {\r\n\tif (typeof(value) === 'undefined' || value === null || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\tvalue = prepareNumberForParsing(value);\r\n\treturn parseFloat(value);\r\n}\r\n\r\n$scope.formatters['money'] = new Formatter('money', moneyFormatter, moneyDeformatter);\r\n\r\n// ----------------\r\n// DATE\r\n// ----------------\r\n/** Method to format a date value to create its UI representation with date part */\r\nfunction dateFormatter(value) {\r\n\tif (value === null || typeof(value) === 'undefined') {\r\n\t\treturn null;\r\n\t}\r\n\tif (value instanceof Date) {\r\n\t\tvar dateFormat = i18n.getDateFormat();\r\n\t\tif (!dateFormat) {\r\n\t\t\treturn value.toLocaleDateString(null, { year: 'numeric', month: 'numeric', day: 'numeric' });\r\n\t\t}\r\n\t\tdateFormat = dateFormat.replace('yyyy', value.getFullYear());\r\n\t\tdateFormat = dateFormat.replace('mm', twoDigitNumber(value.getMonth() + 1));\r\n\t\tdateFormat = dateFormat.replace('dd', twoDigitNumber(value.getDate()));\r\n\t\treturn dateFormat;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/** Method to parse a formatted value containing an date representation coming from the UI */\r\nfunction dateDeformatter(value) {\r\n\tif (typeof(value) === 'undefined' || value === null || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\tvar dateFormat = i18n.getDateFormat();\r\n\tvar year = getDatePart(value, dateFormat, 'yyyy');\r\n\tvar month = getDatePart(value, dateFormat, 'mm');\r\n\tvar day = getDatePart(value, dateFormat, 'dd');\r\n\tconst dateValue = new Date(year, month - 1, day);\r\n\treturn dateValue;\r\n}\r\n\r\n$scope.formatters['date'] = new Formatter('date', dateFormatter, dateDeformatter);\r\n\r\n// ----------------\r\n// DATE TIME\r\n// ----------------\r\n/** Method to format a date value to create its UI representation with date and time parts */\r\nfunction dateTimeFormatter(value) {\r\n\tif (value === null || typeof(value) === 'undefined') {\r\n\t\treturn null;\r\n\t}\r\n\tif (value instanceof Date) {\r\n\t\tvar dateFormat = i18n.getDateTimeFormat();\r\n\t\tif (!dateFormat) {\r\n\t\t\treturn value.toLocaleDateString(null, { year: 'numeric', month: 'numeric', day: 'numeric' });\r\n\t\t}\r\n\t\tdateFormat = dateFormat.replace('yyyy', value.getFullYear());\r\n\t\tdateFormat = dateFormat.replace('mm', twoDigitNumber(value.getMonth() + 1));\r\n\t\tdateFormat = dateFormat.replace('dd', twoDigitNumber(value.getDate()));\r\n\t\tdateFormat = dateFormat.replace('hh', twoDigitNumber(value.getHours()));\r\n\t\tdateFormat = dateFormat.replace('MM', twoDigitNumber(value.getMinutes()));\r\n\t\tdateFormat = dateFormat.replace('ss', twoDigitNumber(value.getSeconds()));\r\n\t\treturn dateFormat;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/** Method to parse a formatted value containing an date/time representation coming from the UI */\r\nfunction dateTimeDeformatter(value) {\r\n\tif (typeof(value) === 'undefined' || value === null || value === '') {\r\n\t\treturn null;\r\n\t} else if (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\tvar dateFormat = i18n.getDateTimeFormat();\r\n\tvar year = getDatePart(value, dateFormat, 'yyyy');\r\n\tvar month = getDatePart(value, dateFormat, 'mm');\r\n\tvar day = getDatePart(value, dateFormat, 'dd');\r\n\tvar hour = getDatePart(value, dateFormat, 'hh');\r\n\tvar minute = getDatePart(value, dateFormat, 'MM');\r\n\tvar second = getDatePart(value, dateFormat, 'ss');\r\n\tconst dateValue = new Date(year, month - 1, day, hour, minute, second);\r\n\treturn dateValue;\r\n}\r\n\r\n$scope.formatters['datetime'] = new Formatter('datetime', dateTimeFormatter, dateTimeDeformatter);\r\n\r\n/**\r\n * Allows to obtain a specific formatter\r\n * @param {string} formatName String with the code of the formatter to obtain. The possible values are:\r\n * \t\t\t- integer: Formatter to create and parse representation of integer values\r\n * \t\t\t- decimal: Formatter to create and parse representation of decimal values\r\n * \t\t\t- money: Formatter to create and parse representation of numeric values adding grouping and two decimals\r\n * \t\t\t- date: Formatter to create and parse representation of date values\r\n * \t\t\t- datetime: Formatter to create and parse representation of date and time values\r\n * @returns\r\n */\r\nconst $module = function(formatName) {\r\n\tif (!formatName) {\r\n\t\treturn null;\r\n\t}\r\n\tif (!$scope.formatters[formatName]) {\r\n\t\tconsole.warn(`erebus.formats.unknown_formatter[${formatName}]`);\r\n\t\treturn null;\r\n\t}\r\n\treturn $scope.formatters[formatName];\r\n};\r\n\r\n/**\r\n * Determines if a specific string looks like an ISO date\r\n */\r\n$module.isLikeISODate = function(value, acceptTime) {\r\n\tif (!value || typeof(value) !== 'string') {\r\n\t\treturn false;\r\n\t}\r\n\tvar regex;\r\n\tif (acceptTime === false) {\r\n\t\tregex = /^\\d{4}-\\d{2}-\\d{2}$/gm;\r\n\t} else {\r\n\t\tregex = /^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2})?$/gm;\r\n\t}\r\n\treturn regex.test(value);\r\n};\r\n\r\n/**\r\n * Determines if a specific string looks like an ISO datetime\r\n */\r\n$module.isLikeISODateTime = function(value) {\r\n\tif (!value || typeof(value) !== 'string') {\r\n\t\treturn false;\r\n\t}\r\n\tvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/gm;\r\n\treturn regex.test(value);\r\n};\r\n\r\nexport default $module;\r\n","/** Internal method to clear and stardardize a path */\r\nfunction clearPath(path) {\r\n\tif (path && typeof (path) === 'string') {\r\n\t\tif (path.startsWith('#')) {\r\n\t\t\tpath = path.substring(1);\r\n\t\t}\r\n\t\tif (path.startsWith('/')) {\r\n\t\t\tpath = path.substring(1);\r\n\t\t}\r\n\t}\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Compares a path against the routing path of a router\r\n * @param {string} routingPath Path of the router\r\n * @param {string} targetPath Path to compare\r\n * @returns Boolean value to determine if the route is equivalent to the path\r\n */\r\nfunction compareStringPaths(routingPath, targetPath) {\r\n\tif (routingPath === '*' || routingPath === targetPath) {\r\n\t\treturn true;\r\n\t}\r\n\tconst routingParts = routingPath.split('/');\r\n\tconst targetParts = targetPath.split('/');\r\n\tfor (var idx = 0; idx < routingParts.length; idx++) {\r\n\t\t// ignore the parameter parts in the routing\r\n\t\tif (routingParts[idx].startsWith(':')) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (routingParts[idx] !== '*' && routingParts[idx] !== targetParts[idx]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Uses the pattern defined by a routing path to extract the parameters from it\r\n * @param {string} routingPath String with the routing path\r\n * @param {string} targetPath String with the path to extract the parameters from it\r\n */\r\nfunction extractPathParameters(routingPath, targetPath) {\r\n\tconst parameters = {};\r\n\tconst routingParts = routingPath.split('/');\r\n\tconst targetParts = targetPath.split('/');\r\n\tfor (var idx = 0; idx < routingParts.length; idx++) {\r\n\t\tif (!routingParts[idx].startsWith(':')) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst paramName = routingParts[idx].substring(1);\r\n\t\tparameters[paramName] = targetParts[idx];\r\n\t}\r\n\treturn parameters;\r\n}\r\n\r\n/** Object to represent a single route */\r\nclass Route {\r\n\t/** Path served by this route */\r\n\t#path;\r\n\t/** Handler used to serve the route represented by this instance */\r\n\t#handler;\r\n\r\n\t/**\r\n\t * Creates a new route to serve a specific path\r\n\t * @param {string} path String with the path to serve\r\n\t * @param {function} handler Function to be invoked when this route is served\r\n\t */\r\n\tconstructor(path, handler) {\r\n\t\tthis.#path = clearPath(path);\r\n\t\tthis.#handler = handler;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the current route instance can match a specific path\r\n\t * @param {string} path Path to evaluate\r\n\t */\r\n\tmatch(path) {\r\n\t\tpath = clearPath(path);\r\n\t\tif (typeof (this.#path) === 'string') {\r\n\t\t\treturn compareStringPaths(this.#path, path);\r\n\t\t} else if (this.#path instanceof RegExp) {\r\n\t\t\treturn this.#path.test(path);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/** Handles a request using this route instance */\r\n\thandle(path) {\r\n\t\tif (!this.#handler) {\r\n\t\t\treturn Promise.reject(new Error(`erebus.route.no_handler[${path}]`));\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tpath = clearPath(path);\r\n\t\t\ttry {\r\n\t\t\t\tvar parameters = extractPathParameters(this.#path, path);\r\n\t\t\t\tvar result = this.#handler(parameters);\r\n\t\t\t\tif (result instanceof Promise) {\r\n\t\t\t\t\tresult.then(resolve).catch(reject);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tconsole.error('erebus.route.handler_error', ex);\r\n\t\t\t\treject(ex);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method with the logic to identify the matching router from a list of possible routes\r\n * @param {array} routeList List containing the routes instances to evaluate\r\n * @param {string} path Path to match\r\n * @returns The matching route or null if no matching route is found\r\n */\r\nfunction getMatchingRouter(routeList, path) {\r\n\tfor (var rdx = 0; rdx < routeList.length; rdx++) {\r\n\t\tlet route = routeList[rdx];\r\n\t\tif (route.match(path)) {\r\n\t\t\treturn route;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nclass RouterEngine {\r\n\t/** Hold the list of routes registered */\r\n\t#routes = [];\r\n\t/** Flag to determine if the routing engine has been started */\r\n\t#started = false;\r\n\t/** Reference to the default router registered */\r\n\t#defaultRouter;\r\n\t/** Reference to the error handler */\r\n\t#onError;\r\n\r\n\t/**\r\n\t * Register a router to handle a specific path\r\n\t * @param {string} path Path to handle\r\n\t * @param {function} handler Handler to be triggered when the path is matched\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\tregister(path, handler) {\r\n\t\tif (!handler || typeof(handler) !== 'function') {\r\n\t\t\tthrow new Error(`erebus.router.invalid_handler[${path}]`);\r\n\t\t}\r\n\t\tthis.#routes.push(new Route(path, handler));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Serves a specific path\r\n\t * @param {string} path Path to serve\r\n\t * @returns Promise to be fullfilled (or rejected) after the route is served\r\n\t */\r\n\tserve(path) {\r\n\t\tif (typeof (path) === 'undefined') {\r\n\t\t\tpath = null;\r\n\t\t}\r\n\t\tpath = clearPath(path);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar effectiveRoute = getMatchingRouter(this.#routes, path);\r\n\t\t\tif (!effectiveRoute) {\r\n\t\t\t\teffectiveRoute = this.#defaultRouter;\r\n\t\t\t}\r\n\t\t\tif (!effectiveRoute) {\r\n\t\t\t\treject('erebus.route.no_matching_route_or_default');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\teffectiveRoute.handle(path).then(function () {\r\n\t\t\t\tresolve(true);\r\n\t\t\t}).catch(reject);\r\n\t\t});\r\n\t}\r\n\r\n\t/** Internal method to trigger the routing process based on the current path */\r\n\t#triggerRouting() {\r\n\t\t// TODO: add beforeRoute event\r\n\t\tthis.serve(window.location.hash).then(() => {\r\n\t\t\t// TODO: add afterRoute event\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.error('erebus.router.error', err);\r\n\t\t\tif (this.#onError) {\r\n\t\t\t\tthis.#onError(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Initialize the route engine to start serving requests */\r\n\tstart() {\r\n\t\tif (this.#started) {\r\n\t\t\tconsole.warn('erebus.router.already_started');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#started = true;\r\n\t\twindow.addEventListener('popstate', () => {\r\n\t\t\tthis.#triggerRouting();\r\n\t\t});\r\n\t\tthis.#triggerRouting();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the behavior for the default route (when no other route matches the path)\r\n\t * @param {function} handler Funtion to be invoked when no other route matches the requested path or null to remove the default handler\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\tdefault(handler) {\r\n\t\tif (!handler) {\r\n\t\t\tthis.#defaultRouter = null;\r\n\t\t\treturn this;\r\n\t\t} else if (typeof(handler) != 'function') {\r\n\t\t\tconsole.error('Unable to register a non-function as a default handler for Erebus router');\r\n\t\t\tthrow new Error('erebus.router.invalid_default_handler');\r\n\t\t}\r\n\t\tthis.#defaultRouter = new Route('*', handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the behavior when a route fails\r\n\t * @param {function} handler Funtion to be invoked when the routing causes an error\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\terror(handler) {\r\n\t\tif (!handler) {\r\n\t\t\tthis.#onError = null;\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (handler) !== 'function') {\r\n\t\t\tconsole.error('Unable to register a non-function as an error handler for Erebus router');\r\n\t\t\tthrow new Error('erebus.router.invalid_error_handler');\r\n\t\t}\r\n\t\tthis.#onError = handler;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nconst router = new RouterEngine();\r\nexport default router;","/* eslint-disable no-useless-escape */\r\nimport utils from './utils.mjs';\r\nimport handler from './handler.mjs';\r\nimport formats from './formats.mjs';\r\n\r\nconst $scope = {};\r\n\r\n// Holds the reference to all the validators defined by the module\r\n$scope.validators = {};\r\n\r\n/** Validator to make sure a non-empty/non-null value was provided */\r\n$scope.validators['required'] = function(value) {\r\n\treturn (value !== null && value !== '' && typeof(value) !== 'undefined');\r\n};\r\n\r\n/** Validator to make sure a valid email address was provided */\r\n$scope.validators['email'] = function(value) {\r\n\t// Since this validation is not implicetely requiring a value, then any empty value is considered valid\r\n\tif (value === null || value === undefined || (typeof(value) === 'string' && value.length === 0)) {\r\n\t\treturn true;\r\n\t}\r\n\tvar regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n\treturn typeof(value) === 'string' && regex.test(value);\r\n};\r\n\r\n/** Validator to make sure a valid URL was provided */\r\n$scope.validators['url'] = function(value) {\r\n\t// Since this validation is not implicetely requiring a value, then any empty value is considered valid\r\n\tif (utils.isNonValue(value)) {\r\n\t\treturn true;\r\n\t}\r\n\tvar regex = /((http(s)?):\\/\\/){1}(www|\\w{2,256})(\\.{1}\\w{2,256})+(\\/{1}\\w{2,256})*(\\??\\w{1,255}={1}\\w{1,255}(&{1}\\w{1,255}=\\w{1,255})*)?/g;\r\n\treturn typeof(value) === 'string' && regex.test(value);\r\n};\r\n\r\n/**\r\n * Internal utility method to execute a validation logic that is based on a single value parameter\r\n * @param {*} value Value to evaluate\r\n * @param {string} params String with a the single value parameter used as a reference for the validator\r\n * @param {string} valueType String with the type of the expected data type.  It is used to transform the parameter\r\n * @param {Function} evaluator Function with the validation logic\r\n * @returns Boolean value with the validation result\r\n */\r\nfunction processParametrizedValidator(value, params, evaluator) {\r\n\tif (params === null || params === undefined) {\r\n\t\tthrow new Error('erebus.validator.range.no_threshold');\r\n\t}\r\n\tvar paramTag = null;\r\n\tvar effectiveParam = params;\r\n\tif (typeof(params) === 'object' && typeof(params.tag) === 'string') {\r\n\t\tparamTag = params.tag;\r\n\t\teffectiveParam = params.value;\r\n\t}\r\n\tif (typeof(params) === 'string') {\r\n\t\tif (formats.isLikeISODate(params)) {\r\n\t\t\teffectiveParam = params;\r\n\t\t} else {\r\n\t\t\tif (params.indexOf('.') > 0) {\r\n\t\t\t\teffectiveParam = parseFloat(params);\r\n\t\t\t} else {\r\n\t\t\t\teffectiveParam = parseInt(params);\r\n\t\t\t}\r\n\t\t\tif (isNaN(effectiveParam)) {\r\n\t\t\t\tconst errorCode = 'erebus.validator.range.unparseable';\r\n\t\t\t\tconsole.error(`${errorCode}[${typeof(params)}|${params}]`);\r\n\t\t\t\tthrow new Error(errorCode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn evaluator(value, effectiveParam, paramTag);\r\n}\r\n\r\n/** Validator to make sure an integer value is not less than the provided value */\r\n$scope.validators['min'] = function(value, params) {\r\n\t// A null, an undefined value or an empty string cannot be evaluated against the threshold\r\n\tif (utils.isNonValue(value)) {\r\n\t\treturn true;\r\n\t}\r\n\treturn processParametrizedValidator(value, params, function(value, range, paramTag) {\r\n\t\tif (typeof(value) === 'string') {\r\n\t\t\treturn value.length >= range;\r\n\t\t}\r\n\t\tif (range instanceof Date && paramTag == '@today') {\r\n\t\t\trange.setHours(0);\r\n\t\t\trange.setMinutes(0);\r\n\t\t\trange.setSeconds(0);\r\n\t\t}\r\n\t\treturn value >= range;\r\n\t});\r\n};\r\n\r\n/** Validator to make sure an integer value is not greater than the provided value */\r\n$scope.validators['max'] = function(value, params) {\r\n\t// A null, an undefined value or an empty string cannot be evaluated against the threshold\r\n\tif (utils.isNonValue(value)) {\r\n\t\treturn true;\r\n\t}\r\n\treturn processParametrizedValidator(value, params, function(value, range, paramTag) {\r\n\t\tif (typeof(value) === 'string') {\r\n\t\t\treturn value.length <= range;\r\n\t\t}\r\n\t\tif (range instanceof Date && paramTag == '@today') {\r\n\t\t\trange.setHours(23);\r\n\t\t\trange.setMinutes(59);\r\n\t\t\trange.setSeconds(59);\r\n\t\t}\r\n\t\treturn value <= range;\r\n\t});\r\n};\r\n\r\nconst $module = {};\r\n\r\n/** Parses the parameter contained in a validation expression */\r\nfunction parseValidatorParam(params) {\r\n\tif (params === '@now') {\r\n\t\tparams = { tag: params };\r\n\t\tparams.value = new Date();\r\n\t} else if (params === '@today') {\r\n\t\tparams = { tag: params };\r\n\t\tparams.value = new Date();\r\n\t\tparams.value.setHours(0);\r\n\t\tparams.value.setMinutes(0);\r\n\t\tparams.value.setSeconds(0);\r\n\t\tparams.value.setMilliseconds(0);\r\n\t} else if (typeof(params) === 'string' && params.startsWith('@date')) {\r\n\t\tconst parameterList = params.match(/@date\\(([^)]+)\\)/);\r\n\t\tparams = { tag: '@date' };\r\n\t\tif (parameterList && Array.isArray(parameterList)) {\r\n\t\t\tvar dateValue = parameterList[1];\r\n\t\t\tif (dateValue.length === 10) {\r\n\t\t\t\tdateValue = dateValue + 'T00:00:00';\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tparams.value = new Date(dateValue);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\thandler.handleError(ex, `erebus.validator.param_error[${dateValue}]`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tparams.value = null;\r\n\t\t}\r\n\t}\r\n\treturn params;\r\n}\r\n\r\n/**\r\n * Parses a validation specification and extract the tag, the parameters and the validator for it\r\n * @param {*} validator String with the validator specification\r\n * @returns Object containing the tag, the parameters and the validator reference or null if there is no validator defined for the tag\r\n */\r\nfunction parseValidator(validation) {\r\n\tif (!validation || typeof(validation) !== 'string') {\r\n\t\treturn null;\r\n\t}\r\n\tvar result = null;\r\n\tconst paramIndex = validation.indexOf('=');\r\n\tif (paramIndex < 0) {\r\n\t\tresult = { tag: { name: utils.trim(validation) } };\r\n\t} else {\r\n\t\tresult = { tag: { name: utils.trim(validation.substring(0, paramIndex)) } };\r\n\t\tvar params = utils.trim(validation.substring(paramIndex + 1));\r\n\t\tresult.tag.params = parseValidatorParam(params);\r\n\t}\r\n\tresult.validator = $scope.validators[result.tag.name];\r\n\tif (!result.validator) {\r\n\t\treturn null;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Executes a specific validation\r\n * @param {string} validation String containing the validation specification.  The specification is composed by a tag\r\n * \t\tthat identifies the validation to execute and optional parameters to provide context to the validation instruction.\r\n * \t\tThe parameters are applicable depending on the needs of the validation.  The tag and the parameters are separated\r\n * \t\tby an equals symbol (=).\r\n * @param {*} value Value to validate using the validation specification. It should be provided using the valid type to\r\n * \t\texecute the validation.\r\n * @param {*} failCollector Array to collect the details about the possible validation failures or null if there is no\r\n * \t\tneed to collect the failures.\r\n * @returns Boolean value with the result of the validation\r\n */\r\n$module.validate = function(validation, value, failCollector) {\r\n\tif (!validation) {\r\n\t\treturn true;\r\n\t}\r\n\tconst parsed = parseValidator(validation);\r\n\tif (!parsed) {\r\n\t\tconsole.warn(`erebus.validator.invalid_validation[${validation}]`);\r\n\t\treturn true;\r\n\t}\r\n\tif (!parsed.validator(value, parsed.tag.params)) {\r\n\t\tif (failCollector && Array.isArray(failCollector)) {\r\n\t\t\tfailCollector.push(parsed.tag);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nexport default $module;\r\n","import formats from './formats.mjs';\r\nimport validator from './validator.mjs';\r\nimport utils from './utils.mjs';\r\nimport handler from './handler.mjs';\r\n\r\n/**\r\n * Extracts all the reference to the applicable fields that contains a model attribute\r\n * @param {string} containerId Identifier of the top DOM element from where all the model fields will be extracted\r\n */\r\nfunction getModelFields(containerId) {\r\n\tconst formElement = document.getElementById(containerId);\r\n\tif (!formElement) {\r\n\t\tconsole.warn(`erebus.form.container_not_found[${containerId}]`);\r\n\t\treturn [];\r\n\t}\r\n\treturn formElement.querySelectorAll('[model]');\r\n}\r\n\r\n/**\r\n * Extracts all the reference to the fields that contains a validation attribute\r\n * @param {string} containerId Identifier of the top DOM element from where all the applicable fields will be extracted\r\n */\r\nfunction getValidationFields(containerId) {\r\n\tconst formElement = document.getElementById(containerId);\r\n\tif (!formElement) {\r\n\t\tconsole.warn(`erebus.form.container_not_found[${containerId}]`);\r\n\t\treturn [];\r\n\t}\r\n\treturn formElement.querySelectorAll('[validation]');\r\n}\r\n\r\n/**\r\n * Extracts the applicable formatter according to the field specification\r\n * @param {object} fieldInstance Reference to the field instance to extract the formatter for it\r\n * @returns Formatter instance or null if the field does not have any formatter\r\n */\r\nfunction getFieldFormatter(fieldInstance) {\r\n\tconst formatCode = fieldInstance.getAttribute('format');\r\n\treturn formats(formatCode);\r\n}\r\n\r\n/**\r\n * Gets the value from a specific field\r\n * @param {HTMLElement} fieldInstance Reference to the HTMLElement DOM field instance to extract the value from it\r\n * @returns Field value\r\n */\r\nfunction getFieldValue(fieldInstance) {\r\n\tconst tagName = fieldInstance.tagName;\r\n\tif (tagName === 'INPUT') {\r\n\t\tconst inputType = fieldInstance.getAttribute('type');\r\n\t\tif (inputType === 'checkbox' && fieldInstance.value === '@') {\r\n\t\t\t// NOTE: boolean value is not formatted, so it should not pass thru the formatter logic\r\n\t\t\treturn fieldInstance.checked;\r\n\t\t}\r\n\t}\r\n\tconst formatter = getFieldFormatter(fieldInstance);\r\n\tif (formatter) {\r\n\t\treturn formatter.deformat(fieldInstance.value);\r\n\t}\r\n\treturn fieldInstance.value;\r\n}\r\n\r\n/**\r\n * Sets the value on a specific field\r\n * @param {HTMLElement} fieldInstance Reference to the HTMLElement DOM field instance to set the value on it\r\n * @param {any} value Value to be set\r\n */\r\nfunction setFieldValue(fieldInstance, value) {\r\n\tif (typeof (value) === 'undefined' || value === null) {\r\n\t\tvalue = '';\r\n\t}\r\n\tconst tagName = fieldInstance.tagName;\r\n\tif (tagName === 'INPUT') {\r\n\t\tconst inputType = fieldInstance.getAttribute('type');\r\n\t\tif (inputType === 'checkbox') {\r\n\t\t\tif (fieldInstance.value === '@') {\r\n\t\t\t\tfieldInstance.checked = value;\r\n\t\t\t} else {\r\n\t\t\t\tfieldInstance.checked = (fieldInstance.value === value);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t} else if (inputType === 'radio') {\r\n\t\t\tfieldInstance.checked = (fieldInstance.value === value);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tconst formatter = getFieldFormatter(fieldInstance);\r\n\tif (formatter) {\r\n\t\tvalue = formatter.format(value);\r\n\t}\r\n\tfieldInstance.value = value;\r\n}\r\n\r\n/**\r\n * Determines if a specific model field can be considered to collect its value or not\r\n * @param {HTMLElement} fieldInstance Reference to the HTMLElement DOM field instance to evaluate\r\n */\r\nfunction canCollectField(fieldInstance) {\r\n\tconst tagName = fieldInstance.tagName;\r\n\tif (tagName === 'INPUT') {\r\n\t\tconst inputType = fieldInstance.getAttribute('type');\r\n\t\tif (inputType === 'checkbox') {\r\n\t\t\tif (fieldInstance.value === '@') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn fieldInstance.checked;\r\n\t\t} else if (inputType === 'radio' && !fieldInstance.checked) {\r\n\t\t\treturn false;\r\n\t\t} else if (inputType === 'button') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Collects the value of a specific field and fills the corresponding model into a collector instance\r\n * @param {HTMLElement} fieldInstance Reference to the HTMLElement DOM field instance to collect its value\r\n * @param {object} collector Object in which the model properties and values are being collected into\r\n */\r\nfunction collectField(fieldInstance, collector) {\r\n\tif (!canCollectField(fieldInstance)) {\r\n\t\treturn;\r\n\t}\r\n\tvar model = fieldInstance.getAttribute('model');\r\n\tif (!model) {\r\n\t\treturn;\r\n\t}\r\n\tconst value = getFieldValue(fieldInstance);\r\n\tif (typeof (value) === 'undefined' || value === null || value === '') {\r\n\t\treturn;\r\n\t}\r\n\tmodel = model.split('.');\r\n\tfor (var mdx = 0; mdx < model.length; mdx++) {\r\n\t\tvar modelAttribute = model[mdx];\r\n\t\tif (mdx == model.length - 1) {\r\n\t\t\tcollector[modelAttribute] = value;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!collector[modelAttribute]) {\r\n\t\t\tcollector[modelAttribute] = {};\r\n\t\t}\r\n\t\tcollector = collector[modelAttribute];\r\n\t}\r\n}\r\n\r\n/**\r\n * Allows to determine if a specific field instance is available to be validated\r\n * @param {HTMLElement} fieldInstance Reference to the field to evaluate\r\n * @returns Boolean value to determine if can be validated or not\r\n */\r\nfunction canValidateField(fieldInstance) {\r\n\tif (!fieldInstance) {\r\n\t\treturn false;\r\n\t}\r\n\tconst tagName = fieldInstance.tagName;\r\n\treturn tagName === 'INPUT' || tagName === 'SELECT';\r\n}\r\n\r\n/**\r\n * Extracts an array with the validations or null if the field does not have applicable validations\r\n * @param {HTMLElement} fieldInstance Reference to the field to extract the validations from it\r\n * @returns Array with the validations or null if there are not applicable validations\r\n */\r\nfunction getEffectiveFieldValidations(fieldInstance) {\r\n\tif (!canValidateField(fieldInstance)) {\r\n\t\treturn null;\r\n\t}\r\n\tvar fieldValidations = fieldInstance.getAttribute('validation');\r\n\tif (!fieldValidations || fieldValidations === '') {\r\n\t\treturn null;\r\n\t}\r\n\treturn fieldValidations.split(';');\r\n}\r\n\r\n/**\r\n * Implements the validation of a specific form field\r\n * @param {HTMLElement} fieldInstance Reference to the field to be validated\r\n * @param {*} collector Optional array to collect the details of the validation failures, or function\r\n * \t\t\tto be invoked with the result of each validation. The  function will receive the reference\r\n * \t\t\tto the field, a boolean with the result of the validation, and an array with the list\r\n * \t\t\tof failed validations\r\n * @returns Boolean value to determine if the field passed the validations (true) or not (false)\r\n */\r\nfunction validateField(fieldInstance, collector) {\r\n\tif (!fieldInstance) {\r\n\t\tconsole.warn('erebus.form.validate_field.invalid_field');\r\n\t\treturn false;\r\n\t}\r\n\tconst fieldValidations = getEffectiveFieldValidations(fieldInstance);\r\n\tif (!fieldValidations) {\r\n\t\treturn true;\r\n\t}\r\n\tvar result = true;\r\n\tconst fieldValue = getFieldValue(fieldInstance);\r\n\tconst fieldFailCollector = [];\r\n\tfor (var vdx=0; vdx < fieldValidations.length; vdx++) {\r\n\t\tconst validation = utils.trim(fieldValidations[vdx]);\r\n\t\tif (validation === '') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tresult = validator.validate(validation, fieldValue, fieldFailCollector) && result;\r\n\t}\r\n\tif (collector) {\r\n\t\tif (typeof(collector) === 'function') {\r\n\t\t\thandler.trigger(collector, fieldInstance, result, fieldFailCollector);\r\n\t\t} else if (fieldFailCollector.length > 0 && Array.isArray(collector)) {\r\n\t\t\tcollector.push({ field: fieldInstance, failures: fieldFailCollector });\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n/** Object wrapping the logic to interact with a conceptual form and its fields */\r\nclass FormWrapper {\r\n\t/** String with the identifier of the top HTMLElement containing the form fields */\r\n\t#containerId;\r\n\r\n\t/**\r\n     * Creates the representation of a wrapping object using an identifier to contextualize the field extraction\r\n     * @param {*} containerId String with the identifier of the top HTMLElement containing the form fields\r\n     */\r\n\tconstructor(containerId) {\r\n\t\tthis.#containerId = containerId;\r\n\t}\r\n\r\n\t/** Cleans all the model fields inside the HTMLElement container */\r\n\tclean() {\r\n\t\tconst modelFields = getModelFields(this.#containerId);\r\n\t\tfor (var fdx = 0; fdx < modelFields.length; fdx++) {\r\n\t\t\tsetFieldValue(modelFields[fdx]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n     * Extracts all fields inside the HTMLElement container and collects its values into an object.\r\n     * Each field to be collected should contain a model attribute with the name of the property that will hold the field value.\r\n     * @returns Object containing the field values\r\n     */\r\n\tcollect() {\r\n\t\tconst output = {};\r\n\t\tconst modelFields = getModelFields(this.#containerId);\r\n\t\tfor (var fdx = 0; fdx < modelFields.length; fdx++) {\r\n\t\t\tcollectField(modelFields[fdx], output);\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\r\n\t/**\r\n\t * Populates the fields inside the HTMLElement defined as the form container and set its values according to\r\n\t * the corresponding attribute values from the model defined for each field\r\n\t * @param {*} values Object containing the source to consume the model values to set on each field\r\n\t */\r\n\tfill(values) {\r\n\t\tif (!values) {\r\n\t\t\tthis.clean();\r\n\t\t}\r\n\t\tconst modelFields = getModelFields(this.#containerId);\r\n\t\tfor (var fdx = 0; fdx < modelFields.length; fdx++) {\r\n\t\t\tconst fieldInstance = modelFields[fdx];\r\n\t\t\tvar model = fieldInstance.getAttribute('model');\r\n\t\t\tif (!model) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tvar fieldValue = values;\r\n\t\t\tmodel = model.split('.');\r\n\t\t\tfor (var mdx = 0; mdx < model.length; mdx++) {\r\n\t\t\t\tvar modelAttribute = model[mdx];\r\n\t\t\t\tif (fieldValue) {\r\n\t\t\t\t\tfieldValue = fieldValue[modelAttribute];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetFieldValue(fieldInstance, fieldValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the fields in the form container with applicable validations\r\n\t * @param {*} collector Optional array to collect the details of the validation failures, or function\r\n * \t\t\tto be invoked with the result of each validation. The  function will receive the reference\r\n * \t\t\tto the field, a boolean with the result of the validation, and an array with the list\r\n * \t\t\tof failed validations\r\n\t * @returns Boolean value with the validation result\r\n\t */\r\n\tvalidate(collector) {\r\n\t\tvar result = true;\r\n\t\tconst fieldList = getValidationFields(this.#containerId);\r\n\t\tfor (var fdx = 0; fdx < fieldList.length; fdx++) {\r\n\t\t\tresult = validateField(fieldList[fdx], collector) && result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nconst $module = function (formId) {\r\n\treturn new FormWrapper(formId);\r\n};\r\n\r\n$module.validateField = validateField;\r\n\r\nexport default $module;\r\n","import $ from './element.mjs';\r\nimport handler from './handler.mjs';\r\nimport utils from './utils.mjs';\r\n\r\nconst $scope = {};\r\n// Contains the default target area to load the content.  It can be a string with the selector for the DOM element\r\n// or a reference to an HTMLElement.  If it is null then the body will be used as the target area. The method setDefaultTarget\r\n// is used to define this value\r\n$scope.defaultTarget = null;\r\n\r\n/** Internal method to determine the target used in the execution of a controller */\r\nfunction getEffectiveTarget(specs) {\r\n\tif (specs && !utils.isNonValue(specs.target)) {\r\n\t\treturn specs.target;\r\n\t}\r\n\tif (!utils.isNonValue($scope.defaultTarget)) {\r\n\t\treturn $scope.defaultTarget;\r\n\t}\r\n\treturn document.body;\r\n}\r\n\r\n/**\r\n * Function that allows to define a handler to configure a routing specification that\r\n * loads content from a HTML fragment and executes a JavaScript action after the content\r\n * has been loaded.\r\n * @param {*} specs Object with the specifications to create the routing controller. It is composed by\r\n *          the following attributes:\r\n *          - fragment: String with the URL of the fragment to load, function returning the URL of the fragment to load\r\n * \t\t\t\tor promise with the content to load.  This parameter is mandatory.\r\n *          - target: String with the selector of the DOM element that will receive the content or reference to its HTMLElement.\r\n *              If it not provided, then the default target area will be used.  If no default target area is defined, then the\r\n *              document body will be used.  The function setDefaultTarget can be used to define the default target.\r\n *          - handler: Function to be invoked after the fragment has been loaded and the DOM has been updated with the content\r\n * @returns Function that can be used to configure a route\r\n */\r\nconst $module = function(specs) {\r\n\treturn async function(params) {\r\n\t\tvar effectiveTarget = getEffectiveTarget(specs);\r\n\t\tif (!specs) {\r\n\t\t\t$(effectiveTarget).content('<div class=\"erb-badge erb-error\">erebus.controller.error.no_specs</div>');\r\n\t\t\treturn;\r\n\t\t} else if (!specs.fragment) {\r\n\t\t\t$(effectiveTarget).content('<div class=\"erb-badge erb-error\">erebus.controller.error.no_fragment</div>');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar effectiveFragment = specs.fragment;\r\n\t\tif (typeof(effectiveFragment) === 'function') {\r\n\t\t\teffectiveFragment = handler.trigger(effectiveFragment, params);\r\n\t\t}\r\n\t\tif (utils.isPromise(effectiveFragment)) {\r\n\t\t\tconst content = await effectiveFragment;\r\n\t\t\t$(effectiveTarget).content(content);\r\n\t\t} else if (typeof(effectiveFragment) === 'string') {\r\n\t\t\tawait $(effectiveTarget).load(effectiveFragment);\r\n\t\t} else {\r\n\t\t\t$(effectiveTarget).content('<div class=\"erb-badge erb-error\">erebus.controller.invalid_fragment</div>');\r\n\t\t}\r\n\t\tif (typeof(specs.handler) === 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tspecs.handler(params);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tconst errorCode = 'erebus.controller.handler_error';\r\n\t\t\t\tconsole.error(errorCode, ex);\r\n\t\t\t\tthrow new Error(errorCode);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/**\r\n * Defines the default target area to be used by the controllers\r\n * @param {*} target String with the ID of the DOM element that will receive the content or a reference to an HTMLElement\r\n */\r\n$module.setTarget = function(target) {\r\n\t$scope.defaultTarget = target;\r\n};\r\n\r\nexport default $module;","'use strict';\r\nconsole.log('Erebus Core v0.1.10');\r\n\r\nimport utils from './utils.mjs';\r\nimport cookies from './cookies.mjs';\r\nimport random from './random.mjs';\r\nimport events from './events.mjs';\r\nimport handler from './handler.mjs';\r\nimport $ from './element.mjs';\r\nimport http from './http.mjs';\r\nimport i18n from './i18n.mjs';\r\nimport formats from './formats.mjs';\r\nimport router from './router.mjs';\r\nimport form from './form.mjs';\r\nimport controller from './controller.mjs';\r\n\r\nexport default { utils, cookies, random, events, handler, $, http, i18n, formats, router, controller, form };\r\n","import erebus from 'erebus-core';\r\nimport './protect.css';\r\n\r\nconst $scope = {};\r\n// Allows to determine if the protect layer is visible or not\r\n$scope.visible = false;\r\n\r\nconst $module = {};\r\n\r\n/** Displays the protect layer */\r\n$module.show = async function() {\r\n\tif ($scope.visible) {\r\n\t\treturn;\r\n\t}\r\n\tvar protectElement = document.getElementById('divErebusProtect');\r\n\tif (!protectElement) {\r\n\t\tprotectElement = document.createElement('div');\r\n\t\tprotectElement.setAttribute('id', 'divErebusProtect');\r\n\t\tprotectElement.setAttribute('class', 'erb-protect');\r\n\t\tawait erebus.events.documentReady();\r\n\t\tdocument.body.appendChild(protectElement);\r\n\t} else if (!$scope.visible) {\r\n\t\tprotectElement.classList.remove('erb-hidden');\r\n\t}\r\n\t$scope.visible = true;\r\n};\r\n\r\n/** Hides the protect layer */\r\n$module.hide = async function() {\r\n\tif (!$scope.visible) {\r\n\t\treturn;\r\n\t}\r\n\tvar protectElement = document.getElementById('divErebusProtect');\r\n\tif (protectElement) {\r\n\t\tprotectElement.classList.add('erb-hidden');\r\n\t}\r\n\t$scope.visible = false;\r\n};\r\n\r\nexport default $module;","import erebus from 'erebus-core';\r\nimport protect from './protect.mjs';\r\nimport './dialog.css';\r\n\r\n/** Constant with the identifier for the DOM element containing the dialog */\r\nconst DIALOG_CONTAINER_ID = 'divErebusDialog';\r\n\r\nconst $scope = {};\r\n// contains the list of dialogs to be open\r\n$scope.queue = [];\r\n// contains the reference to the current dialog (if there is any dialog open)\r\n$scope.current = null;\r\n\r\n/** Extract the default title for a specific dialog type */\r\nfunction getDefaultTitle(type) {\r\n\treturn erebus.i18n.getLabel(`dialog.title.${type}`, type);\r\n}\r\n\r\n/** Collects and opens the next dialog in the queue */\r\nfunction nextDialog() {\r\n\tconst dialog = $scope.queue.shift();\r\n\tif (dialog) {\r\n\t\tdialog.open();\r\n\t} else {\r\n\t\t$scope.current = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal utility method to obtain the reference to the DOM element that represents the dialog top container or \r\n * creates it in case it does not exist.\r\n * @param {string} dialogType String with the dialog type\r\n * @returns Reference to the dialog container\r\n */\r\nfunction getOrCreateDialogContainer(dialogType) {\r\n\tvar container = document.getElementById(DIALOG_CONTAINER_ID);\r\n\tif (!container) {\r\n\t\tcontainer = document.createElement('div');\r\n\t\tcontainer.setAttribute('id', DIALOG_CONTAINER_ID);\r\n\t} else {\r\n\t\tcontainer.parentElement.removeChild(container);\r\n\t\tcontainer.innerHTML = '';\r\n\t}\r\n\tcontainer.setAttribute('class', 'erb-dialog erb-' + dialogType);\r\n\treturn container;\r\n}\r\n\r\n/**\r\n * Creates the DOM element that renders an X close button inside the dialog\r\n * @param {HTMLElement} container Reference to the DOM element that represents the dialog top container\r\n * @returns Reference to the element added to the dialog\r\n */\r\nfunction createTopCloseButton(container) {\r\n\tconst topClosebutton = document.createElement('div');\r\n\ttopClosebutton.setAttribute('class', 'erb-close');\r\n\tcontainer.appendChild(topClosebutton);\r\n\treturn topClosebutton;\r\n}\r\n\r\n/**\r\n * Creates the DOM element that renders the dialog title\r\n * @param {HTMLElement} container Reference to the DOM element that represents the dialog top container\r\n * @param {string} title String with the dialog title (text or HTML)\r\n */\r\nfunction createDialogTitle(container, title) {\r\n\tconst titleArea = document.createElement('div');\r\n\ttitleArea.setAttribute('class', 'erb-header');\r\n\ttitleArea.innerHTML = title;\r\n\tcontainer.appendChild(titleArea);\r\n}\r\n\r\n/**\r\n * Creates the DOM element that renders the dialog body\r\n * @param {HTMLElement} container Reference to the DOM element that represents the dialog top container\r\n * @param {string} title String with the dialog content (text or HTML)\r\n */\r\nfunction createDialogBody(container, message) {\r\n\tconst bodyArea = document.createElement('div');\r\n\tbodyArea.setAttribute('class', 'erb-body');\r\n\tbodyArea.innerHTML = message;\r\n\tcontainer.appendChild(bodyArea);\r\n}\r\n\r\n/**\r\n * Internal utility method to create a dialog button\r\n * @param {HTMLElement} buttonContainer Reference to the DOM element to append the button into it\r\n * @param {string} buttonText String with the button text\r\n * @param {string} buttonClass String with the button CSS class used as modifier\r\n * @param {Function} listener Reference to a function to be invoked when the button is clicked\r\n */\r\nfunction createDialogButton(buttonContainer, buttonText, buttonClass, listener) {\r\n\tconst closeButton = document.createElement('button');\r\n\tcloseButton.setAttribute('class', buttonClass);\r\n\tcloseButton.innerHTML = buttonText;\r\n\tcloseButton.addEventListener('click', listener);\r\n\tbuttonContainer.appendChild(closeButton); \r\n}\r\n\r\n/**\r\n * Cerates the DOM element that renders the dialog footer\r\n * @param {HTMLElement} container Reference to the DOM element that represents the dialog top container\r\n */\r\nfunction createDialogFooter(container, dialogType, dialogReference) {\r\n\tconst footerArea = document.createElement('div');\r\n\tfooterArea.setAttribute('class', 'erb-footer');\r\n\tif (dialogType === $module.TYPE.confirm) {\r\n\t\tconst yesLabel = erebus.i18n.getLabel('button.yes', 'Yes');\r\n\t\tcreateDialogButton(footerArea, yesLabel, 'erb-button erb-positive', function() {\r\n\t\t\tdialogReference.close(true);\r\n\t\t});\r\n\t\tconst noLabel = erebus.i18n.getLabel('button.no', 'No');\r\n\t\tcreateDialogButton(footerArea, noLabel, 'erb-button erb-negative', function() {\r\n\t\t\tdialogReference.close(false);\r\n\t\t});\r\n\t} else {\r\n\t\tconst closeLabel = erebus.i18n.getLabel('button.close', 'Close');\r\n\t\tcreateDialogButton(footerArea, closeLabel, 'erb-button', function() {\r\n\t\t\tdialogReference.close();\r\n\t\t});\r\n\t}\r\n\tcontainer.appendChild(footerArea);\r\n}\r\n\r\n/** Class representing a dialog instance providing methods to interact with the dialog DOM representation */\r\nclass ErebusDialog {\r\n\t// String with the type of dialog\r\n\t#type;\r\n\t// String with the dialog message\r\n\t#message;\r\n\t// String with the dialog title or null to use the default title depending on the dialog type\r\n\t#title;\r\n\t// Reference to a function used as a handler to be invoked when the dialog is closed\r\n\t#onClose;\r\n\t\r\n\tconstructor(dialogType, message, title, onClose) {\r\n\t\tif (!title) {\r\n\t\t\ttitle = getDefaultTitle(dialogType);\r\n\t\t}\r\n\t\tthis.#type = dialogType;\r\n\t\tthis.#message = message;\r\n\t\tthis.#title = title;\r\n\t\tthis.#onClose = onClose;\r\n\t}\r\n\r\n\t/**\r\n\t * Opens the dialog instance\r\n\t */\r\n\tasync open() {\r\n\t\t$scope.current = this;\r\n\t\tprotect.show();\r\n\t\tconst container = getOrCreateDialogContainer(this.#type);\r\n\t\tif (this.#type !== $module.TYPE.confirm) {\r\n\t\t\tconst topCloseButton = createTopCloseButton(container);\r\n\t\t\ttopCloseButton.addEventListener('click', () => {\r\n\t\t\t\tthis.close();\r\n\t\t\t});\r\n\t\t}\r\n\t\tcreateDialogTitle(container, this.#title);\r\n\t\tcreateDialogBody(container, this.#message);\r\n\t\tcreateDialogFooter(container, this.#type, this);\r\n\t\tawait erebus.events.documentReady();\r\n\t\tdocument.body.appendChild(container);\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the dialog instance\r\n\t * @param {*} value Optional value pass to the promise fullfilled when the dialog was opened\r\n\t */\r\n\tasync close(value) {\r\n\t\tvar container = document.getElementById(DIALOG_CONTAINER_ID);\r\n\t\tcontainer.classList.add('erb-hidden');\r\n\t\tcontainer.innerHTML = '';\r\n\t\t$scope.current = null;\r\n\t\tprotect.hide();\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.#onClose(value);\r\n\t\t\tnextDialog();\r\n\t\t}, 0);\r\n\t}\r\n}\r\n\r\n/**\r\n * Generic method to create a dialog with a dynamic type. Should receive: \r\n * @param {string} dialogType String with the type of dialog to create (info, success, warn, error, confirm).\r\n * \t\tThe following constants can be used: \r\n * \t\t\t- Erebus.dialog.TYPE.info.\r\n * \t\t\t- Erebus.dialog.TYPE.success.\r\n * \t\t\t- Erebus.dialog.TYPE.warn.\r\n * \t\t\t- Erebus.dialog.TYPE.error.\r\n * \t\t\t- Erebus.dialog.TYPE.confirm.\r\n * @param {string} message String with the message or HTML content to show in the dialog body\r\n * @param {string} title Optional string with the title of the dialog or omit to use the default title\r\n * @returns Promise to be fulfilled when the dialog has been dismiss by the user\r\n */\r\nconst $module = function (dialogType, message, title) {\r\n\treturn new Promise(function(resolve) {\r\n\t\tconst dialog = new ErebusDialog(dialogType, message, title, resolve);\r\n\t\tif ($scope.current) {\r\n\t\t\t$scope.queue.push(dialog);\r\n\t\t} else {\r\n\t\t\tdialog.open();\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/** Contains constants for all the dialog types */\r\n$module.TYPE = { info: 'info', success: 'success', warn: 'warn', error: 'error', confirm: 'confirm' };\r\n\r\n/**\r\n * Creates an informational dialog.\r\n * @param {string} message String with the message or HTML content to show in the dialog body\r\n * @param {string} title Optional string with the title of the dialog or omit to use the default title\r\n * @returns Promise to be fulfilled when the dialog has been dismiss by the user\r\n */\r\n$module.info = function (message, title) {\r\n\treturn $module($module.TYPE.info, message, title);\r\n};\r\n\r\n/**\r\n * Creates a success dialog.\r\n * @param {string} message String with the message or HTML content to show in the dialog body\r\n * @param {string} title Optional string with the title of the dialog or omit to use the default title\r\n * @returns Promise to be fulfilled when the dialog has been dismiss by the user\r\n */\r\n$module.success = function (message, title) {\r\n\treturn $module($module.TYPE.success, message, title);\r\n};\r\n\r\n/**\r\n * Creates a warning dialog.\r\n * @param {string} message String with the message or HTML content to show in the dialog body\r\n * @param {string} title Optional string with the title of the dialog or omit to use the default title\r\n * @returns Promise to be fulfilled when the dialog has been dismiss by the user\r\n */\r\n$module.warn = function (message, title) {\r\n\treturn $module($module.TYPE.warn, message, title);\r\n};\r\n\r\n/**\r\n * Creates an error dialog.\r\n * @param {string} message String with the message or HTML content to show in the dialog body\r\n * @param {string} title Optional string with the title of the dialog or omit to use the default title\r\n * @returns Promise to be fulfilled when the dialog has been dismiss by the user\r\n */\r\n$module.error = function (message, title) {\r\n\treturn $module($module.TYPE.error, message, title);\r\n};\r\n\r\n/**\r\n * Creates a confirm dialog.\r\n * @param {string} message String with the message or HTML content to show in the dialog body\r\n * @param {string} title Optional string with the title of the dialog or omit to use the default title\r\n * @returns Promise to be fulfilled with the selection of the user\r\n */\r\n$module.confirm = function (message, title) {\r\n\treturn $module($module.TYPE.confirm, message, title);\r\n};\r\n\r\nexport default $module;\r\n","import erebus from 'erebus-core';\r\nimport './toast.css';\r\n\r\n/** Constant with the identifier used for the DOM element containing all the toasts */\r\nconst TOAST_CONTAINER_ID = 'divErebusToastContainer';\r\n/** Constant with the prefix used to generate the toast identifiers */\r\nconst TOAST_ID_PREFIX = 'erbToast_';\r\n/** Constant with the default time (in milis) used to dismiss the toasts automatically */\r\nconst DEFAULT_TIMEOUT = 8000;\r\n/** Hold a reference to every toast element that is opened */\r\nconst openToasts = {};\r\n/** Reference to the event triggered when the toast is closed */\r\nconst closeEvent = new CustomEvent('toast-close');\r\n\r\n/** Extract the default title for a specific toast type */\r\nfunction getDefaultTitle(type) {\r\n\treturn erebus.i18n.getLabel(`toast.title.${type}`, type);\r\n}\r\n\r\n/** Obtains (or creates if does not exist) the main container used to position all the toasts */\r\nasync function getOrCreateToastContainer() {\r\n\tawait erebus.events.documentReady();\r\n\tvar container = document.getElementById(TOAST_CONTAINER_ID);\r\n\tif (!container) {\r\n\t\tcontainer = document.createElement('div');\r\n\t\tcontainer.setAttribute('id', TOAST_CONTAINER_ID);\r\n\t\tcontainer.setAttribute('class', 'erb-toast-container');\r\n\t\tdocument.body.appendChild(container);\r\n\t}\r\n\treturn container;\r\n}\r\n\r\nfunction createToastTitle(container, toastType, title) {\r\n\tconst titleElement = document.createElement('div');\r\n\ttitleElement.setAttribute('class', 'erb-header');\r\n\tif (!title) {\r\n\t\ttitle = getDefaultTitle(toastType);\r\n\t}\r\n\ttitleElement.innerHTML = title;\r\n\tcontainer.appendChild(titleElement);\r\n}\r\n\r\nfunction createToastBody(container, message) {\r\n\tconst bodyElement = document.createElement('div');\r\n\tbodyElement.setAttribute('class', 'erb-body');\r\n\tbodyElement.innerHTML = message;\r\n\tcontainer.appendChild(bodyElement);\r\n}\r\n\r\nfunction createToastBox(toastId, toastType, message, title) {\r\n\tconst toastBox = document.createElement('div');\r\n\ttoastBox.setAttribute('id', TOAST_ID_PREFIX + toastId);\r\n\ttoastBox.setAttribute('class', 'erb-toast erb-' + toastType);\r\n\tcreateToastTitle(toastBox, toastType, title);\r\n\tcreateToastBody(toastBox, message);\r\n\treturn toastBox;\r\n}\r\n\r\nclass ErebusToast {\r\n\t#id;\r\n\t#type;\r\n\t#message;\r\n\t#title;\r\n\t#status;\r\n\r\n\tconstructor(toastType, message, title) {\r\n\t\tthis.#id = erebus.random.shortId();\r\n\t\tthis.#type = toastType;\r\n\t\tthis.#message = message;\r\n\t\tthis.#title = title;\r\n\t\t// Allows to determine the toast status (-1=Never opened, 1=Opened, 0=Closed)\r\n\t\tthis.#status = -1;\r\n\t}\r\n\r\n\tasync open() {\r\n\t\tif (this.#status == 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#status = 1;\r\n\t\tconst toastBox = createToastBox(this.#id, this.#type, this.#message, this.#title);\r\n\t\ttoastBox.addEventListener('click', () => {\r\n\t\t\tthis.close();\r\n\t\t});\r\n\t\tconst container = await getOrCreateToastContainer();\r\n\t\tcontainer.appendChild(toastBox);\r\n\t\tawait erebus.events.animate(toastBox, 'erb-open');\r\n\t\topenToasts[this.#id] = this;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tautoClose(timing) {\r\n\t\tif (!timing || typeof(timing) !== 'number') {\r\n\t\t\ttiming = DEFAULT_TIMEOUT;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.close();\r\n\t\t}, timing);\r\n\t}\r\n\r\n\tclose() {\r\n\t\tif (this.#status !== 1) {\r\n\t\t\tconsole.warn('erebus.components.toast.already_closed');\r\n\t\t\treturn Promise.resolve(false);\r\n\t\t}\r\n\t\tthis.#status = 0;\r\n\t\tdelete openToasts[this.#id];\r\n\t\tconst toastBox = document.getElementById(TOAST_ID_PREFIX + this.#id);\r\n\t\tif (!toastBox) {\r\n\t\t\tconsole.warn('erebus.components.toast.toast_element_not_found');\r\n\t\t\treturn Promise.resolve(false);\r\n\t\t}\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\terebus.events.animate(toastBox, 'erb-closed').then(() => {\r\n\t\t\t\ttoastBox.classList.remove('erb-open');\r\n\t\t\t\ttoastBox.parentElement.removeChild(toastBox);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\ttoastBox.dispatchEvent(closeEvent);\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n     * Adds an event listener triggered after the toast has been closed\r\n     * @param {function} handler Function to be triggered after the toast has been closed\r\n     * @param {object} params Parameters to define the listener behavior. To set the listener to be triggered only once use { once: true }.\r\n     */\r\n\tonClose(handler, params) {\r\n\t\tif(typeof(handler) !== 'function') {\r\n\t\t\tthrow Error('erebus.components.toast.on_close.invalid_handler');\r\n\t\t}\r\n\t\tconst toastBox = document.getElementById(TOAST_ID_PREFIX + this.#id);\r\n\t\ttoastBox.addEventListener('toast-close', handler, params);\r\n\t}\r\n}\r\n\r\nconst $module = async function(toastType, message, title) {\r\n\tconst toast = new ErebusToast(toastType, message, title);\r\n\treturn toast.open();\r\n};\r\n\r\n/** Contains constants for all the module types */\r\n$module.TYPE = { info: 'info', success: 'success', warn: 'warn', error: 'error' };\r\n\r\n/**\r\n * Create an error toast with specific content on it\r\n * @param {string} content HTML content to put in the toast\r\n */\r\n$module.error = function(messsage, title) {\r\n\treturn $module($module.TYPE.error, messsage, title);\r\n};\r\n\r\n/**\r\n * Create a warning toast with specific content on it\r\n * @param {string} content HTML content to put in the toast\r\n */\r\n$module.warn = function(messsage, title) {\r\n\treturn $module($module.TYPE.warn, messsage, title);\r\n};\r\n\r\n/**\r\n * Create a success toast with specific content on it\r\n * @param {string} content HTML content to put in the toast\r\n */\r\n$module.success = function(messsage, title) {\r\n\treturn $module($module.TYPE.success, messsage, title);\r\n};\r\n\r\n/**\r\n * Create an info toast with specific content on it\r\n * @param {string} content HTML content to put in the toast\r\n */\r\n$module.info = function(messsage, title) {\r\n\treturn $module($module.TYPE.info, messsage, title);\r\n};\r\n\r\n/**\r\n * Closes all the open toasts\r\n */\r\n$module.closeAll = async function() {\r\n\tfor(var toastId in openToasts) {\r\n\t\tconst toast = openToasts[toastId];\r\n\t\tif (toast) {\r\n\t\t\tawait toast.close();\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default $module;\r\n","import erebus from 'erebus-core';\r\n\r\n/**\r\n * Internal method to capture the validation result for a field and adjust the view\r\n * accordingly\r\n * @param {HTMLElement} field Reference to the field element being validated\r\n * @param {boolean} result Boolean value with the result of the validation\r\n * @param {Array} failures Array containing the failures (in case the result is false)\r\n */\r\nfunction handleValidation(field, result, failures) {\r\n\tvar fieldContainer = (field) ? field.parentNode : null;\r\n\tif (!fieldContainer || fieldContainer.className.indexOf('erb-field') < 0) {\r\n\t\treturn;\r\n\t}\r\n\t// Resets the visual status of the field\r\n\tvar pillContainer = fieldContainer.querySelector('.erb-pills');\r\n\tif (pillContainer) {\r\n\t\tfieldContainer.removeChild(pillContainer);\r\n\t}\r\n\tif (result) {\r\n\t\tfieldContainer.classList.remove('erb-error');\r\n\t\treturn;\r\n\t}\r\n\t// Marks the field as failed\r\n\tfieldContainer.classList.add('erb-error');\r\n\tif (pillContainer) {\r\n\t\tpillContainer.innerHTML = '';\r\n\t} else {\r\n\t\tpillContainer = document.createElement('div');\r\n\t\tpillContainer.setAttribute('class', 'erb-pills');\r\n\t}\r\n\t// Sets the validation error pills\r\n\tfor (var fdx=0; fdx < failures.length; fdx++) {\r\n\t\tconst failure = failures[fdx];\r\n\t\tvar message = erebus.i18n.getLabel(`validation.pill.${failure.name}`, failure.name);\r\n\t\tif (message.indexOf('@@') >= 0) {\r\n\t\t\tvar params = failure.params;\r\n\t\t\tif (typeof(params) === 'object' && typeof(params.tag) === 'string') {\r\n\t\t\t\tparams = params.value;\r\n\t\t\t}\r\n\t\t\tif (params instanceof Date) {\r\n\t\t\t\tparams = erebus.formats('date').format(params);\r\n\t\t\t}\r\n\t\t\tmessage = message.replace('@@', params);\r\n\t\t}\r\n\t\tconst pill = document.createElement('div');\r\n\t\tpill.innerHTML = message;\r\n\t\tpillContainer.appendChild(pill);\r\n\t}\r\n\tfieldContainer.appendChild(pillContainer);\r\n}\r\n\r\nconst $module = function(field, result, failures) {\r\n\thandleValidation(field, result, failures);\r\n\t// Register the events to validate the field according to the user interactions\r\n\t// this should be registered only once per field\r\n\tif (!field.getAttribute('erb-validation-handler')) {\r\n\t\tfield.setAttribute('erb-validation-handler', 'true');\r\n\t\tfield.addEventListener('blur', function() {\r\n\t\t\terebus.form.validateField(this, handleValidation);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default $module;\r\n","'use strict';\r\nimport erebus from 'erebus-core';\r\nimport dialog from './components/dialog.mjs';\r\nimport toast from './components/toast.mjs';\r\nimport validationHandler from './components/validation-handler.mjs';\r\nimport './erebus-components.css';\r\nimport './badge.css';\r\nimport './forms.css';\r\nconsole.log('Erebus Components v0.0.11');\r\n\r\nconst langCode = erebus.i18n.getLanguage();\r\nimport resources from '../resources/en.mjs';\r\nerebus.i18n.setResourceBundle(resources, langCode);\r\n\r\n// declares the erebus components once the document is ready\r\nerebus.components = {};\r\nerebus.dialog = dialog;\r\nerebus.toast = toast;\r\nerebus.form.handler = validationHandler;\r\n\r\n/**\r\n * Allows to sync the moment when the components module has been initialized and is ready\r\n * @returns Promise to be fullfilled once the components engine is ready\r\n */\r\nerebus.components.onReady = async function () {\r\n\tawait erebus.onDocumentReady();\r\n};\r\n\r\nexport default erebus;\r\n","export default {\r\n\t\"erebus\": \"Erebus framework\",\r\n\t\"dialog.title.success\": \"Success\",\r\n\t\"dialog.title.info\": \"Information\",\r\n\t\"dialog.title.warn\": \"Attention\",\r\n\t\"dialog.title.error\": \"Error\",\r\n\t\"dialog.title.confirm\": \"Confirmation\",\r\n\t\"toast.title.success\": \"Success\",\r\n\t\"toast.title.info\": \"Information\",\r\n\t\"toast.title.warn\": \"Attention\",\r\n\t\"toast.title.error\": \"Error\",\r\n\t\"button.close\": \"Close\",\r\n\t\"button.yes\": \"Yes\",\r\n\t\"button.no\": \"No\",\r\n\t\"validation.pill.required\": \"Required\",\r\n\t\"validation.pill.min\": \"Min value is @@\",\r\n\t\"validation.pill.max\": \"Max value is @@\",\r\n\t\"validation.param.@today\": \"today\",\r\n};\r\n"],"names":["$module","value","Promise","then","replace","trim","length","tinyId","Math","random","toString","substring","$module$c","set","name","timespan","Error","expireDate","Date","setTime","getTime","cookie","utils","toGMTString","document","get","cookiestring","RegExp","exec","decodeURIComponent","shortId","guid","$module$b","readyState","resolve","addEventListener","attachEvent","console","error","reject","target","animationClass","capture","once","className","classList","add","addClass","$module$a","fnc","params","call","ex","handleError","err","code","errorCode","log","$scope","executeRequest","method","url","options","request","window","XMLHttpRequest","ActiveXObject","createXmlHttp","onreadystatechange","status","response","responseText","headers","rawHeaders","getAllResponseHeaders","split","idx","parts","headerName","toLowerCase","headerValue","getResponseHeaders","parser","contentType","startsWith","parsers","getResponseParser","result","interceptor","undefined","open","async","setRequestHeader","setRequestHeaders","data","send","$scope$7","JSON","parse","cause","post","put","delete","loadScript","element","createElement","src","type","onerror","onload","head","appendChild","xmlToHtml","xmlElement","htmlElement","tagName","ndx","attributes","xmlAttribute","setAttribute","childNodes","childXml","nodeType","childText","createTextNode","textContent","warn","childHtml","parseHTML","content","domParser","DOMParser","holder","innerHTML","results","parseFromString","push","createErrorContent","errorInstance","errorId","errorElement","createErebusElement","source","ErebusElement","body","HTMLElement","nativeSource","endsWith","getElementById","querySelector","wrappedElement","hidden","constructor","this","clear","firstChild","removeChild","removeAllChild","setTimeout","innerScripts","querySelectorAll","scriptObj","parentNode","newScript","setParentNode","parent","parsedContent","eventName","listener","onClick","handler","onFocus","onBlur","isHidden","hide","computedDisplay","getComputedStyle","getPropertyValue","originalDisplay","style","display","show","clone","clonedWrapped","sourceElement","clonedElement","cloneNode","removeAttribute","cloneHTMLElement","classes","cdx","test","removeClass","remove","regex","http","errorBlock","$module$8","getLocale","navigator","language","browserLanguage","getSystemLanguage","substr","setLanguage","getLanguage","setResourceBundle","resource","langCode","trigger","isPromise","catch","resources","Object","assign","getLabel","key","defaultValue","getSystemThousandsSeparator","systemThousandSymbol","Intl","NumberFormat","useGrouping","minimumFractionDigits","maximumFractionDigits","format","getThousandsSeparator","appThousandSymbol","setThousandsSeparator","getSystemDecimalSymbol","systemDecimalSymbol","getDecimalSymbol","appDecimalSymbol","setDecimalSymbol","getSystemDateFormat","dummyDate","locale","formattedDate","toLocaleDateString","year","month","day","getDateFormat","dateFormat","setDateFormat","getDateTimeFormat","dateTimeFormat","setDateTimeFormat","twoDigitNumber","standardizeNumericSymbols","systemThousands","i18n","systemDecimal","appThousands","appDecimal","replaceAll","prepareNumberForParsing","getDatePart","part","startIndex","indexOf","endIndex","partValue","parseInt","formatters","moneyFormatter","decimalFormatter","Formatter","formatter","deformatter","deformat","String","formatted","parseFloat","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","hour","minute","second","formatName","clearPath","path","isLikeISODate","acceptTime","isLikeISODateTime","Route","match","routingPath","targetPath","routingParts","targetParts","compareStringPaths","handle","parameters","extractPathParameters","router","routes","started","defaultRouter","onError","register","serve","effectiveRoute","routeList","rdx","route","getMatchingRouter","triggerRouting","location","hash","start","default","processParametrizedValidator","evaluator","paramTag","effectiveParam","tag","formats","isNaN","validators","$scope$3","isNonValue","range","setHours","setMinutes","setSeconds","parseValidator","validation","paramIndex","setMilliseconds","parameterList","Array","isArray","dateValue","parseValidatorParam","validator","getModelFields","containerId","formElement","getFieldFormatter","fieldInstance","formatCode","getAttribute","getFieldValue","checked","setFieldValue","inputType","collectField","collector","canCollectField","model","mdx","modelAttribute","validateField","fieldValidations","canValidateField","getEffectiveFieldValidations","fieldValue","fieldFailCollector","vdx","validate","field","failures","$module$6","failCollector","parsed","FormWrapper","clean","modelFields","fdx","collect","output","fill","values","fieldList","getValidationFields","formId","$module$5","defaultTarget","specs","effectiveTarget","getEffectiveTarget","fragment","effectiveFragment","$","load","setTarget","erebus","cookies","events","controller","form","_asyncToGenerator","_regeneratorRuntime","mark","_callee","protectElement","wrap","_context","prev","next","visible","abrupt","documentReady","stop","_callee2","_context2","DIALOG_CONTAINER_ID","getOrCreateDialogContainer","dialogType","container","parentElement","createTopCloseButton","topClosebutton","createDialogTitle","title","titleArea","createDialogBody","message","bodyArea","createDialogButton","buttonContainer","buttonText","buttonClass","closeButton","createDialogFooter","dialogReference","footerArea","TYPE","confirm","close","queue","current","_type","WeakMap","_message","_title","_onClose","ErebusDialog","onClose","_classCallCheck","_classPrivateFieldInitSpec","writable","concat","_classPrivateFieldSet","_close","_open","_createClass","_this","protect","_classPrivateFieldGet","apply","arguments","_this2","dialog","shift","_x","$module$2","info","success","TOAST_CONTAINER_ID","TOAST_ID_PREFIX","openToasts","closeEvent","CustomEvent","getOrCreateToastContainer","_getOrCreateToastContainer","_callee4","_context4","createToastTitle","toastType","titleElement","createToastBox","toastId","toastBox","bodyElement","createToastBody","_id","_status","ErebusToast","sent","animate","timing","dispatchEvent","_ref","toast","_x2","_x3","handleValidation","fieldContainer","pillContainer","failure","_typeof","pill","$module$1","messsage","closeAll","_callee3","_context3","t0","keys","t1","done","components","onReady","onDocumentReady"],"mappings":"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"}