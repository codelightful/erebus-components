{"version":3,"file":"erebus-components.min.js","sources":["../node_modules/erebus-core/src/utils.mjs","../node_modules/erebus-core/src/cookies.mjs","../node_modules/erebus-core/src/random.mjs","../node_modules/erebus-core/src/events.mjs","../node_modules/erebus-core/src/handler.mjs","../node_modules/erebus-core/src/http.mjs","../node_modules/erebus-core/src/element.mjs","../node_modules/erebus-core/src/i18n.mjs","../node_modules/erebus-core/src/router.mjs","../node_modules/erebus-core/src/erebus.mjs","../src/components/component.mjs","../src/components/layout.mjs","../src/components/toast.mjs","../resources/en.mjs","../src/erebus-components.mjs"],"sourcesContent":["const $module = {};\r\n\r\n/**\r\n * Allows to determine if a specific instance is a promise object (or a promise-like object)\r\n * @param {*} value Object to evaluate\r\n * @returns Boolean value to determine if the object is a promise or not\r\n */\r\n$module.isPromise = function(value) {\r\n\tif (!value) {\r\n\t\treturn false;\r\n\t}\r\n\treturn (value instanceof Promise) || (typeof (value.then === 'function') && typeof (value.catch) === 'function');\r\n};\r\n\r\n/** Trims a string by removing leading and trailing white spaces  */\r\n$module.trim = function (value) {\r\n\tif (typeof(value) !== 'string') {\r\n\t\treturn value;\r\n\t}\r\n\treturn value.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n};\r\n\r\nexport default $module;","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n\r\n/**\r\n * Sets a specific cookie\r\n * @param name Name of the cookie to set\r\n * @param value Value to set\r\n * @param timespan Timspan to maintain the cookie in seconds\r\n */\r\n$module.set = function (name, value, timespan) {\r\n\tif (!name) {\r\n\t\tthrow Error('erebus.cookies.set.null_cookie_name');\r\n\t}\r\n\tif (typeof (timespan) !== 'number') {\r\n\t\ttimespan = 3600;\r\n\t}\r\n\tconst expireDate = new Date();\r\n\texpireDate.setTime(expireDate.getTime() + (timespan * 1000));\r\n\tvar cookie = utils.trim(name) + '=' + value + '; expires=' + expireDate.toGMTString() + '; path=/';\r\n\tdocument.cookie = cookie;\r\n};\r\n\r\n/**\r\n * Obtains the value from a cookie\r\n * @param name Name of the cookie to obtain\r\n * @returns Cookie value or null if it is not defined\r\n */\r\n$module.get = function (name) {\r\n\tif (!name) {\r\n\t\treturn null;\r\n\t}\r\n\tvar cookiestring = RegExp(name + '=[^;]+').exec(document.cookie);\r\n\tif (cookiestring) {\r\n\t\treturn decodeURIComponent(cookiestring.toString().replace(/^[^=]+./, ''));\r\n\t}\r\n\treturn '';\r\n};\r\n\r\nexport default $module;","/** Creates a random tiny identified composed by 4 alphanumeric characters */\r\nfunction tinyId() {\r\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\n/** Creates a random short identified composed by 8 alphanumeric characters */\r\nfunction shortId() {\r\n\treturn tinyId() + tinyId();\r\n}\r\n\r\n/** Creates a random values simulating a global global unique identifier */\r\nfunction guid() {\r\n\treturn tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ '-' + tinyId()\r\n\t\t+ tinyId();\r\n}\r\n\r\nexport default { tinyId, shortId, guid };","const $module = {};\r\n\r\n/**\r\n * Returns a promise fullfilled when the document has been loaded and parsed.\r\n * @returns Promise to be fulfilled once the document is ready\r\n */\r\n$module.documentReady = function() {\r\n\tif (document.readyState !== 'loading') {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (typeof (document.addEventListener) === 'function') {\r\n\t\treturn new Promise(function(resolve) {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', resolve, false);\r\n\t\t});\r\n\t}\r\n\tif (typeof (document.attachEvent) === 'function') {\r\n\t\treturn new Promise(function(resolve) {\r\n\t\t\tdocument.attachEvent('onreadystatechange', function () {\r\n\t\t\t\tif (document.readyState === 'complete') {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tconsole.error('The current browser event management is not supported by the Erebus framework');\r\n\treturn Promise.reject('erebus.events.unsuported_browser');\r\n};\r\n\r\n/**\r\n * Internal method to assign an animation class to an element and invoke a callback when is completed\r\n * @param target Reference to the HTMLElement (or ErebusElement) to animate\r\n * @param animationClass String with the CSS animation name to apply\r\n */\r\n$module.animate = function(target, animationClass) {\r\n\tif (!target) {\r\n\t\treturn Promise.reject('erebus.events.wait_animation.invalid_target');\r\n\t} else if (!animationClass) {\r\n\t\treturn Promise.reject('erebus.events.wait_animation.invalid_animation');\r\n\t}\r\n\treturn new Promise(function(resolve) {\r\n\t\t// registers the event handler\r\n\t\ttarget.addEventListener('animationend', function () {\r\n\t\t\tresolve();\r\n\t\t}, { capture: false, once: true });\r\n\r\n\t\t// implements the animation\r\n\t\tif (target.className === '') {\r\n\t\t\ttarget.className = animationClass;\r\n\t\t} else if (target.classList) {\r\n\t\t\ttarget.classList.add(animationClass);\r\n\t\t} else if (typeof (target.addClass) === 'function') {\r\n\t\t\ttarget.addClass(animationClass);\r\n\t\t} else {\r\n\t\t\ttarget.className += ' ' + animationClass;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default $module;","/** Invokes a function with exception management */\r\nfunction trigger(fnc, ...params) {\r\n\tif (fnc === null || fnc === undefined) {\r\n\t\treturn;\r\n\t} else if (typeof(fnc) !== 'function') {\r\n\t\tthrow new Error('erebus.handler.trigger.invalid_function');\r\n\t}\r\n\ttry {\r\n\t\treturn fnc.call(null, ...params);\r\n\t} catch (ex) {\r\n\t\tthrow new Error('erebus.handlers.trigger.function_error', ex);\r\n\t}\r\n}\r\n\r\n/** Invokes a function with exception management */\r\nfunction triggerAsPromise(fnc, ...params) {\r\n\tif (fnc === null || fnc === undefined) {\r\n\t\treturn Promise.resolve();\r\n\t} else if (typeof(fnc) !== 'function') {\r\n\t\treturn Promise.reject('erebus.handler.trigger_promise_function.invalid_function');\r\n\t}\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\ttry {\r\n\t\t\tconst result = fnc.call(null, ...params);\r\n\t\t\tresolve(result);\r\n\t\t} catch (ex) {\r\n\t\t\tconsole.error('erebus.handlers.trigger_promise_function.function_error', ex);\r\n\t\t\treject(ex);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default { trigger, triggerAsPromise };","import utils from './utils.mjs';\r\n\r\nconst $module = {};\r\n/** Internal scoped variable holders */\r\nconst $scope = {};\r\n/** Holds all the estandard parsers defined for the library */\r\n$scope.parsers = {};\r\n\r\n/** Creates the underlying XMLHTTP object used to execute ajax calls */\r\nfunction createXmlHttp() {\r\n\tif (window.XMLHttpRequest) {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t}\r\n\ttry {\r\n\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t} catch (ex) {\r\n\t\ttry {\r\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t} catch (ex) {\r\n\t\t\tthrow Error('erebus.http.xmlhttp_error');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method to extract the response headers associated with a particular XMLHTTP request\r\n * @param request Instance of the XMLHTTP that initiated the request\r\n * @returns Object with all the headers as attributes\r\n */\r\nfunction getResponseHeaders(request) {\r\n\tconst headers = {};\r\n\tlet rawHeaders = request.getAllResponseHeaders();\r\n\tif (rawHeaders) {\r\n\t\trawHeaders = rawHeaders.split('\\r\\n');\r\n\t\tfor (let idx = 0; idx < rawHeaders.length; idx++) {\r\n\t\t\tif (!rawHeaders[idx]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst parts = rawHeaders[idx].split(':');\r\n\t\t\t// NOTE: on older browsers the header name can have mixed case, on recent browsers it is only lowercase\r\n\t\t\tconst headerName = utils.trim(parts[0]).toLowerCase();\r\n\t\t\tconst headerValue = utils.trim(parts[1]);\r\n\t\t\tif (headerName && headerValue) {\r\n\t\t\t\theaders[headerName] = headerValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn headers;\r\n}\r\n\r\n/**\r\n * Internal utility method to set request headers\r\n * @param {*} request XHR object representing the request\r\n * @param {*} headers Object with the headers to set. Each header is an attribute in the object\r\n */\r\nfunction setRequestHeaders(request, headers) {\r\n\tif (headers) {\r\n\t\tfor (var headerName in headers) {\r\n\t\t\trequest.setRequestHeader(headerName, headers[headerName]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** Parses a response as a JSON */\r\n$scope.parsers['json'] = function (response) {\r\n\ttry {\r\n\t\treturn JSON.parse(response);\r\n\t} catch (ex) {\r\n\t\tconst err = new Error('erebus.http.json_parse_error');\r\n\t\terr.cause = ex;\r\n\t\terr.response = response;\r\n\t\tthrow err;\r\n\t}\r\n};\r\n\r\n/** Internal method to obtain the proper parser according to the content type or null if no transformations are required */\r\nfunction getResponseParser(headers) {\r\n\tif (headers && headers['content-type'] === 'application/json') {\r\n\t\treturn $scope.parsers['json'];\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n *\r\n * @param url String with the resource URL to be requested\r\n * @param options Object with the options to execute the request. The values are:\r\n * \t\t\t\t\t- method: String with the HTTP method to execute: GET, POST, PUT, DELETE. If this is not provided, GET will be used by default.\r\n * \t\t\t\t\t- async: Boolean value to determine if the request should be asynchronous (true) or not. By default it is true.\r\n *                  - data: Data to be included in a POST, PUT or DELETE request\r\n * @returns Promise to be fulfilled according to the HTTP request result\r\n */\r\nfunction executeRequest(method, url, options) {\r\n\tif (typeof (url) !== 'string' || !url) {\r\n\t\treturn Promise.reject('erebus.http.null_url');\r\n\t}\r\n\tif (!options) {\r\n\t\toptions = {};\r\n\t}\r\n\tif (!method) {\r\n\t\tmethod = 'GET';\r\n\t}\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tconst request = createXmlHttp();\r\n\t\trequest.onreadystatechange = function () {\r\n\t\t\tif (request.readyState == 4 || request.readyState === 'complete') {\r\n\t\t\t\tif (request.status !== 200) {\r\n\t\t\t\t\tconst err = new Error('http_error[' + request.status + ']');\r\n\t\t\t\t\terr.status = request.status;\r\n\t\t\t\t\terr.response = request.responseText;\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar response = request.responseText;\r\n\t\t\t\t\tconst headers = getResponseHeaders(request);\r\n\t\t\t\t\tconst parser = getResponseParser(headers);\r\n\t\t\t\t\tif (parser) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = parser(response);\r\n\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\treject(ex);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof (options.interceptor) === 'function') {\r\n\t\t\t\t\t\tconst result = options.interceptor(response, headers);\r\n\t\t\t\t\t\tif (result !== undefined) {\r\n\t\t\t\t\t\t\tresponse = result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.open(method, url, options.async !== false);\r\n\t\tsetRequestHeaders(request, options.headers);\r\n\t\tif (method === 'GET' || !options.data) {\r\n\t\t\trequest.send();\r\n\t\t} else {\r\n\t\t\trequest.send(options.data);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Executes a HTTP GET request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.get = function (url, options) {\r\n\treturn executeRequest('GET', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP POST request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.post = function (url, options) {\r\n\treturn executeRequest('POST', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP PUT request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.put = function (url, options) {\r\n\treturn executeRequest('PUT', url, options);\r\n};\r\n\r\n/**\r\n * Executes a HTTP DELETE request\r\n * @param {string} url String with the resource URL to request\r\n * @param {object} options Object with the options to execute the request.  The attributes are:\r\n * \t\t\t- headers: Object with the headers to pass\r\n * \t\t\t- interceptor: Optional function to capture and process the response received.  The function will receive\r\n * \t\t\t\t\ttwo parameters: the response content and the response headers\r\n * \t\t\t- async: Optional boolean value to determine if the call should be asynchronous or not. By default all\r\n * \t\t\t\t\trequests are asynchronous\r\n * \t\t\t- data: Data to include in the post request\r\n * @returns Promise to be fullfilled or rejecting according to the executed request\r\n */\r\n$module.delete = function (url, options) {\r\n\treturn executeRequest('DELETE', url, options);\r\n};\r\n\r\n/**\r\n * Loads a JavaScript resource dynamically\r\n * @param url URL to load the script from it\r\n * @returns Promise that allows to handle the script loading actions\r\n */\r\n$module.loadScript = function (url) {\r\n\treturn new Promise((resolve) => {\r\n\t\tvar element = document.createElement('script');\r\n\t\telement.src = url;\r\n\t\telement.type = 'text/javascript';\r\n\t\telement.async = false;\r\n\t\telement.onerror = () => {\r\n\t\t\t/*\r\n\t\t\treject(errorHandler.create({\r\n\t\t\t\tmodule: $moduleName,\r\n\t\t\t\tcode: `erebus.http.load_script_error[${url}]`\r\n\t\t\t})); // TODO: collect error info\r\n\t\t\t*/\r\n\t\t};\r\n\t\telement.onload = () => {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t\tdocument.head.appendChild(element);\r\n\t});\r\n};\r\n\r\nexport default $module;","import utils from './utils.mjs';\r\nimport http from './http.mjs';\r\nimport random from './random.mjs';\r\n\r\nconst $scope = {};\r\n\r\n/**\r\n * Parses a string HTML content and returns its content or null if it is not HTML content\r\n * @param {string} content HTML content to parse\r\n * @returns DOM elements representing the content\r\n */\r\nfunction parseHTML(content) {\r\n\tif (!content || typeof (content) !== 'string') {\r\n\t\treturn [];\r\n\t}\r\n\tconst holder = document.createElement('div');\r\n\tholder.innerHTML = content;\r\n\treturn [...holder.childNodes];\r\n}\r\n\r\n/**\r\n * Removes all the child nodes from a specific element\r\n * @param {HTMLElement} Element to remove the childs from it\r\n */\r\nfunction removeAllChild(element) {\r\n\tif (!element || !(element instanceof HTMLElement)) {\r\n\t\treturn;\r\n\t}\r\n\twhile (element.firstChild) {\r\n\t\telement.removeChild(element.firstChild);\r\n\t}\r\n}\r\n\r\n/**\r\n * Executes a deep copy of an HTMLElement\r\n * @param {HTMLElement} sourceElement Element to copy\r\n * @returns Copy of the element\r\n */\r\nfunction cloneHTMLElement(sourceElement) {\r\n\tif (!sourceElement || !(sourceElement instanceof HTMLElement)) {\r\n\t\treturn null;\r\n\t}\r\n\tconst clonedElement = sourceElement.cloneNode(true);\r\n\tif (clonedElement.nodeType === 1) {\r\n\t\tclonedElement.removeAttribute('id'); // the element identifier should not be cloned\r\n\t}\r\n\treturn clonedElement;\r\n}\r\n\r\n/**\r\n * Internal method to create an ErebusElement based on the data provided\r\n * @param {*} source String with the selector, string with HTML code (to create a wrapper for it), reference to an HTMLElement\r\n * @returns\r\n */\r\nfunction createErebusElement(source) {\r\n\tif (!source) {\r\n\t\treturn null;\r\n\t} else if (source instanceof ErebusElement) {\r\n\t\treturn source;\r\n\t} else if (source === 'body' || source === document.body) {\r\n\t\tif (!$scope.body) {\r\n\t\t\t$scope.body = new ErebusElement(document.body);\r\n\t\t}\r\n\t\treturn $scope.body;\r\n\t} else if (source instanceof HTMLElement) {\r\n\t\treturn new ErebusElement(source);\r\n\t} else if (typeof (source) === 'string') {\r\n\t\tvar nativeSource;\r\n\t\tif (source.startsWith('<') && source.endsWith('>')) {\r\n\t\t\tnativeSource = parseHTML(source);\r\n\t\t} else if (source.startsWith('#')) {\r\n\t\t\tnativeSource = document.getElementById(source.substring(1));\r\n\t\t\tif (!nativeSource) {\r\n\t\t\t\tthrow Error(`erebus.element.unknown_element_id[${source}]`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnativeSource = document.querySelectorAll(source);\r\n\t\t\tif (nativeSource.length === 0) {\r\n\t\t\t\tthrow Error(`erebus.element.unknown_selector[${source}]`);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new ErebusElement(nativeSource);\r\n\t}\r\n}\r\n\r\n/** Wrapper to allow common methods to handle HTML content */\r\nclass ErebusElement {\r\n\t#wrappedElements;\r\n\t#hidden;\r\n\r\n\tconstructor(element) {\r\n\t\tthis.#hidden = false;\r\n\t\tif (element instanceof HTMLElement) {\r\n\t\t\tthis.#wrappedElements = [];\r\n\t\t\tthis.#wrappedElements.push(element);\r\n\t\t} else if (element instanceof NodeList) {\r\n\t\t\tthis.#wrappedElements = Array.from(element);\r\n\t\t} else if (Array.isArray(element)) {\r\n\t\t\tthis.#wrappedElements = element;\r\n\t\t} else {\r\n\t\t\tthrow Error('erebus.element.unknown_type[' + typeof (element) + ']');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Iterates each wrapped element and invokes a handler that receives each separate instane\r\n\t * @param {function} handler Function that receives each separated HTMLElement wrapped, the function\r\n\t * \t\t\treceives the instance and an integer with the index of the element\r\n\t */\r\n\teach(handler) {\r\n\t\tfor (let wdx = 0; wdx < this.#wrappedElements.length; wdx++) {\r\n\t\t\tconst result = handler(this.#wrappedElements[wdx], wdx);\r\n\t\t\tif (result === false) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the innerHTML on the wrapped elements\r\n\t */\r\n\tset innerHTML(value) {\r\n\t\tthis.each(element => {\r\n\t\t\telement.innerHTML = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** Remove all the content from the current instance */\r\n\tclear() {\r\n\t\tthis.each((element) => {\r\n\t\t\telement.innerHTML = '';\r\n\t\t\tremoveAllChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the content inside the wrapped elements.  This method is preferred over innerHTML\r\n\t * since it cleans the event listener associated with the child nodes.\r\n\t * @param {*} value String with the content to add (text or HTML), a reference to a HTMLElement to set as the content\r\n\t * \t\t\tor a reference to another ErebusElement.\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tcontent(value) {\r\n\t\tthis.each((element, index) => {\r\n\t\t\tif (typeof (value) === 'string') {\r\n\t\t\t\telement.innerHTML = value;\r\n\t\t\t} else if (value instanceof HTMLElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t}\r\n\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\telement.innerHTML = '';\r\n\t\t\t\tremoveAllChild(element);\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tvalue.setParentNode(element);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue.clone().setParentNode(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the current instance to a specific parent\r\n\t * @param {*} parent String with the parent selector, reference to the HTMLElement to use as a parent or\r\n\t * \t\t\treference to an ErebusElement or null to detach the wrapped elements\r\n\t * @returns The current wrapper instance\r\n\t */\r\n\tsetParentNode(parent) {\r\n\t\tif (!parent) {\r\n\t\t\tthis.each(element => {\r\n\t\t\t\tif (element.parentNode) {\r\n\t\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (parent) === 'string') {\r\n\t\t\tparent = createErebusElement(parent);\r\n\t\t} else if (typeof (parent.appendChild) !== 'function') {\r\n\t\t\tthrow Error('erebus.wrapper.append_to.invalid_parent[' + typeof (parent) + ']');\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tparent.appendChild(element);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Alias to the setParent node method that allows to enable compatibility with DOM elements */\r\n\tset parentNode(parent) {\r\n\t\tthis.setParentNode(parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Append a child element to the wrapped element\r\n\t * @param {*} value String with the HTML element to add or reference to the HTML element to add or\r\n\t * \t\t\treference to the ErebusElement to add.\r\n\t */\r\n\tappendChild(value) {\r\n\t\tif (typeof (value) === 'string') {\r\n\t\t\tconst parsedContent = parseHTML(value);\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tfor (let idx = 0; idx < parsedContent.length; idx++) {\r\n\t\t\t\t\tconst content = parsedContent[idx];\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(content);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(content));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.each((element, index) => {\r\n\t\t\t\tif (value instanceof HTMLElement) {\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\telement.appendChild(value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement.appendChild(cloneHTMLElement(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value instanceof ErebusElement) {\r\n\t\t\t\t\tvalue.each(innerElement => {\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\telement.appendChild(innerElement);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement.appendChild(cloneHTMLElement(innerElement));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @param {object} options Optional object with the options to set the listener (see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener)\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\taddEventListener(eventName, listener, options) {\r\n\t\tif (!eventName) {\r\n\t\t\tthrow Error('erebus.element.add_listener.null_event_name');\r\n\t\t} else if (typeof (listener) === 'function') {\r\n\t\t\tif (options === undefined) {\r\n\t\t\t\toptions = { capture: false };\r\n\t\t\t}\r\n\t\t\tthis.each(element => {\r\n\t\t\t\telement.addEventListener(eventName, listener, options);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a single execution listener to the current instance and its wrapped elements\r\n\t * @param {string} eventName Name of the event. For example click.\r\n\t * @param {function} listener Function to invoke when the event is triggered\r\n\t * @returns Current element instance to write fluid expressions\r\n\t */\r\n\tonce(eventName, listener) {\r\n\t\treturn this.addEventListener(eventName, listener, { capture: false, once: true });\r\n\t}\r\n\r\n\t/** Allows to determine if the element is hidden or not */\r\n\tget isHidden() {\r\n\t\treturn this.#hidden;\r\n\t}\r\n\r\n\t/** Hides the wrapped elements to make it invisible */\r\n\thide() {\r\n\t\tif (this.#hidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#hidden = true;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (computedDisplay && computedDisplay !== 'none') {\r\n\t\t\t\telement.originalDisplay = computedDisplay;\r\n\t\t\t}\r\n\t\t\telement.style.display = 'none';\r\n\t\t});\r\n\t}\r\n\r\n\t/** Shows the wrapped elements to make it visible */\r\n\tshow() {\r\n\t\tthis.#hidden = false;\r\n\t\tthis.each(element => {\r\n\t\t\tconst computedDisplay = getComputedStyle(element).getPropertyValue('display');\r\n\t\t\tif (!computedDisplay || computedDisplay === 'none') {\r\n\t\t\t\tif (element.originalDisplay) {\r\n\t\t\t\t\telement.style.display = element.originalDisplay;\r\n\t\t\t\t\tdelete element.originalDisplay;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style.display = 'block';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Clone the current instance */\r\n\tclone() {\r\n\t\tconst clonedWrapped = [];\r\n\t\tthis.each(element => {\r\n\t\t\tclonedWrapped.push(cloneHTMLElement(element));\r\n\t\t});\r\n\t\treturn new ErebusElement(clonedWrapped);\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\taddClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (!element.className) {\r\n\t\t\t\t\telement.className = className;\r\n\t\t\t\t} else if (element.classList) {\r\n\t\t\t\t\telement.classList.add(className);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\t\tif (!regex.test(element.className)) {\r\n\t\t\t\t\t\telement.className += ' ' + className;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Adds a new CSS class to the HTMLElements wrapped by the current instance */\r\n\tremoveClass(...classes) {\r\n\t\tif (!classes || classes.length === 0) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.each(element => {\r\n\t\t\tif (!element.className) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfor (var cdx = 0; cdx < classes.length; cdx++) {\r\n\t\t\t\tconst className = utils.trim(classes[cdx]);\r\n\t\t\t\tif (!className || typeof (className) !== 'string') {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst regex = new RegExp('(^|\\\\s)(' + className + ')($|\\\\s)', 'g');\r\n\t\t\t\tif (regex.test(element.className)) {\r\n\t\t\t\t\telement.className = element.className.replace(regex, '');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Set the CSS class name for the HTMLElements wrapped by the current instance */\r\n\tset className(value) {\r\n\t\tvalue = utils.trim(value);\r\n\t\tthis.each(element => {\r\n\t\t\telement.className = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/** Loads the content from an external resource inside the element represented by the current instance */\r\n\tload(url) {\r\n\t\treturn http.get(url).then((response) => {\r\n\t\t\tthis.content(response);\r\n\t\t}).catch((err) => {\r\n\t\t\tconst errorId = random.shortId();\r\n\t\t\tconsole.error(`erebus.element.load_error[${errorId}]`, err);\r\n\t\t\tthis.content(`<div>Error[${errorId}]</div>`);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default createErebusElement;","import handler from './handler.mjs';\r\nimport utils from './utils.mjs';\r\n\r\nconst $scope = {};\r\n// Holds the language defined for the application\r\n$scope.language = null;\r\n// Holds all the resources defined\r\n$scope.resources = {};\r\n\r\n/** Allows to obtain the locale code in the client */\r\nfunction getLocale() {\r\n\tif (navigator.language) {\r\n\t\treturn navigator.language;\r\n\t} else if (navigator.browserLanguage) {\r\n\t\treturn navigator.browserLanguage;\r\n\t}\r\n\treturn 'en-US';\r\n}\r\n\r\n/** Obtains the default language defined for the current system */\r\nfunction getSystemLanguage() {\r\n\treturn getLocale().substr(0, 2);\r\n}\r\n\r\n/**\r\n * Allows to set the language used by the application\r\n * @param {string} value Two letter ISO language code\r\n */\r\nfunction setLanguage(value) {\r\n\t$scope.language = value;\r\n}\r\n\r\n/** Obtains the language defined for the application */\r\nfunction getLanguage() {\r\n\tif (!$scope.language) {\r\n\t\treturn getSystemLanguage();\r\n\t}\r\n\treturn $scope.language;\r\n}\r\n\r\n/**\r\n * Sets the resource bundle for a specific language\r\n * @param {*} resource Object with the labels and values, function providing the object with the label and values\r\n * \t\t\t\tor promise to be fulfilled with the label and values\r\n * @param {*} langCode String with the language code or omit to use the system default language\r\n */\r\nfunction setResourceBundle(resource, langCode) {\r\n\tif (!resource) {\r\n\t\treturn Promise.resolve();\r\n\t}\r\n\tif (!langCode) {\r\n\t\tlangCode = getLanguage();\r\n\t}\r\n\tif (typeof (resource) === 'function') {\r\n\t\tconst result = handler.trigger(resource);\r\n\t\treturn setResourceBundle(result, langCode);\r\n\t} else if (utils.isPromise(resource)) {\r\n\t\treturn resource.then(function (result) {\r\n\t\t\treturn setResourceBundle(result, langCode);\r\n\t\t}).catch(function (ex) {\r\n\t\t\tconst err = Error('erebus.i18n.promise_resource_error');\r\n\t\t\terr.cause = ex;\r\n\t\t\tthrow err;\r\n\t\t});\r\n\t}\r\n\tconst target = $scope.resources[langCode];\r\n\tif (!target) {\r\n\t\t$scope.resources[langCode] = resource;\r\n\t} else {\r\n\t\tObject.assign(target, resource);\r\n\t}\r\n\treturn Promise.resolve();\r\n}\r\n\r\n/**\r\n * Obtains an i18n label for the language defined in the syste,\r\n * @param {*} key Key to obtain the value for it\r\n * @param {*} defaultValue Default value in case that no language resource has been set\r\n */\r\nfunction getLabel(key, defaultValue) {\r\n\tconst langCode = getLanguage();\r\n\tconst resources = $scope.resources[langCode];\r\n\tif (!resources || !resources[key]) {\r\n\t\treturn defaultValue ?? key;\r\n\t}\r\n\treturn resources[key];\r\n}\r\n\r\nexport default { getLocale, getSystemLanguage, setLanguage, getLanguage, setResourceBundle, getLabel };\r\n","/** Internal method to clear and stardardize a path */\r\nfunction clearPath(path) {\r\n\tif (path && typeof (path) === 'string') {\r\n\t\tif (path.startsWith('#')) {\r\n\t\t\tpath = path.substring(1);\r\n\t\t}\r\n\t\tif (path.startsWith('/')) {\r\n\t\t\tpath = path.substring(1);\r\n\t\t}\r\n\t}\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Compares a path against the routing path of a router\r\n * @param {string} routingPath Path of the router\r\n * @param {string} targetPath Path to compare\r\n * @returns Boolean value to determine if the route is equivalent to the path\r\n */\r\nfunction compareStringPaths(routingPath, targetPath) {\r\n\tif (routingPath === '*' || routingPath === targetPath) {\r\n\t\treturn true;\r\n\t}\r\n\tconst routingParts = routingPath.split('/');\r\n\tconst targetParts = targetPath.split('/');\r\n\tfor (var idx = 0; idx < routingParts.length; idx++) {\r\n\t\t// ignore the parameter parts in the routing\r\n\t\tif (routingParts[idx].startsWith(':')) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (routingParts[idx] !== '*' && routingParts[idx] !== targetParts[idx]) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Uses the pattern defined by a routing path to extract the parameters from it\r\n * @param {string} routingPath String with the routing path\r\n * @param {string} targetPath String with the path to extract the parameters from it\r\n */\r\nfunction extractPathParameters(routingPath, targetPath) {\r\n\tconst parameters = {};\r\n\tconst routingParts = routingPath.split('/');\r\n\tconst targetParts = targetPath.split('/');\r\n\tfor (var idx = 0; idx < routingParts.length; idx++) {\r\n\t\tif (!routingParts[idx].startsWith(':')) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tconst paramName = routingParts[idx].substring(1);\r\n\t\tparameters[paramName] = targetParts[idx];\r\n\t}\r\n\treturn parameters;\r\n}\r\n\r\n/** Object to represent a single route */\r\nclass Route {\r\n\t/** Path served by this route */\r\n\t#path;\r\n\t/** Handler used to serve the route represented by this instance */\r\n\t#handler;\r\n\r\n\t/**\r\n\t * Creates a new route to serve a specific path\r\n\t * @param {string} path String with the path to serve\r\n\t * @param {function} handler Function to be invoked when this route is served\r\n\t */\r\n\tconstructor(path, handler) {\r\n\t\tthis.#path = clearPath(path);\r\n\t\tthis.#handler = handler;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the current route instance can match a specific path\r\n\t * @param {string} path Path to evaluate\r\n\t */\r\n\tmatch(path) {\r\n\t\tpath = clearPath(path);\r\n\t\tif (typeof (this.#path) === 'string') {\r\n\t\t\treturn compareStringPaths(this.#path, path);\r\n\t\t} else if (this.#path instanceof RegExp) {\r\n\t\t\treturn this.#path.test(path);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/** Handles a request using this route instance */\r\n\thandle(path) {\r\n\t\tif (!this.#handler) {\r\n\t\t\treturn Promise.reject(new Error(`erebus.route.no_handler[${path}]`));\r\n\t\t}\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tpath = clearPath(path);\r\n\t\t\ttry {\r\n\t\t\t\tvar parameters = extractPathParameters(this.#path, path);\r\n\t\t\t\tvar result = this.#handler(parameters);\r\n\t\t\t\tif (result instanceof Promise) {\r\n\t\t\t\t\tresult.then(resolve).catch(reject);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tconsole.error('erebus.route.handler_error', ex);\r\n\t\t\t\treject(ex);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Internal method with the logic to identify the matching router from a list of possible routes\r\n * @param {array} routeList List containing the routes instances to evaluate\r\n * @param {string} path Path to match\r\n * @returns The matching route or null if no matching route is found\r\n */\r\nfunction getMatchingRouter(routeList, path) {\r\n\tfor (var rdx = 0; rdx < routeList.length; rdx++) {\r\n\t\tlet route = routeList[rdx];\r\n\t\tif (route.match(path)) {\r\n\t\t\treturn route;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nclass RouterEngine {\r\n\t/** Hold the list of routes registered */\r\n\t#routes = [];\r\n\t/** Flag to determine if the routing engine has been started */\r\n\t#started = false;\r\n\t/** Reference to the default router registered */\r\n\t#defaultRouter;\r\n\t/** Reference to the error handler */\r\n\t#onError;\r\n\r\n\t/**\r\n\t * Register a router to handle a specific path\r\n\t * @param {string} path Path to handle\r\n\t * @param {function} handler Handler to be triggered when the path is matched\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\tregister(path, handler) {\r\n\t\tif (!handler || typeof(handler) !== 'function') {\r\n\t\t\tthrow Error(`erebus.router.invalid_handler[${path}]`);\r\n\t\t}\r\n\t\tthis.#routes.push(new Route(path, handler));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Serves a specific path\r\n\t * @param {string} path Path to serve\r\n\t * @returns Promise to be fullfilled (or rejected) after the route is served\r\n\t */\r\n\tserve(path) {\r\n\t\tif (typeof (path) === 'undefined') {\r\n\t\t\tpath = null;\r\n\t\t}\r\n\t\tpath = clearPath(path);\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tvar effectiveRoute = getMatchingRouter(this.#routes, path);\r\n\t\t\tif (!effectiveRoute) {\r\n\t\t\t\teffectiveRoute = this.#defaultRouter;\r\n\t\t\t}\r\n\t\t\tif (!effectiveRoute) {\r\n\t\t\t\treject('erebus.route.no_matching_route_or_default');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\teffectiveRoute.handle(path).then(function () {\r\n\t\t\t\tresolve(true);\r\n\t\t\t}).catch(reject);\r\n\t\t});\r\n\t}\r\n\r\n\t/** Internal method to trigger the routing process based on the current path */\r\n\t#triggerRouting() {\r\n\t\t// TODO: add beforeRoute event\r\n\t\tthis.serve(window.location.hash).then(() => {\r\n\t\t\t// TODO: add afterRoute event\r\n\t\t}).catch((err) => {\r\n\t\t\tconsole.error('erebus.router.error', err);\r\n\t\t\tif (this.#onError) {\r\n\t\t\t\tthis.#onError(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/** Initialize the route engine to start serving requests */\r\n\tstart() {\r\n\t\tif (this.#started) {\r\n\t\t\tconsole.warn('erebus.router.already_started');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#started = true;\r\n\t\twindow.addEventListener('popstate', () => {\r\n\t\t\tthis.#triggerRouting();\r\n\t\t});\r\n\t\tthis.#triggerRouting();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the behavior for the default route (when no other route matches the path)\r\n\t * @param {function} handler Funtion to be invoked when no other route matches the requested path or null to remove the default handler\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\tdefault(handler) {\r\n\t\tif (!handler) {\r\n\t\t\tthis.#defaultRouter = null;\r\n\t\t\treturn this;\r\n\t\t} else if (typeof(handler) != 'function') {\r\n\t\t\tconsole.error('Unable to register a non-function as a default handler for Erebus router');\r\n\t\t\tthrow new Error('erebus.router.invalid_default_handler');\r\n\t\t}\r\n\t\tthis.#defaultRouter = new Route('*', handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the behavior when a route fails\r\n\t * @param {function} handler Funtion to be invoked when the routing causes an error\r\n\t * @returns Instance of the routing engine\r\n\t */\r\n\terror(handler) {\r\n\t\tif (!handler) {\r\n\t\t\tthis.#onError = null;\r\n\t\t\treturn this;\r\n\t\t} else if (typeof (handler) !== 'function') {\r\n\t\t\tconsole.error('Unable to register a non-function as an error handler for Erebus router');\r\n\t\t\tthrow new Error('erebus.router.invalid_error_handler');\r\n\t\t}\r\n\t\tthis.#onError = handler;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nconst router = new RouterEngine();\r\nexport default router;","'use strict';\r\nconsole.log('Erebus Core v0.0.13');\r\n\r\nimport utils from './utils.mjs';\r\nimport cookies from './cookies.mjs';\r\nimport random from './random.mjs';\r\nimport events from './events.mjs';\r\nimport handler from './handler.mjs';\r\nimport element from './element.mjs';\r\nimport http from './http.mjs';\r\nimport i18n from './i18n.mjs';\r\nimport router from './router.mjs';\r\n\r\nexport default { utils, cookies, random, events, handler, element, http, i18n, router };\r\n","import erebus from 'erebus-core';\r\n\r\n/**\r\n * Extracts or creates an HTMLElement\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @param {string} id Identifier of the element to extract or create\r\n * @returns HTMLElement instance\r\n */\r\n export function createHTMLElement(tagName, className, id) {\r\n\tconst element = document.createElement(tagName);\r\n\tif (id) {\r\n\t\telement.setAttribute('id', id);\r\n\t}\r\n\tif (className) {\r\n\t\telement.className = className;\r\n\t}\r\n\treturn element;\r\n}\r\n\r\n/**\r\n * Extracts or creates an ErebusElement\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @param {string} id Identifier of the element to extract or create\r\n * @returns HTMLElement instance\r\n */\r\n export function createElement(tagName, className, id) {\r\n\tconst element = createHTMLElement(tagName, className, id);\r\n\treturn erebus.element(element);\r\n}\r\n\r\n/**\r\n * Extracts or creates an HTMLElement\r\n * @param {string} id Identifier of the element to extract or create\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @returns HTMLElement instance\r\n */\r\n export function getOrCreateElement(id, tagName, className) {\r\n\tvar element = document.getElementById(id);\r\n\tif (!element) {\r\n\t\treturn createElement(tagName, className, id);\r\n\t}\r\n\treturn erebus.element(element);\r\n}\r\n\r\n/**\r\n * Appends an element to the document body.  If the document body is not ready yet\r\n * then schedules a handler to add it to the document once it is ready\r\n * @param {*} element HTMLElement or ErebusElementI'm  to add\r\n */\r\n export function appendToBody(element) {\r\n\tif (!element) {\r\n\t\treturn Promise.reject(Error('erebus.components.append_to_body.null_element'));\r\n\t}\r\n\tif (document.body) {\r\n\t\terebus.element(document.body).appendChild(element);\r\n\t\treturn Promise.resolve(element);\r\n\t}\r\n\treturn new Promise(function(resolve) {\r\n\t\terebus.events.onReady(() => {\r\n\t\t\terebus.element(document.body).appendChild(element);\r\n\t\t\tresolve(element);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Extracts or creates/render an HTMLElement\r\n * @param {string} tagName Tag name of the element to create if does not exist\r\n * @param {string} id Identifier of the element to extract or create\r\n * @param {string} className CSS class name to asign to the element if does not exist\r\n * @returns Promise invoked after the element has been created and appended to the body\r\n */\r\n export function getOrRenderElement(id, tagName, className) {\r\n\tconst element = getOrCreateElement(id, tagName, className);\r\n\treturn appendToBody(element);\r\n}\r\n\r\n/**\r\n * Copy an attribute from an object to another\r\n * @param {object} target Target object\r\n * @param {object} source Source object\r\n * @param {string} attribute Name of the attribute to copy\r\n * @param {*} defaultValue Optional value to assign if the source object does not contain a value for the attribute\r\n * @returns Boolean value to determine if the source has a valid attribute and was assigned\r\n */\r\n export function copyAttribute(target, source, attribute, defaultValue) {\r\n\tif (!target || !source || !attribute) {\r\n\t\treturn false;\r\n\t}\r\n\tif (Array.isArray(source)) {\r\n\t\tfor (var idx = 0; idx < source.length; idx++) {\r\n\t\t\tif (copyAttribute(target, source[idx], attribute, defaultValue)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tconst sourceValue = source[attribute];\r\n\tif (sourceValue !== undefined && sourceValue !== null) {\r\n\t\ttarget[attribute] = sourceValue;\r\n\t\treturn true;\r\n\t} else if (defaultValue) {\r\n\t\ttarget[attribute] = defaultValue;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/** Base class from which all visual components extends */\r\nexport default class ErebusComponent {\r\n}\r\n","import erebus from 'erebus-core';\r\nimport ErebusComponent, { createElement } from './component.mjs';\r\nimport './layout.css';\r\n\r\nconst $scope = {};\r\n\r\n/**\r\n * Class representing a main page layout.  A layout is the base to organize the content.\r\n */\r\nclass ErebusLayout extends ErebusComponent {\r\n\t/** Allows to determine if the component has been rendered or not */\r\n\t#rendered;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.#rendered = false;\r\n\t}\r\n\r\n\tasync render() {\r\n\t\tif(this.#rendered) {\r\n\t\t\tconsole.warn('erebus.components.layout.already_rendered');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tawait erebus.events.onReady();\r\n\t\tconst element = createElement('div', 'erb-layout', 'erbDivLayout');\r\n\t\telement.setParentNode(document.body);\r\n\t}\r\n}\r\n\r\nexport default function() {\r\n\tif(!$scope.singleton) {\r\n\t\t$scope.singleton = new ErebusLayout();\r\n\t}\r\n\treturn $scope.singleton;\r\n};","import erebus from 'erebus-core';\r\nimport ErebusComponent, { getOrRenderElement, createElement } from './component.mjs';\r\nimport './toast.css';\r\n\r\nconst $scope = {};\r\n$scope.validTypes = { info: 'info', success: 'success', warn: 'warn', error: 'error' };\r\n\r\n/** Extract the default title for a specific toast type */\r\nfunction getDefaultTitle(type) {\r\n\treturn erebus.i18n.getLabel('toast.title.' + type, type);\r\n}\r\n\r\n/** Obtains the top level element that contains all the toasts */\r\nfunction getToastHolder() {\r\n\treturn getOrRenderElement('divErbToastHolder', 'div', 'erb-toast-holder');\r\n}\r\n\r\n/** Internal utility function to create the element with the visual representation of the toast */\r\nfunction createToastElement(specs) {\r\n\tconst element = createElement('div', 'erb-toast erb-' + specs.type, specs.id);\r\n\telement.appendChild('<div class=\"erb-icon\"></div>');\r\n\tif (specs.title !== false) {\r\n\t\tconst titleText = specs.title ?? getDefaultTitle(specs.type);\r\n\t\telement.appendChild('<div class=\"erb-header\">' + titleText + '</div>');\r\n\t}\r\n\tif (specs.message) {\r\n\t\telement.appendChild('<div class=\"erb-body\">' + specs.message + '</div>');\r\n\t}\r\n\tgetToastHolder().then(function(holder) {\r\n\t\tholder.appendChild(element);\r\n\t});\r\n\telement.addClass('erb-bouncein');\r\n\telement.once('animationend', function() {\r\n\t\telement.removeClass('erb-bouncein');\r\n\t});\r\n\treturn element;\r\n}\r\n\r\n/** Class to represent a toast component */\r\nclass ErebusToast extends ErebusComponent {\r\n\t#rendered; // avoid the render method to be invoked twice\r\n\t#specs; // title and message\r\n\r\n\tconstructor(specs) {\r\n\t\tsuper();\r\n\t\tthis.#specs = specs;\r\n\t\tthis.#specs.id = 'divErbToast_' + erebus.random.tinyId();\r\n\t}\r\n\r\n\t/* Generates the visual representation of the component */\r\n\trender(callback) {\r\n\t\tif (this.#rendered) {\r\n\t\t\tconsole.warn('erebus.components.toast.already_rendered');\r\n\t\t\terebus.handler.trigger(callback);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tthis.#rendered = true;\r\n\t\tconst element = createToastElement(this.#specs);\r\n\t\telement.once('click', () => {\r\n\t\t\tthis.dismiss(true);\r\n\t\t});\r\n\t\terebus.handler.trigger(callback);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes the toast body\r\n\t * @param {*} value Argument to define if should be close immediately (0 or true), on a specific time\r\n\t * \t\t\t\texpressed with an integer number representing the number of miliseconds to close it or\r\n\t * \t\t\t\tomit the argument to use the default close timer.\r\n\t */\r\n\tdismiss(value) {\r\n\t\tif(value === true) {\r\n\t\t\tvalue = 0;\r\n\t\t} else if(typeof(value) !== 'number' || value <= 0) {\r\n\t\t\tvalue = 10000;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst element = erebus.element('#' + this.#specs.id);\r\n\t\t\telement.once('animationend', function() {\r\n\t\t\t\telement.setParentNode(null);\r\n\t\t\t});\r\n\t\t\telement.addClass('erb-bounceout');\r\n\t\t}, value);\r\n\t}\r\n}\r\n\r\n/** Internal method to consume the call arguments to create a toast and assemble a specification object based on it */\r\nfunction createSpecs() {\r\n\tif(arguments.length === 0) {\r\n\t\tthrow Error('erebus.components.toast.no_arguments');\r\n\t}\r\n\tvar specs = {};\r\n\tspecs.type = arguments[0]; \r\n\tif(arguments.length === 2) {\r\n\t\tspecs.message = arguments[1];\r\n\t} else if(arguments.length > 2) {\r\n\t\tspecs.title = arguments[1];\r\n\t\tspecs.message = arguments[2];\r\n\t}\r\n\tif(!specs.type) {\r\n\t\tspecs.type = $scope.validTypes.info;\r\n\t} else if(!$scope.validTypes[specs.type]) {\r\n\t\tthrow Error('erebus.components.toast.invalid_type[' + specs.type + ']');\r\n\t}\r\n\tif (!specs.message) {\r\n\t\tthrow Error('erebus.components.toast.null_message');\r\n\t}\r\n\treturn specs;\r\n}\r\n\r\n/**\r\n * Generic method to create a toast with a dynamic type. Should receive: \r\n * The toast type and the message\r\n * -or-\r\n * The toast type, the title and the message\r\n */\r\nconst $module = function () {\r\n\tconst specs = createSpecs(...arguments);\r\n\treturn new ErebusToast(specs).render();\r\n};\r\n\r\n/**\r\n * Creates an informational toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.info = function() {\r\n\treturn $module($scope.validTypes.info, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates a success toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.success = function() {\r\n\treturn $module($scope.validTypes.success, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates a warning toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.warn = function() {\r\n\treturn $module($scope.validTypes.warn, ...arguments);\r\n};\r\n\r\n/**\r\n * Creates an error toast. Should receive: the toast message or the toast title and the message\r\n */\r\n$module.error = function() {\r\n\treturn $module($scope.validTypes.error, ...arguments);\r\n};\r\n\r\nexport default $module;\r\n","export default {\r\n\t\"erebus\": \"Erebus framework\",\r\n\t\"toast.title.success\": \"Success\",\r\n\t\"toast.title.info\": \"Information\",\r\n\t\"toast.title.warn\": \"Attention!\",\r\n\t\"toast.title.error\": \"Error!\",\r\n\t\"button.close\": \"Close\",\r\n\t\"button.yes\": \"Yes\",\r\n\t\"button.no\": \"No\"\r\n};\r\n","'use strict';\r\nimport erebus from 'erebus-core';\r\nimport './erebus-components.css';\r\nimport './badge.css';\r\nimport layout from './components/layout.mjs';\r\nimport toast from './components/toast.mjs';\r\nconsole.log('Erebus Components v0.0.4');\r\n\r\nconst $scope = {};\r\n$scope.handlers = {};\r\n$scope.handlers.componentReady = [];\r\n\r\nconst langCode = erebus.i18n.getLanguage();\r\nimport resources from '../resources/en.mjs';\r\nconsole.log(resources);\r\nerebus.i18n.setResourceBundle(resources, langCode);\r\n\r\n// declares the erebus components once the document is ready\r\nconst components = {};\r\ncomponents.layout = layout;\r\n//components.surface = surface();\r\n//components.protect = function() {\r\n//\treturn protect().render();\r\n//};\r\ncomponents.toast = toast;\r\n//components.dialog = dialog;\r\n\r\nerebus.events.onReady(function () {\r\n\tfor(var idx=0; idx < $scope.handlers.componentReady.length; idx++) {\r\n\t\terebus.handler.trigger($scope.handlers.componentReady[idx]);\r\n\t}\r\n});\r\n\r\n/**\r\n * Allows to register a callback function to be invoked once the components have been initialized\r\n * @param {*} callback Handler to execute\r\n */\r\ncomponents.onReady = function (callback) {\r\n\tif (callback && typeof (callback) === 'function') {\r\n\t\t$scope.handlers.componentReady.push(callback);\r\n\t\t\r\n\t}\r\n};\r\n\r\nerebus.components = components;\r\nexport default erebus;\r\n"],"names":["$module","value","Promise","then","replace","tinyId","Math","random","toString","substring","$module$3","set","name","timespan","Error","expireDate","Date","setTime","getTime","cookie","utils","trim","toGMTString","document","get","cookiestring","RegExp","exec","decodeURIComponent","shortId","guid","$module$2","documentReady","readyState","resolve","addEventListener","attachEvent","console","error","reject","animate","target","animationClass","capture","once","className","classList","add","addClass","handler","trigger","fnc","params","call","ex","triggerAsPromise","$scope","executeRequest","method","url","options","request","window","XMLHttpRequest","ActiveXObject","createXmlHttp","onreadystatechange","status","err","response","responseText","headers","rawHeaders","getAllResponseHeaders","split","idx","length","parts","headerName","toLowerCase","headerValue","getResponseHeaders","parser","parsers","getResponseParser","result","interceptor","undefined","open","async","setRequestHeader","setRequestHeaders","data","send","$scope$5","JSON","parse","cause","post","put","delete","loadScript","element","createElement","src","type","onerror","onload","head","appendChild","parseHTML","content","holder","innerHTML","childNodes","removeAllChild","HTMLElement","firstChild","removeChild","cloneHTMLElement","sourceElement","clonedElement","cloneNode","nodeType","removeAttribute","createErebusElement","source","ErebusElement","body","nativeSource","startsWith","endsWith","getElementById","querySelectorAll","wrappedElements","hidden","constructor","this","push","NodeList","Array","from","isArray","each","wdx","clear","index","setParentNode","clone","parent","parentNode","parsedContent","innerElement","eventName","listener","isHidden","hide","computedDisplay","getComputedStyle","getPropertyValue","originalDisplay","style","display","show","clonedWrapped","classes","cdx","test","removeClass","regex","load","http","catch","errorId","getLocale","navigator","language","browserLanguage","getSystemLanguage","substr","getLanguage","resources","i18n","setLanguage","setResourceBundle","resource","langCode","isPromise","Object","assign","getLabel","key","defaultValue","clearPath","path","Route","match","routingPath","targetPath","routingParts","targetParts","compareStringPaths","handle","parameters","extractPathParameters","router","routes","started","defaultRouter","onError","register","serve","effectiveRoute","routeList","rdx","route","getMatchingRouter","triggerRouting","location","hash","start","warn","default","log","erebus","cookies","events","tagName","id","setAttribute","createHTMLElement","getOrRenderElement","getOrCreateElement","onReady","appendToBody","ErebusComponent","_createClass","_classCallCheck","_rendered","WeakMap","ErebusLayout","_ErebusComponent","_inherits","_render","_super","_createSuper","_this","_classPrivateFieldInitSpec","_assertThisInitialized","writable","_classPrivateFieldSet","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_classPrivateFieldGet","abrupt","stop","apply","arguments","createToastElement","specs","title","_specs$title","titleText","message","$scope$1","validTypes","info","success","_specs","ErebusToast","callback","_this2","dismiss","_this3","setTimeout","createSpecs","render","concat","prototype","slice","handlers","componentReady","components","singleton","toast"],"mappings":"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"}